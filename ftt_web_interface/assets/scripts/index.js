/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/database_interface/Image.js":
/*!*****************************************!*\
  !*** ./src/database_interface/Image.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Image: () => (/* binding */ Image),\n/* harmony export */   ImageInterface: () => (/* binding */ ImageInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Image data container class.\nclass Image {\n  constructor(\n    id,\n    segmentId,\n    secs,\n    imageFilename,\n    imageData,\n    description,\n    origSecs\n  ) {\n    this.id = id;\n    this.segmentId = segmentId;\n    this.secs = secs;\n    this.imageFilename = imageFilename;\n    this.imageData = imageData;\n    this.description = description;\n    this.origSecs = origSecs;\n  }\n}\n\n//Image database interaction class.\nclass ImageInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"segment_id\",\n      \"secs\",\n      \"image_filename\",\n      \"image_data\",\n      \"description\",\n      \"orig_secs\",\n    ];\n  }\n\n  async get(segmentId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"image\",\n      \"segment_id=\" + segmentId\n    );\n    return data.map(\n      (entry) =>\n        new Image(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          \"data:image/jpeg;base64, \" + atob(entry[4]),\n          entry[5],\n          entry[6]\n        )\n    );\n  }\n\n  async post(segmentId, imageFilename, imageData, description) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: segmentId,\n      [this.paramNames[3]]: imageFilename,\n      [this.paramNames[4]]: imageData,\n      [this.paramNames[5]]: description,\n      [this.paramNames[6]]: new Date().getTime() / 1000,\n    };\n    await this.serverInterface.sendPostRequest(\"image\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"image\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL0ltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL0ltYWdlLmpzPzYxZTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vSW1hZ2UgZGF0YSBjb250YWluZXIgY2xhc3MuXG5leHBvcnQgY2xhc3MgSW1hZ2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBpZCxcbiAgICBzZWdtZW50SWQsXG4gICAgc2VjcyxcbiAgICBpbWFnZUZpbGVuYW1lLFxuICAgIGltYWdlRGF0YSxcbiAgICBkZXNjcmlwdGlvbixcbiAgICBvcmlnU2Vjc1xuICApIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5zZWdtZW50SWQgPSBzZWdtZW50SWQ7XG4gICAgdGhpcy5zZWNzID0gc2VjcztcbiAgICB0aGlzLmltYWdlRmlsZW5hbWUgPSBpbWFnZUZpbGVuYW1lO1xuICAgIHRoaXMuaW1hZ2VEYXRhID0gaW1hZ2VEYXRhO1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB0aGlzLm9yaWdTZWNzID0gb3JpZ1NlY3M7XG4gIH1cbn1cblxuLy9JbWFnZSBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBJbWFnZUludGVyZmFjZSB7XG4gIGNvbnN0cnVjdG9yKHNlcnZlckludGVyZmFjZSkge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMuc2VydmVySW50ZXJmYWNlID0gc2VydmVySW50ZXJmYWNlO1xuICAgIHRoaXMucGFyYW1OYW1lcyA9IFtcbiAgICAgIFwiaWRcIixcbiAgICAgIFwic2VnbWVudF9pZFwiLFxuICAgICAgXCJzZWNzXCIsXG4gICAgICBcImltYWdlX2ZpbGVuYW1lXCIsXG4gICAgICBcImltYWdlX2RhdGFcIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIixcbiAgICAgIFwib3JpZ19zZWNzXCIsXG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldChzZWdtZW50SWQpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcbiAgICAgIFwiaW1hZ2VcIixcbiAgICAgIFwic2VnbWVudF9pZD1cIiArIHNlZ21lbnRJZFxuICAgICk7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PlxuICAgICAgICBuZXcgSW1hZ2UoXG4gICAgICAgICAgZW50cnlbMF0sXG4gICAgICAgICAgZW50cnlbMV0sXG4gICAgICAgICAgZW50cnlbMl0sXG4gICAgICAgICAgZW50cnlbM10sXG4gICAgICAgICAgXCJkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCBcIiArIGF0b2IoZW50cnlbNF0pLFxuICAgICAgICAgIGVudHJ5WzVdLFxuICAgICAgICAgIGVudHJ5WzZdXG4gICAgICAgIClcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgcG9zdChzZWdtZW50SWQsIGltYWdlRmlsZW5hbWUsIGltYWdlRGF0YSwgZGVzY3JpcHRpb24pIHtcbiAgICAvL0NyZWF0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMV1dOiBzZWdtZW50SWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzNdXTogaW1hZ2VGaWxlbmFtZSxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNF1dOiBpbWFnZURhdGEsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzVdXTogZGVzY3JpcHRpb24sXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzZdXTogbmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwLFxuICAgIH07XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFBvc3RSZXF1ZXN0KFwiaW1hZ2VcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBkZWxldGUoaWQpIHtcbiAgICAvL0RlbGV0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZERlbGV0ZVJlcXVlc3QoXCJpbWFnZVwiLCBcImlkPVwiICsgaWQpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/Image.js\n");

/***/ }),

/***/ "./src/database_interface/ItoReason.js":
/*!*********************************************!*\
  !*** ./src/database_interface/ItoReason.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ItoReason: () => (/* binding */ ItoReason),\n/* harmony export */   ItoReasonInterface: () => (/* binding */ ItoReasonInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//ItoReason data container class.\nclass ItoReason {\n  constructor(id, shortDescription) {\n    this.id = id;\n    this.shortDescription = shortDescription;\n  }\n}\n\n//ItoReason database interaction class.\nclass ItoReasonInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"short_description\"];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"ito_reason\");\n    return data.map((entry) => new ItoReason(entry[0], entry[1]));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL0l0b1JlYXNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9kYXRhYmFzZV9pbnRlcmZhY2UvSXRvUmVhc29uLmpzPzQ4NmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vSXRvUmVhc29uIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIEl0b1JlYXNvbiB7XG4gIGNvbnN0cnVjdG9yKGlkLCBzaG9ydERlc2NyaXB0aW9uKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuc2hvcnREZXNjcmlwdGlvbiA9IHNob3J0RGVzY3JpcHRpb247XG4gIH1cbn1cblxuLy9JdG9SZWFzb24gZGF0YWJhc2UgaW50ZXJhY3Rpb24gY2xhc3MuXG5leHBvcnQgY2xhc3MgSXRvUmVhc29uSW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1wiaWRcIiwgXCJzaG9ydF9kZXNjcmlwdGlvblwiXTtcbiAgfVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcIml0b19yZWFzb25cIik7XG4gICAgcmV0dXJuIGRhdGEubWFwKChlbnRyeSkgPT4gbmV3IEl0b1JlYXNvbihlbnRyeVswXSwgZW50cnlbMV0pKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/ItoReason.js\n");

/***/ }),

/***/ "./src/database_interface/Leg.js":
/*!***************************************!*\
  !*** ./src/database_interface/Leg.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Leg: () => (/* binding */ Leg),\n/* harmony export */   LegInterface: () => (/* binding */ LegInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Leg data container class.\nclass Leg {\n  constructor(\n    id,\n    shiftId,\n    startTime,\n    endTime,\n    weatherId,\n    defaultPoseSourceId,\n    note,\n    number\n  ) {\n    this.id = id;\n    this.shiftId = shiftId;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.weatherId = weatherId;\n    this.defaultPoseSourceId = defaultPoseSourceId;\n    this.note = note;\n    this.number = number;\n  }\n}\n\n//Leg database interaction class.\nclass LegInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"shift_id\",\n      \"starttime_secs\",\n      \"endtime_secs\",\n      \"weather_id\",\n      \"default_pose_source_id\",\n      \"note\",\n      \"number\",\n    ];\n  }\n\n  async get(shiftId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"leg\",\n      \"shift_id=\" + shiftId\n    );\n    return data.map(\n      (entry) =>\n        new Leg(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          entry[4],\n          entry[5],\n          entry[6],\n          entry[7]\n        )\n    );\n  }\n\n  async post(shiftId, weatherId, defaultPoseSourceId, note) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: shiftId,\n      [this.paramNames[4]]: weatherId,\n      [this.paramNames[5]]: defaultPoseSourceId,\n      [this.paramNames[6]]: note,\n    };\n    await this.serverInterface.sendPostRequest(\"leg\", data);\n  }\n\n  async put(\n    id,\n    action,\n    weatherId = null,\n    defaultPoseSourceId = null,\n    note = null\n  ) {\n    //Update entry in server table.\n    //The action parameter can be either \"edit\" or \"close\".\n    //Mandatory parameters:\n    const data = {\n      [this.paramNames[0]]: id,\n      [\"action\"]: action,\n    };\n    //Optional parameters:\n    Object.assign(\n      data,\n      weatherId !== null && { [this.paramNames[4]]: weatherId },\n      defaultPoseSourceId !== null && { [this.paramNames[5]]: defaultPoseSourceId },\n      note !== null && { [this.paramNames[6]]: note }\n    );\n    await this.serverInterface.sendPutRequest(\"leg\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"leg\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL0xlZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2RhdGFiYXNlX2ludGVyZmFjZS9MZWcuanM/MmY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9MZWcgZGF0YSBjb250YWluZXIgY2xhc3MuXG5leHBvcnQgY2xhc3MgTGVnIHtcbiAgY29uc3RydWN0b3IoXG4gICAgaWQsXG4gICAgc2hpZnRJZCxcbiAgICBzdGFydFRpbWUsXG4gICAgZW5kVGltZSxcbiAgICB3ZWF0aGVySWQsXG4gICAgZGVmYXVsdFBvc2VTb3VyY2VJZCxcbiAgICBub3RlLFxuICAgIG51bWJlclxuICApIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5zaGlmdElkID0gc2hpZnRJZDtcbiAgICB0aGlzLnN0YXJ0VGltZSA9IHN0YXJ0VGltZTtcbiAgICB0aGlzLmVuZFRpbWUgPSBlbmRUaW1lO1xuICAgIHRoaXMud2VhdGhlcklkID0gd2VhdGhlcklkO1xuICAgIHRoaXMuZGVmYXVsdFBvc2VTb3VyY2VJZCA9IGRlZmF1bHRQb3NlU291cmNlSWQ7XG4gICAgdGhpcy5ub3RlID0gbm90ZTtcbiAgICB0aGlzLm51bWJlciA9IG51bWJlcjtcbiAgfVxufVxuXG4vL0xlZyBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBMZWdJbnRlcmZhY2Uge1xuICBjb25zdHJ1Y3RvcihzZXJ2ZXJJbnRlcmZhY2UpIHtcbiAgICAvL1NldCBhcmd1bWVudHMgYXMgcHJvcGVydGllcy5cbiAgICB0aGlzLnNlcnZlckludGVyZmFjZSA9IHNlcnZlckludGVyZmFjZTtcbiAgICB0aGlzLnBhcmFtTmFtZXMgPSBbXG4gICAgICBcImlkXCIsXG4gICAgICBcInNoaWZ0X2lkXCIsXG4gICAgICBcInN0YXJ0dGltZV9zZWNzXCIsXG4gICAgICBcImVuZHRpbWVfc2Vjc1wiLFxuICAgICAgXCJ3ZWF0aGVyX2lkXCIsXG4gICAgICBcImRlZmF1bHRfcG9zZV9zb3VyY2VfaWRcIixcbiAgICAgIFwibm90ZVwiLFxuICAgICAgXCJudW1iZXJcIixcbiAgICBdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHNoaWZ0SWQpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcbiAgICAgIFwibGVnXCIsXG4gICAgICBcInNoaWZ0X2lkPVwiICsgc2hpZnRJZFxuICAgICk7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PlxuICAgICAgICBuZXcgTGVnKFxuICAgICAgICAgIGVudHJ5WzBdLFxuICAgICAgICAgIGVudHJ5WzFdLFxuICAgICAgICAgIGVudHJ5WzJdLFxuICAgICAgICAgIGVudHJ5WzNdLFxuICAgICAgICAgIGVudHJ5WzRdLFxuICAgICAgICAgIGVudHJ5WzVdLFxuICAgICAgICAgIGVudHJ5WzZdLFxuICAgICAgICAgIGVudHJ5WzddXG4gICAgICAgIClcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgcG9zdChzaGlmdElkLCB3ZWF0aGVySWQsIGRlZmF1bHRQb3NlU291cmNlSWQsIG5vdGUpIHtcbiAgICAvL0NyZWF0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMV1dOiBzaGlmdElkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s0XV06IHdlYXRoZXJJZCxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNV1dOiBkZWZhdWx0UG9zZVNvdXJjZUlkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s2XV06IG5vdGUsXG4gICAgfTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUG9zdFJlcXVlc3QoXCJsZWdcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBwdXQoXG4gICAgaWQsXG4gICAgYWN0aW9uLFxuICAgIHdlYXRoZXJJZCA9IG51bGwsXG4gICAgZGVmYXVsdFBvc2VTb3VyY2VJZCA9IG51bGwsXG4gICAgbm90ZSA9IG51bGxcbiAgKSB7XG4gICAgLy9VcGRhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIC8vVGhlIGFjdGlvbiBwYXJhbWV0ZXIgY2FuIGJlIGVpdGhlciBcImVkaXRcIiBvciBcImNsb3NlXCIuXG4gICAgLy9NYW5kYXRvcnkgcGFyYW1ldGVyczpcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1swXV06IGlkLFxuICAgICAgW1wiYWN0aW9uXCJdOiBhY3Rpb24sXG4gICAgfTtcbiAgICAvL09wdGlvbmFsIHBhcmFtZXRlcnM6XG4gICAgT2JqZWN0LmFzc2lnbihcbiAgICAgIGRhdGEsXG4gICAgICB3ZWF0aGVySWQgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzRdXTogd2VhdGhlcklkIH0sXG4gICAgICBkZWZhdWx0UG9zZVNvdXJjZUlkICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s1XV06IGRlZmF1bHRQb3NlU291cmNlSWQgfSxcbiAgICAgIG5vdGUgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzZdXTogbm90ZSB9XG4gICAgKTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUHV0UmVxdWVzdChcImxlZ1wiLCBkYXRhKTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZShpZCkge1xuICAgIC8vRGVsZXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kRGVsZXRlUmVxdWVzdChcImxlZ1wiLCBcImlkPVwiICsgaWQpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/Leg.js\n");

/***/ }),

/***/ "./src/database_interface/LocalPose.js":
/*!*********************************************!*\
  !*** ./src/database_interface/LocalPose.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalPose: () => (/* binding */ LocalPose),\n/* harmony export */   LocalPoseInterface: () => (/* binding */ LocalPoseInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//LocalPose data container class.\nclass LocalPose {\n  constructor(id, segmentId, secs, frameId, x, y, type, origSecs) {\n    this.id = id;\n    this.segmentId = segmentId;\n    this.secs = secs;\n    this.frameId = frameId;\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.origSecs = origSecs;\n  }\n}\n\n//LocalPose database interaction class.\nclass LocalPoseInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"segment_id\",\n      \"secs\",\n      \"frame_id\",\n      \"x\",\n      \"y\",\n      \"type\",\n      \"orig_secs\",\n    ];\n  }\n\n  async get(segmentId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"local_pose\",\n      \"segment_id=\" + segmentId\n    );\n    return data.map(\n      (entry) =>\n        new LocalPose(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          entry[4],\n          entry[5],\n          entry[6],\n          entry[7]\n        )\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL0xvY2FsUG9zZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9kYXRhYmFzZV9pbnRlcmZhY2UvTG9jYWxQb3NlLmpzPzFhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vTG9jYWxQb3NlIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIExvY2FsUG9zZSB7XG4gIGNvbnN0cnVjdG9yKGlkLCBzZWdtZW50SWQsIHNlY3MsIGZyYW1lSWQsIHgsIHksIHR5cGUsIG9yaWdTZWNzKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuc2VnbWVudElkID0gc2VnbWVudElkO1xuICAgIHRoaXMuc2VjcyA9IHNlY3M7XG4gICAgdGhpcy5mcmFtZUlkID0gZnJhbWVJZDtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICB0aGlzLm9yaWdTZWNzID0gb3JpZ1NlY3M7XG4gIH1cbn1cblxuLy9Mb2NhbFBvc2UgZGF0YWJhc2UgaW50ZXJhY3Rpb24gY2xhc3MuXG5leHBvcnQgY2xhc3MgTG9jYWxQb3NlSW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1xuICAgICAgXCJpZFwiLFxuICAgICAgXCJzZWdtZW50X2lkXCIsXG4gICAgICBcInNlY3NcIixcbiAgICAgIFwiZnJhbWVfaWRcIixcbiAgICAgIFwieFwiLFxuICAgICAgXCJ5XCIsXG4gICAgICBcInR5cGVcIixcbiAgICAgIFwib3JpZ19zZWNzXCIsXG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldChzZWdtZW50SWQpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcbiAgICAgIFwibG9jYWxfcG9zZVwiLFxuICAgICAgXCJzZWdtZW50X2lkPVwiICsgc2VnbWVudElkXG4gICAgKTtcbiAgICByZXR1cm4gZGF0YS5tYXAoXG4gICAgICAoZW50cnkpID0+XG4gICAgICAgIG5ldyBMb2NhbFBvc2UoXG4gICAgICAgICAgZW50cnlbMF0sXG4gICAgICAgICAgZW50cnlbMV0sXG4gICAgICAgICAgZW50cnlbMl0sXG4gICAgICAgICAgZW50cnlbM10sXG4gICAgICAgICAgZW50cnlbNF0sXG4gICAgICAgICAgZW50cnlbNV0sXG4gICAgICAgICAgZW50cnlbNl0sXG4gICAgICAgICAgZW50cnlbN11cbiAgICAgICAgKVxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/database_interface/LocalPose.js\n");

/***/ }),

/***/ "./src/database_interface/MapImage.js":
/*!********************************************!*\
  !*** ./src/database_interface/MapImage.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapImage: () => (/* binding */ MapImage),\n/* harmony export */   MapImageInterface: () => (/* binding */ MapImageInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//MapImage data container class.\nclass MapImage {\n  constructor(\n    id,\n    shiftId,\n    secs,\n    frameId,\n    width,\n    height,\n    resolution,\n    originX,\n    originY,\n    imageData,\n    origSecs\n  ) {\n    this.id = id;\n    this.shiftId = shiftId;\n    this.secs = secs;\n    this.frameId = frameId;\n    this.width = width;\n    this.height = height;\n    this.resolution = resolution;\n    this.originX = originX;\n    this.originY = originY;\n    this.imageData = imageData;\n    this.origSecs = origSecs;\n  }\n}\n\n//MapImage database interaction class.\nclass MapImageInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"shift_id\",\n      \"secs\",\n      \"frame_id\",\n      \"width\",\n      \"height\",\n      \"resolution\",\n      \"origin_x\",\n      \"origin_y\",\n      \"image_data\",\n      \"orig_secs\",\n    ];\n  }\n\n  async get(testEventId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"map_image\",\n      \"shift_id=\" + testEventId\n    );\n    return new MapImage(\n      data[0],\n      data[1],\n      data[2],\n      data[3],\n      data[4],\n      data[5],\n      data[6],\n      data[7],\n      data[8],\n      \"data:image/jpeg;base64, \" + atob(data[9]),\n      data[10]\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL01hcEltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2RhdGFiYXNlX2ludGVyZmFjZS9NYXBJbWFnZS5qcz9mZTM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vL01hcEltYWdlIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIE1hcEltYWdlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgaWQsXG4gICAgc2hpZnRJZCxcbiAgICBzZWNzLFxuICAgIGZyYW1lSWQsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHJlc29sdXRpb24sXG4gICAgb3JpZ2luWCxcbiAgICBvcmlnaW5ZLFxuICAgIGltYWdlRGF0YSxcbiAgICBvcmlnU2Vjc1xuICApIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5zaGlmdElkID0gc2hpZnRJZDtcbiAgICB0aGlzLnNlY3MgPSBzZWNzO1xuICAgIHRoaXMuZnJhbWVJZCA9IGZyYW1lSWQ7XG4gICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgIHRoaXMucmVzb2x1dGlvbiA9IHJlc29sdXRpb247XG4gICAgdGhpcy5vcmlnaW5YID0gb3JpZ2luWDtcbiAgICB0aGlzLm9yaWdpblkgPSBvcmlnaW5ZO1xuICAgIHRoaXMuaW1hZ2VEYXRhID0gaW1hZ2VEYXRhO1xuICAgIHRoaXMub3JpZ1NlY3MgPSBvcmlnU2VjcztcbiAgfVxufVxuXG4vL01hcEltYWdlIGRhdGFiYXNlIGludGVyYWN0aW9uIGNsYXNzLlxuZXhwb3J0IGNsYXNzIE1hcEltYWdlSW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1xuICAgICAgXCJpZFwiLFxuICAgICAgXCJzaGlmdF9pZFwiLFxuICAgICAgXCJzZWNzXCIsXG4gICAgICBcImZyYW1lX2lkXCIsXG4gICAgICBcIndpZHRoXCIsXG4gICAgICBcImhlaWdodFwiLFxuICAgICAgXCJyZXNvbHV0aW9uXCIsXG4gICAgICBcIm9yaWdpbl94XCIsXG4gICAgICBcIm9yaWdpbl95XCIsXG4gICAgICBcImltYWdlX2RhdGFcIixcbiAgICAgIFwib3JpZ19zZWNzXCIsXG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldCh0ZXN0RXZlbnRJZCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFxuICAgICAgXCJtYXBfaW1hZ2VcIixcbiAgICAgIFwic2hpZnRfaWQ9XCIgKyB0ZXN0RXZlbnRJZFxuICAgICk7XG4gICAgcmV0dXJuIG5ldyBNYXBJbWFnZShcbiAgICAgIGRhdGFbMF0sXG4gICAgICBkYXRhWzFdLFxuICAgICAgZGF0YVsyXSxcbiAgICAgIGRhdGFbM10sXG4gICAgICBkYXRhWzRdLFxuICAgICAgZGF0YVs1XSxcbiAgICAgIGRhdGFbNl0sXG4gICAgICBkYXRhWzddLFxuICAgICAgZGF0YVs4XSxcbiAgICAgIFwiZGF0YTppbWFnZS9qcGVnO2Jhc2U2NCwgXCIgKyBhdG9iKGRhdGFbOV0pLFxuICAgICAgZGF0YVsxMF1cbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/MapImage.js\n");

/***/ }),

/***/ "./src/database_interface/Note.js":
/*!****************************************!*\
  !*** ./src/database_interface/Note.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Note: () => (/* binding */ Note),\n/* harmony export */   NoteInterface: () => (/* binding */ NoteInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Note data container class.\nclass Note {\n  constructor(id, segmentId, secs, personnelId, note) {\n    this.id = id;\n    this.segmentId = segmentId;\n    this.secs = secs;\n    this.personnelId = personnelId;\n    this.note = note;\n  }\n}\n\n//Note database interaction class.\nclass NoteInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"segment_id\", \"secs\", \"personnel_id\", \"note\"];\n  }\n\n  async get(segmentId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"note\",\n      \"segment_id=\" + segmentId\n    );\n    return data.map(\n      (entry) => new Note(entry[0], entry[1], entry[2], entry[3], entry[4])\n    );\n  }\n\n  async post(segmentId, personnelId, note) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: segmentId,\n      [this.paramNames[3]]: personnelId,\n      [this.paramNames[4]]: note,\n    };\n    await this.serverInterface.sendPostRequest(\"note\", data);\n  }\n\n  async put(id, personnelId = null, note = null) {\n    //Update entry in server table.\n    //Mandatory parameters:\n    const data = { [this.paramNames[0]]: id };\n    //Optional parameters:\n    Object.assign(\n      data,\n      personnelId !== null && { [this.paramNames[3]]: personnelId },\n      note !== null && { [this.paramNames[4]]: note }\n    );\n    await this.serverInterface.sendPutRequest(\"note\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"note\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL05vdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL05vdGUuanM/ODJkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9Ob3RlIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIE5vdGUge1xuICBjb25zdHJ1Y3RvcihpZCwgc2VnbWVudElkLCBzZWNzLCBwZXJzb25uZWxJZCwgbm90ZSkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnNlZ21lbnRJZCA9IHNlZ21lbnRJZDtcbiAgICB0aGlzLnNlY3MgPSBzZWNzO1xuICAgIHRoaXMucGVyc29ubmVsSWQgPSBwZXJzb25uZWxJZDtcbiAgICB0aGlzLm5vdGUgPSBub3RlO1xuICB9XG59XG5cbi8vTm90ZSBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBOb3RlSW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1wiaWRcIiwgXCJzZWdtZW50X2lkXCIsIFwic2Vjc1wiLCBcInBlcnNvbm5lbF9pZFwiLCBcIm5vdGVcIl07XG4gIH1cblxuICBhc3luYyBnZXQoc2VnbWVudElkKSB7XG4gICAgLy9HZXQgdGFibGUgZGF0YSBmcm9tIHNlcnZlci5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZEdldFJlcXVlc3QoXG4gICAgICBcIm5vdGVcIixcbiAgICAgIFwic2VnbWVudF9pZD1cIiArIHNlZ21lbnRJZFxuICAgICk7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PiBuZXcgTm90ZShlbnRyeVswXSwgZW50cnlbMV0sIGVudHJ5WzJdLCBlbnRyeVszXSwgZW50cnlbNF0pXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3Qoc2VnbWVudElkLCBwZXJzb25uZWxJZCwgbm90ZSkge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxXV06IHNlZ21lbnRJZCxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbM11dOiBwZXJzb25uZWxJZCxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNF1dOiBub3RlLFxuICAgIH07XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFBvc3RSZXF1ZXN0KFwibm90ZVwiLCBkYXRhKTtcbiAgfVxuXG4gIGFzeW5jIHB1dChpZCwgcGVyc29ubmVsSWQgPSBudWxsLCBub3RlID0gbnVsbCkge1xuICAgIC8vVXBkYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICAvL01hbmRhdG9yeSBwYXJhbWV0ZXJzOlxuICAgIGNvbnN0IGRhdGEgPSB7IFt0aGlzLnBhcmFtTmFtZXNbMF1dOiBpZCB9O1xuICAgIC8vT3B0aW9uYWwgcGFyYW1ldGVyczpcbiAgICBPYmplY3QuYXNzaWduKFxuICAgICAgZGF0YSxcbiAgICAgIHBlcnNvbm5lbElkICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1szXV06IHBlcnNvbm5lbElkIH0sXG4gICAgICBub3RlICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s0XV06IG5vdGUgfVxuICAgICk7XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFB1dFJlcXVlc3QoXCJub3RlXCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKGlkKSB7XG4gICAgLy9EZWxldGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmREZWxldGVSZXF1ZXN0KFwibm90ZVwiLCBcImlkPVwiICsgaWQpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/Note.js\n");

/***/ }),

/***/ "./src/database_interface/Performer.js":
/*!*********************************************!*\
  !*** ./src/database_interface/Performer.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Performer: () => (/* binding */ Performer),\n/* harmony export */   PerformerInterface: () => (/* binding */ PerformerInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Performer data container class.\nclass Performer {\n  constructor(id, institution) {\n    this.id = id;\n    this.institution = institution;\n  }\n}\n\n//Performer database interaction class.\nclass PerformerInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"institution\"];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"performer\");\n    return data.map((entry) => new Performer(entry[0], entry[1]));\n  }\n\n  async post(institution) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: institution,\n    };\n    await this.serverInterface.sendPostRequest(\"performer\", data);\n  }\n\n  async put(id, institution) {\n    //Update entry in server table.\n    //Mandatory parameters:\n    const data = { [this.paramNames[0]]: id };\n    //Optional parameters:\n    Object.assign(data, institution !== null && { [this.paramNames[1]]: institution });\n    await this.serverInterface.sendPutRequest(\"performer\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"performer\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1BlcmZvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2RhdGFiYXNlX2ludGVyZmFjZS9QZXJmb3JtZXIuanM/ZjljMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9QZXJmb3JtZXIgZGF0YSBjb250YWluZXIgY2xhc3MuXG5leHBvcnQgY2xhc3MgUGVyZm9ybWVyIHtcbiAgY29uc3RydWN0b3IoaWQsIGluc3RpdHV0aW9uKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuaW5zdGl0dXRpb24gPSBpbnN0aXR1dGlvbjtcbiAgfVxufVxuXG4vL1BlcmZvcm1lciBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBQZXJmb3JtZXJJbnRlcmZhY2Uge1xuICBjb25zdHJ1Y3RvcihzZXJ2ZXJJbnRlcmZhY2UpIHtcbiAgICAvL1NldCBhcmd1bWVudHMgYXMgcHJvcGVydGllcy5cbiAgICB0aGlzLnNlcnZlckludGVyZmFjZSA9IHNlcnZlckludGVyZmFjZTtcbiAgICB0aGlzLnBhcmFtTmFtZXMgPSBbXCJpZFwiLCBcImluc3RpdHV0aW9uXCJdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFwicGVyZm9ybWVyXCIpO1xuICAgIHJldHVybiBkYXRhLm1hcCgoZW50cnkpID0+IG5ldyBQZXJmb3JtZXIoZW50cnlbMF0sIGVudHJ5WzFdKSk7XG4gIH1cblxuICBhc3luYyBwb3N0KGluc3RpdHV0aW9uKSB7XG4gICAgLy9DcmVhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzFdXTogaW5zdGl0dXRpb24sXG4gICAgfTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUG9zdFJlcXVlc3QoXCJwZXJmb3JtZXJcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBwdXQoaWQsIGluc3RpdHV0aW9uKSB7XG4gICAgLy9VcGRhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIC8vTWFuZGF0b3J5IHBhcmFtZXRlcnM6XG4gICAgY29uc3QgZGF0YSA9IHsgW3RoaXMucGFyYW1OYW1lc1swXV06IGlkIH07XG4gICAgLy9PcHRpb25hbCBwYXJhbWV0ZXJzOlxuICAgIE9iamVjdC5hc3NpZ24oZGF0YSwgaW5zdGl0dXRpb24gIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzFdXTogaW5zdGl0dXRpb24gfSk7XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFB1dFJlcXVlc3QoXCJwZXJmb3JtZXJcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBkZWxldGUoaWQpIHtcbiAgICAvL0RlbGV0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZERlbGV0ZVJlcXVlc3QoXCJwZXJmb3JtZXJcIiwgXCJpZD1cIiArIGlkKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/Performer.js\n");

/***/ }),

/***/ "./src/database_interface/Personnel.js":
/*!*********************************************!*\
  !*** ./src/database_interface/Personnel.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Personnel: () => (/* binding */ Personnel),\n/* harmony export */   PersonnelInterface: () => (/* binding */ PersonnelInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Personnel data container class.\nclass Personnel {\n  constructor(id, name, institution) {\n    this.id = id;\n    this.name = name;\n    this.institution = institution;\n  }\n}\n\n//Personnel database interaction class.\nclass PersonnelInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"name\", \"institution\"];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"personnel\");\n    return data.map((entry) => new Personnel(entry[0], entry[1], entry[2]));\n  }\n\n  async post(name, institution) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: name,\n      [this.paramNames[2]]: institution,\n    };\n    await this.serverInterface.sendPostRequest(\"personnel\", data);\n  }\n\n  async put(id, name, institution) {\n    //Update entry in server table.\n    //Mandatory parameters:\n    const data = { [this.paramNames[0]]: id };\n    //Optional parameters:\n    Object.assign(\n      data,\n      name !== null && { [this.paramNames[1]]: name },\n      institution !== null && { [this.paramNames[2]]: institution }\n    );\n    await this.serverInterface.sendPutRequest(\"personnel\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"personnel\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1BlcnNvbm5lbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2RhdGFiYXNlX2ludGVyZmFjZS9QZXJzb25uZWwuanM/NDk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9QZXJzb25uZWwgZGF0YSBjb250YWluZXIgY2xhc3MuXG5leHBvcnQgY2xhc3MgUGVyc29ubmVsIHtcbiAgY29uc3RydWN0b3IoaWQsIG5hbWUsIGluc3RpdHV0aW9uKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5pbnN0aXR1dGlvbiA9IGluc3RpdHV0aW9uO1xuICB9XG59XG5cbi8vUGVyc29ubmVsIGRhdGFiYXNlIGludGVyYWN0aW9uIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFBlcnNvbm5lbEludGVyZmFjZSB7XG4gIGNvbnN0cnVjdG9yKHNlcnZlckludGVyZmFjZSkge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMuc2VydmVySW50ZXJmYWNlID0gc2VydmVySW50ZXJmYWNlO1xuICAgIHRoaXMucGFyYW1OYW1lcyA9IFtcImlkXCIsIFwibmFtZVwiLCBcImluc3RpdHV0aW9uXCJdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFwicGVyc29ubmVsXCIpO1xuICAgIHJldHVybiBkYXRhLm1hcCgoZW50cnkpID0+IG5ldyBQZXJzb25uZWwoZW50cnlbMF0sIGVudHJ5WzFdLCBlbnRyeVsyXSkpO1xuICB9XG5cbiAgYXN5bmMgcG9zdChuYW1lLCBpbnN0aXR1dGlvbikge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxXV06IG5hbWUsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzJdXTogaW5zdGl0dXRpb24sXG4gICAgfTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUG9zdFJlcXVlc3QoXCJwZXJzb25uZWxcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBwdXQoaWQsIG5hbWUsIGluc3RpdHV0aW9uKSB7XG4gICAgLy9VcGRhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIC8vTWFuZGF0b3J5IHBhcmFtZXRlcnM6XG4gICAgY29uc3QgZGF0YSA9IHsgW3RoaXMucGFyYW1OYW1lc1swXV06IGlkIH07XG4gICAgLy9PcHRpb25hbCBwYXJhbWV0ZXJzOlxuICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICBkYXRhLFxuICAgICAgbmFtZSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbMV1dOiBuYW1lIH0sXG4gICAgICBpbnN0aXR1dGlvbiAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbMl1dOiBpbnN0aXR1dGlvbiB9XG4gICAgKTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUHV0UmVxdWVzdChcInBlcnNvbm5lbFwiLCBkYXRhKTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZShpZCkge1xuICAgIC8vRGVsZXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kRGVsZXRlUmVxdWVzdChcInBlcnNvbm5lbFwiLCBcImlkPVwiICsgaWQpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/Personnel.js\n");

/***/ }),

/***/ "./src/database_interface/Pose.js":
/*!****************************************!*\
  !*** ./src/database_interface/Pose.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PoseInterface: () => (/* binding */ PoseInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Pose database interaction class.\nclass PoseInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"segment_id\",\n      \"lat\",\n      \"lng\",\n      \"pose_source_id\",\n      \"orig_secs\",\n    ];\n  }\n\n  async get(segmentId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"pose\",\n      \"segment_id=\" + segmentId\n    );\n    //Server returns a GeoJSON object in the first position of the response array.\n    return data[0];\n  }\n\n  async post(segmentId, lat, lng, poseSourceId) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[0]]: segmentId,\n      [this.paramNames[1]]: lat,\n      [this.paramNames[2]]: lng,\n      [this.paramNames[3]]: poseSourceId,\n      [this.paramNames[4]]: new Date().getTime() / 1000,\n    };\n    await this.serverInterface.sendPostRequest(\"pose\", data);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1Bvc2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1Bvc2UuanM/Zjg4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9Qb3NlIGRhdGFiYXNlIGludGVyYWN0aW9uIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFBvc2VJbnRlcmZhY2Uge1xuICBjb25zdHJ1Y3RvcihzZXJ2ZXJJbnRlcmZhY2UpIHtcbiAgICAvL1NldCBhcmd1bWVudHMgYXMgcHJvcGVydGllcy5cbiAgICB0aGlzLnNlcnZlckludGVyZmFjZSA9IHNlcnZlckludGVyZmFjZTtcbiAgICB0aGlzLnBhcmFtTmFtZXMgPSBbXG4gICAgICBcInNlZ21lbnRfaWRcIixcbiAgICAgIFwibGF0XCIsXG4gICAgICBcImxuZ1wiLFxuICAgICAgXCJwb3NlX3NvdXJjZV9pZFwiLFxuICAgICAgXCJvcmlnX3NlY3NcIixcbiAgICBdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHNlZ21lbnRJZCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFxuICAgICAgXCJwb3NlXCIsXG4gICAgICBcInNlZ21lbnRfaWQ9XCIgKyBzZWdtZW50SWRcbiAgICApO1xuICAgIC8vU2VydmVyIHJldHVybnMgYSBHZW9KU09OIG9iamVjdCBpbiB0aGUgZmlyc3QgcG9zaXRpb24gb2YgdGhlIHJlc3BvbnNlIGFycmF5LlxuICAgIHJldHVybiBkYXRhWzBdO1xuICB9XG5cbiAgYXN5bmMgcG9zdChzZWdtZW50SWQsIGxhdCwgbG5nLCBwb3NlU291cmNlSWQpIHtcbiAgICAvL0NyZWF0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMF1dOiBzZWdtZW50SWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzFdXTogbGF0LFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1syXV06IGxuZyxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbM11dOiBwb3NlU291cmNlSWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzRdXTogbmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwLFxuICAgIH07XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFBvc3RSZXF1ZXN0KFwicG9zZVwiLCBkYXRhKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/Pose.js\n");

/***/ }),

/***/ "./src/database_interface/PoseSource.js":
/*!**********************************************!*\
  !*** ./src/database_interface/PoseSource.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PoseSource: () => (/* binding */ PoseSource),\n/* harmony export */   PoseSourceInterface: () => (/* binding */ PoseSourceInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//PoseSource data container class.\nclass PoseSource {\n  constructor(id, key, shortDescription, longDescription) {\n    this.id = id;\n    this.key = key;\n    this.shortDescription = shortDescription;\n    this.longDescription = longDescription;\n  }\n}\n\n//PoseSource database interaction class.\nclass PoseSourceInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"key\", \"short_description\", \"long_description\"];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"pose_source\");\n    return data.map(\n      (entry) => new PoseSource(entry[0], entry[1], entry[2], entry[3])\n    );\n  }\n\n  async post(key, shortDescription, longDescription) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: key,\n      [this.paramNames[2]]: shortDescription,\n      [this.paramNames[3]]: longDescription,\n    };\n    await this.serverInterface.sendPostRequest(\"pose_source\", data);\n  }\n\n  async put(id, key, shortDescription, longDescription) {\n    //Update entry in server table.\n    //Mandatory parameters:\n    const data = { [this.paramNames[0]]: id };\n    //Optional parameters:\n    Object.assign(\n      data,\n      key !== null && { [this.paramNames[1]]: key },\n      shortDescription !== null && { [this.paramNames[2]]: shortDescription },\n      longDescription !== null && { [this.paramNames[3]]: longDescription }\n    );\n    await this.serverInterface.sendPutRequest(\"pose_source\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"pose_source\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1Bvc2VTb3VyY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1Bvc2VTb3VyY2UuanM/Nzc2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9Qb3NlU291cmNlIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFBvc2VTb3VyY2Uge1xuICBjb25zdHJ1Y3RvcihpZCwga2V5LCBzaG9ydERlc2NyaXB0aW9uLCBsb25nRGVzY3JpcHRpb24pIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgdGhpcy5zaG9ydERlc2NyaXB0aW9uID0gc2hvcnREZXNjcmlwdGlvbjtcbiAgICB0aGlzLmxvbmdEZXNjcmlwdGlvbiA9IGxvbmdEZXNjcmlwdGlvbjtcbiAgfVxufVxuXG4vL1Bvc2VTb3VyY2UgZGF0YWJhc2UgaW50ZXJhY3Rpb24gY2xhc3MuXG5leHBvcnQgY2xhc3MgUG9zZVNvdXJjZUludGVyZmFjZSB7XG4gIGNvbnN0cnVjdG9yKHNlcnZlckludGVyZmFjZSkge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMuc2VydmVySW50ZXJmYWNlID0gc2VydmVySW50ZXJmYWNlO1xuICAgIHRoaXMucGFyYW1OYW1lcyA9IFtcImlkXCIsIFwia2V5XCIsIFwic2hvcnRfZGVzY3JpcHRpb25cIiwgXCJsb25nX2Rlc2NyaXB0aW9uXCJdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFwicG9zZV9zb3VyY2VcIik7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PiBuZXcgUG9zZVNvdXJjZShlbnRyeVswXSwgZW50cnlbMV0sIGVudHJ5WzJdLCBlbnRyeVszXSlcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgcG9zdChrZXksIHNob3J0RGVzY3JpcHRpb24sIGxvbmdEZXNjcmlwdGlvbikge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxXV06IGtleSxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMl1dOiBzaG9ydERlc2NyaXB0aW9uLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1szXV06IGxvbmdEZXNjcmlwdGlvbixcbiAgICB9O1xuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRQb3N0UmVxdWVzdChcInBvc2Vfc291cmNlXCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgcHV0KGlkLCBrZXksIHNob3J0RGVzY3JpcHRpb24sIGxvbmdEZXNjcmlwdGlvbikge1xuICAgIC8vVXBkYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICAvL01hbmRhdG9yeSBwYXJhbWV0ZXJzOlxuICAgIGNvbnN0IGRhdGEgPSB7IFt0aGlzLnBhcmFtTmFtZXNbMF1dOiBpZCB9O1xuICAgIC8vT3B0aW9uYWwgcGFyYW1ldGVyczpcbiAgICBPYmplY3QuYXNzaWduKFxuICAgICAgZGF0YSxcbiAgICAgIGtleSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbMV1dOiBrZXkgfSxcbiAgICAgIHNob3J0RGVzY3JpcHRpb24gIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzJdXTogc2hvcnREZXNjcmlwdGlvbiB9LFxuICAgICAgbG9uZ0Rlc2NyaXB0aW9uICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1szXV06IGxvbmdEZXNjcmlwdGlvbiB9XG4gICAgKTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUHV0UmVxdWVzdChcInBvc2Vfc291cmNlXCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKGlkKSB7XG4gICAgLy9EZWxldGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmREZWxldGVSZXF1ZXN0KFwicG9zZV9zb3VyY2VcIiwgXCJpZD1cIiArIGlkKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/PoseSource.js\n");

/***/ }),

/***/ "./src/database_interface/Segment.js":
/*!*******************************************!*\
  !*** ./src/database_interface/Segment.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Segment: () => (/* binding */ Segment),\n/* harmony export */   SegmentInterface: () => (/* binding */ SegmentInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Segment data container class.\nclass Segment {\n  constructor(\n    id,\n    legId,\n    parentId,\n    startTime,\n    endTime,\n    itoReasonId,\n    itoReason,\n    segmentTypeId,\n    segmentType,\n    obstacle,\n    lighting,\n    slope,\n    lng,\n    lat,\n    local_x,\n    local_y,\n    origStartTime\n  ) {\n    this.id = id;\n    this.legId = legId;\n    this.parentId = parentId;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.itoReasonId = itoReasonId;\n    this.itoReason = itoReason;\n    this.segmentTypeId = segmentTypeId;\n    this.segmentType = segmentType;\n    this.obstacle = obstacle;\n    this.lighting = lighting;\n    this.slope = slope;\n    this.lng = lng;\n    this.lat = lat;\n    this.local_x = local_x;\n    this.local_y = local_y;\n    this.origStartTime = origStartTime;\n  }\n}\n\n//Segment database interaction class.\nclass SegmentInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"leg_id\",\n      \"parent_id\",\n      \"starttime_secs\",\n      \"endtime_secs\",\n      \"ito_reason_id\",\n      \"ito_reason\",\n      \"segment_type_id\",\n      \"segment_type\",\n      \"obstacle\",\n      \"lighting\",\n      \"slope\",\n      \"lng\",\n      \"lat\",\n      \"local_x\",\n      \"local_y\",\n      \"orig_starttime_secs\",\n    ];\n  }\n\n  async get(legId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"segment\",\n      \"leg_id=\" + legId\n    );\n    return data.map(\n      (entry) =>\n        new Segment(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          entry[4],\n          entry[5],\n          entry[6],\n          entry[7],\n          entry[8],\n          entry[9],\n          entry[10],\n          entry[11],\n          entry[12],\n          entry[13],\n          entry[14],\n          entry[15],\n          entry[16]\n        )\n    );\n  }\n\n  async post(legId, itoReasonId, segmentTypeId, lng, lat, local_x, local_y) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: legId,\n      [this.paramNames[5]]: itoReasonId,\n      [this.paramNames[7]]: segmentTypeId,\n      [this.paramNames[12]]: lng,\n      [this.paramNames[13]]: lat,\n      [this.paramNames[14]]: local_x,\n      [this.paramNames[15]]: local_y,\n      [this.paramNames[16]]: new Date().getTime() / 1000,\n    };\n    await this.serverInterface.sendPostRequest(\"segment\", data);\n  }\n\n  async put(\n    id,\n    action,\n    itoReasonId = null,\n    obstacle = null,\n    lighting = null,\n    slope = null\n  ) {\n    //Update entry in server table.\n    //The action parameter can be either \"edit\" or \"close\".\n    //Mandatory parameters:\n    const data = {\n      [this.paramNames[0]]: id,\n      [\"action\"]: action,\n    };\n    //Optional parameters:\n    Object.assign(\n      data,\n      itoReasonId && { [this.paramNames[5]]: itoReasonId },\n      obstacle && { [this.paramNames[9]]: obstacle },\n      lighting && { [this.paramNames[10]]: lighting },\n      slope && { [this.paramNames[11]]: slope }\n    );\n    //Update entry in server table.\n    await this.serverInterface.sendPutRequest(\"segment\", data);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1NlZ21lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1NlZ21lbnQuanM/NjhmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9TZWdtZW50IGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFNlZ21lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBpZCxcbiAgICBsZWdJZCxcbiAgICBwYXJlbnRJZCxcbiAgICBzdGFydFRpbWUsXG4gICAgZW5kVGltZSxcbiAgICBpdG9SZWFzb25JZCxcbiAgICBpdG9SZWFzb24sXG4gICAgc2VnbWVudFR5cGVJZCxcbiAgICBzZWdtZW50VHlwZSxcbiAgICBvYnN0YWNsZSxcbiAgICBsaWdodGluZyxcbiAgICBzbG9wZSxcbiAgICBsbmcsXG4gICAgbGF0LFxuICAgIGxvY2FsX3gsXG4gICAgbG9jYWxfeSxcbiAgICBvcmlnU3RhcnRUaW1lXG4gICkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLmxlZ0lkID0gbGVnSWQ7XG4gICAgdGhpcy5wYXJlbnRJZCA9IHBhcmVudElkO1xuICAgIHRoaXMuc3RhcnRUaW1lID0gc3RhcnRUaW1lO1xuICAgIHRoaXMuZW5kVGltZSA9IGVuZFRpbWU7XG4gICAgdGhpcy5pdG9SZWFzb25JZCA9IGl0b1JlYXNvbklkO1xuICAgIHRoaXMuaXRvUmVhc29uID0gaXRvUmVhc29uO1xuICAgIHRoaXMuc2VnbWVudFR5cGVJZCA9IHNlZ21lbnRUeXBlSWQ7XG4gICAgdGhpcy5zZWdtZW50VHlwZSA9IHNlZ21lbnRUeXBlO1xuICAgIHRoaXMub2JzdGFjbGUgPSBvYnN0YWNsZTtcbiAgICB0aGlzLmxpZ2h0aW5nID0gbGlnaHRpbmc7XG4gICAgdGhpcy5zbG9wZSA9IHNsb3BlO1xuICAgIHRoaXMubG5nID0gbG5nO1xuICAgIHRoaXMubGF0ID0gbGF0O1xuICAgIHRoaXMubG9jYWxfeCA9IGxvY2FsX3g7XG4gICAgdGhpcy5sb2NhbF95ID0gbG9jYWxfeTtcbiAgICB0aGlzLm9yaWdTdGFydFRpbWUgPSBvcmlnU3RhcnRUaW1lO1xuICB9XG59XG5cbi8vU2VnbWVudCBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBTZWdtZW50SW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1xuICAgICAgXCJpZFwiLFxuICAgICAgXCJsZWdfaWRcIixcbiAgICAgIFwicGFyZW50X2lkXCIsXG4gICAgICBcInN0YXJ0dGltZV9zZWNzXCIsXG4gICAgICBcImVuZHRpbWVfc2Vjc1wiLFxuICAgICAgXCJpdG9fcmVhc29uX2lkXCIsXG4gICAgICBcIml0b19yZWFzb25cIixcbiAgICAgIFwic2VnbWVudF90eXBlX2lkXCIsXG4gICAgICBcInNlZ21lbnRfdHlwZVwiLFxuICAgICAgXCJvYnN0YWNsZVwiLFxuICAgICAgXCJsaWdodGluZ1wiLFxuICAgICAgXCJzbG9wZVwiLFxuICAgICAgXCJsbmdcIixcbiAgICAgIFwibGF0XCIsXG4gICAgICBcImxvY2FsX3hcIixcbiAgICAgIFwibG9jYWxfeVwiLFxuICAgICAgXCJvcmlnX3N0YXJ0dGltZV9zZWNzXCIsXG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldChsZWdJZCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFxuICAgICAgXCJzZWdtZW50XCIsXG4gICAgICBcImxlZ19pZD1cIiArIGxlZ0lkXG4gICAgKTtcbiAgICByZXR1cm4gZGF0YS5tYXAoXG4gICAgICAoZW50cnkpID0+XG4gICAgICAgIG5ldyBTZWdtZW50KFxuICAgICAgICAgIGVudHJ5WzBdLFxuICAgICAgICAgIGVudHJ5WzFdLFxuICAgICAgICAgIGVudHJ5WzJdLFxuICAgICAgICAgIGVudHJ5WzNdLFxuICAgICAgICAgIGVudHJ5WzRdLFxuICAgICAgICAgIGVudHJ5WzVdLFxuICAgICAgICAgIGVudHJ5WzZdLFxuICAgICAgICAgIGVudHJ5WzddLFxuICAgICAgICAgIGVudHJ5WzhdLFxuICAgICAgICAgIGVudHJ5WzldLFxuICAgICAgICAgIGVudHJ5WzEwXSxcbiAgICAgICAgICBlbnRyeVsxMV0sXG4gICAgICAgICAgZW50cnlbMTJdLFxuICAgICAgICAgIGVudHJ5WzEzXSxcbiAgICAgICAgICBlbnRyeVsxNF0sXG4gICAgICAgICAgZW50cnlbMTVdLFxuICAgICAgICAgIGVudHJ5WzE2XVxuICAgICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3QobGVnSWQsIGl0b1JlYXNvbklkLCBzZWdtZW50VHlwZUlkLCBsbmcsIGxhdCwgbG9jYWxfeCwgbG9jYWxfeSkge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxXV06IGxlZ0lkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s1XV06IGl0b1JlYXNvbklkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s3XV06IHNlZ21lbnRUeXBlSWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzEyXV06IGxuZyxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMTNdXTogbGF0LFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxNF1dOiBsb2NhbF94LFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxNV1dOiBsb2NhbF95LFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxNl1dOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDAsXG4gICAgfTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUG9zdFJlcXVlc3QoXCJzZWdtZW50XCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgcHV0KFxuICAgIGlkLFxuICAgIGFjdGlvbixcbiAgICBpdG9SZWFzb25JZCA9IG51bGwsXG4gICAgb2JzdGFjbGUgPSBudWxsLFxuICAgIGxpZ2h0aW5nID0gbnVsbCxcbiAgICBzbG9wZSA9IG51bGxcbiAgKSB7XG4gICAgLy9VcGRhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIC8vVGhlIGFjdGlvbiBwYXJhbWV0ZXIgY2FuIGJlIGVpdGhlciBcImVkaXRcIiBvciBcImNsb3NlXCIuXG4gICAgLy9NYW5kYXRvcnkgcGFyYW1ldGVyczpcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1swXV06IGlkLFxuICAgICAgW1wiYWN0aW9uXCJdOiBhY3Rpb24sXG4gICAgfTtcbiAgICAvL09wdGlvbmFsIHBhcmFtZXRlcnM6XG4gICAgT2JqZWN0LmFzc2lnbihcbiAgICAgIGRhdGEsXG4gICAgICBpdG9SZWFzb25JZCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbNV1dOiBpdG9SZWFzb25JZCB9LFxuICAgICAgb2JzdGFjbGUgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzldXTogb2JzdGFjbGUgfSxcbiAgICAgIGxpZ2h0aW5nICYmIHsgW3RoaXMucGFyYW1OYW1lc1sxMF1dOiBsaWdodGluZyB9LFxuICAgICAgc2xvcGUgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzExXV06IHNsb3BlIH1cbiAgICApO1xuICAgIC8vVXBkYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUHV0UmVxdWVzdChcInNlZ21lbnRcIiwgZGF0YSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/database_interface/Segment.js\n");

/***/ }),

/***/ "./src/database_interface/Shift.js":
/*!*****************************************!*\
  !*** ./src/database_interface/Shift.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Shift: () => (/* binding */ Shift),\n/* harmony export */   ShiftInterface: () => (/* binding */ ShiftInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Shift data container class.\nclass Shift {\n  constructor(\n    id,\n    testEventId,\n    startTime,\n    endTime,\n    testAdministratorId,\n    testDirectorId,\n    safetyOfficerId,\n    robotOperatorId,\n    performerId,\n    testIntent,\n    workspace,\n    vehicleId,\n    note,\n    number\n  ) {\n    this.id = id;\n    this.testEventId = testEventId;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.testAdministratorId = testAdministratorId;\n    this.testDirectorId = testDirectorId;\n    this.safetyOfficerId = safetyOfficerId;\n    this.robotOperatorId = robotOperatorId;\n    this.performerId = performerId;\n    this.testIntent = testIntent;\n    this.workspace = workspace;\n    this.vehicleId = vehicleId;\n    this.note = note;\n    this.number = number;\n  }\n}\n\n//Shift database interaction class.\nclass ShiftInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"test_event_id\",\n      \"starttime_secs\",\n      \"endtime_secs\",\n      \"test_administrator_id\",\n      \"test_director_id\",\n      \"safety_officer_id\",\n      \"robot_operator_id\",\n      \"performer_id\",\n      \"test_intent\",\n      \"workspace\",\n      \"vehicle_id\",\n      \"note\",\n      \"number\",\n    ];\n  }\n\n  async get(testEventId) {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\n      \"shift\",\n      \"test_event_id=\" + testEventId\n    );\n    return data.map(\n      (entry) =>\n        new Shift(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          entry[4],\n          entry[5],\n          entry[6],\n          entry[7],\n          entry[8],\n          entry[9],\n          entry[10],\n          entry[11],\n          entry[12],\n          entry[13]\n        )\n    );\n  }\n\n  async post(\n    testEventId,\n    testAdministratorId,\n    testDirectorId,\n    safetyOfficerId,\n    robotOperatorId,\n    performerId,\n    testIntent,\n    workspace,\n    vehicleId,\n    note\n  ) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: testEventId,\n      [this.paramNames[4]]: testAdministratorId,\n      [this.paramNames[5]]: testDirectorId,\n      [this.paramNames[6]]: safetyOfficerId,\n      [this.paramNames[7]]: robotOperatorId,\n      [this.paramNames[8]]: performerId,\n      [this.paramNames[9]]: testIntent,\n      [this.paramNames[10]]: workspace,\n      [this.paramNames[11]]: vehicleId,\n      [this.paramNames[12]]: note,\n    };\n    await this.serverInterface.sendPostRequest(\"shift\", data);\n  }\n\n  async put(\n    id,\n    action,\n    testAdministratorId = null,\n    testDirectorId = null,\n    safetyOfficerId = null,\n    robotOperatorId = null,\n    performerId = null,\n    testIntent = null,\n    workspace = null,\n    vehicleId = null,\n    note = null\n  ) {\n    //Update entry in server table.\n    //The action parameter can be either \"edit\" or \"close\".\n    //Mandatory parameters:\n    const data = {\n      [this.paramNames[0]]: id,\n      [\"action\"]: action,\n    };\n    //Optional parameters:\n    Object.assign(\n      data,\n      testAdministratorId !== null && { [this.paramNames[4]]: testAdministratorId },\n      testDirectorId !== null && { [this.paramNames[5]]: testDirectorId },\n      safetyOfficerId !== null && { [this.paramNames[6]]: safetyOfficerId },\n      robotOperatorId !== null && { [this.paramNames[7]]: robotOperatorId },\n      performerId !== null && { [this.paramNames[8]]: performerId },\n      testIntent !== null && { [this.paramNames[9]]: testIntent },\n      workspace !== null && { [this.paramNames[10]]: workspace },\n      vehicleId !== null && { [this.paramNames[11]]: vehicleId },\n      note !== null && { [this.paramNames[12]]: note }\n    );\n    await this.serverInterface.sendPutRequest(\"shift\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"shift\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1NoaWZ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2RhdGFiYXNlX2ludGVyZmFjZS9TaGlmdC5qcz9hMzdhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vL1NoaWZ0IGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFNoaWZ0IHtcbiAgY29uc3RydWN0b3IoXG4gICAgaWQsXG4gICAgdGVzdEV2ZW50SWQsXG4gICAgc3RhcnRUaW1lLFxuICAgIGVuZFRpbWUsXG4gICAgdGVzdEFkbWluaXN0cmF0b3JJZCxcbiAgICB0ZXN0RGlyZWN0b3JJZCxcbiAgICBzYWZldHlPZmZpY2VySWQsXG4gICAgcm9ib3RPcGVyYXRvcklkLFxuICAgIHBlcmZvcm1lcklkLFxuICAgIHRlc3RJbnRlbnQsXG4gICAgd29ya3NwYWNlLFxuICAgIHZlaGljbGVJZCxcbiAgICBub3RlLFxuICAgIG51bWJlclxuICApIHtcbiAgICB0aGlzLmlkID0gaWQ7XG4gICAgdGhpcy50ZXN0RXZlbnRJZCA9IHRlc3RFdmVudElkO1xuICAgIHRoaXMuc3RhcnRUaW1lID0gc3RhcnRUaW1lO1xuICAgIHRoaXMuZW5kVGltZSA9IGVuZFRpbWU7XG4gICAgdGhpcy50ZXN0QWRtaW5pc3RyYXRvcklkID0gdGVzdEFkbWluaXN0cmF0b3JJZDtcbiAgICB0aGlzLnRlc3REaXJlY3RvcklkID0gdGVzdERpcmVjdG9ySWQ7XG4gICAgdGhpcy5zYWZldHlPZmZpY2VySWQgPSBzYWZldHlPZmZpY2VySWQ7XG4gICAgdGhpcy5yb2JvdE9wZXJhdG9ySWQgPSByb2JvdE9wZXJhdG9ySWQ7XG4gICAgdGhpcy5wZXJmb3JtZXJJZCA9IHBlcmZvcm1lcklkO1xuICAgIHRoaXMudGVzdEludGVudCA9IHRlc3RJbnRlbnQ7XG4gICAgdGhpcy53b3Jrc3BhY2UgPSB3b3Jrc3BhY2U7XG4gICAgdGhpcy52ZWhpY2xlSWQgPSB2ZWhpY2xlSWQ7XG4gICAgdGhpcy5ub3RlID0gbm90ZTtcbiAgICB0aGlzLm51bWJlciA9IG51bWJlcjtcbiAgfVxufVxuXG4vL1NoaWZ0IGRhdGFiYXNlIGludGVyYWN0aW9uIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFNoaWZ0SW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1xuICAgICAgXCJpZFwiLFxuICAgICAgXCJ0ZXN0X2V2ZW50X2lkXCIsXG4gICAgICBcInN0YXJ0dGltZV9zZWNzXCIsXG4gICAgICBcImVuZHRpbWVfc2Vjc1wiLFxuICAgICAgXCJ0ZXN0X2FkbWluaXN0cmF0b3JfaWRcIixcbiAgICAgIFwidGVzdF9kaXJlY3Rvcl9pZFwiLFxuICAgICAgXCJzYWZldHlfb2ZmaWNlcl9pZFwiLFxuICAgICAgXCJyb2JvdF9vcGVyYXRvcl9pZFwiLFxuICAgICAgXCJwZXJmb3JtZXJfaWRcIixcbiAgICAgIFwidGVzdF9pbnRlbnRcIixcbiAgICAgIFwid29ya3NwYWNlXCIsXG4gICAgICBcInZlaGljbGVfaWRcIixcbiAgICAgIFwibm90ZVwiLFxuICAgICAgXCJudW1iZXJcIixcbiAgICBdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHRlc3RFdmVudElkKSB7XG4gICAgLy9HZXQgdGFibGUgZGF0YSBmcm9tIHNlcnZlci5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZEdldFJlcXVlc3QoXG4gICAgICBcInNoaWZ0XCIsXG4gICAgICBcInRlc3RfZXZlbnRfaWQ9XCIgKyB0ZXN0RXZlbnRJZFxuICAgICk7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PlxuICAgICAgICBuZXcgU2hpZnQoXG4gICAgICAgICAgZW50cnlbMF0sXG4gICAgICAgICAgZW50cnlbMV0sXG4gICAgICAgICAgZW50cnlbMl0sXG4gICAgICAgICAgZW50cnlbM10sXG4gICAgICAgICAgZW50cnlbNF0sXG4gICAgICAgICAgZW50cnlbNV0sXG4gICAgICAgICAgZW50cnlbNl0sXG4gICAgICAgICAgZW50cnlbN10sXG4gICAgICAgICAgZW50cnlbOF0sXG4gICAgICAgICAgZW50cnlbOV0sXG4gICAgICAgICAgZW50cnlbMTBdLFxuICAgICAgICAgIGVudHJ5WzExXSxcbiAgICAgICAgICBlbnRyeVsxMl0sXG4gICAgICAgICAgZW50cnlbMTNdXG4gICAgICAgIClcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgcG9zdChcbiAgICB0ZXN0RXZlbnRJZCxcbiAgICB0ZXN0QWRtaW5pc3RyYXRvcklkLFxuICAgIHRlc3REaXJlY3RvcklkLFxuICAgIHNhZmV0eU9mZmljZXJJZCxcbiAgICByb2JvdE9wZXJhdG9ySWQsXG4gICAgcGVyZm9ybWVySWQsXG4gICAgdGVzdEludGVudCxcbiAgICB3b3Jrc3BhY2UsXG4gICAgdmVoaWNsZUlkLFxuICAgIG5vdGVcbiAgKSB7XG4gICAgLy9DcmVhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzFdXTogdGVzdEV2ZW50SWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzRdXTogdGVzdEFkbWluaXN0cmF0b3JJZCxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNV1dOiB0ZXN0RGlyZWN0b3JJZCxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNl1dOiBzYWZldHlPZmZpY2VySWQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzddXTogcm9ib3RPcGVyYXRvcklkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s4XV06IHBlcmZvcm1lcklkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s5XV06IHRlc3RJbnRlbnQsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzEwXV06IHdvcmtzcGFjZSxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMTFdXTogdmVoaWNsZUlkLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxMl1dOiBub3RlLFxuICAgIH07XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFBvc3RSZXF1ZXN0KFwic2hpZnRcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBwdXQoXG4gICAgaWQsXG4gICAgYWN0aW9uLFxuICAgIHRlc3RBZG1pbmlzdHJhdG9ySWQgPSBudWxsLFxuICAgIHRlc3REaXJlY3RvcklkID0gbnVsbCxcbiAgICBzYWZldHlPZmZpY2VySWQgPSBudWxsLFxuICAgIHJvYm90T3BlcmF0b3JJZCA9IG51bGwsXG4gICAgcGVyZm9ybWVySWQgPSBudWxsLFxuICAgIHRlc3RJbnRlbnQgPSBudWxsLFxuICAgIHdvcmtzcGFjZSA9IG51bGwsXG4gICAgdmVoaWNsZUlkID0gbnVsbCxcbiAgICBub3RlID0gbnVsbFxuICApIHtcbiAgICAvL1VwZGF0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgLy9UaGUgYWN0aW9uIHBhcmFtZXRlciBjYW4gYmUgZWl0aGVyIFwiZWRpdFwiIG9yIFwiY2xvc2VcIi5cbiAgICAvL01hbmRhdG9yeSBwYXJhbWV0ZXJzOlxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzBdXTogaWQsXG4gICAgICBbXCJhY3Rpb25cIl06IGFjdGlvbixcbiAgICB9O1xuICAgIC8vT3B0aW9uYWwgcGFyYW1ldGVyczpcbiAgICBPYmplY3QuYXNzaWduKFxuICAgICAgZGF0YSxcbiAgICAgIHRlc3RBZG1pbmlzdHJhdG9ySWQgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzRdXTogdGVzdEFkbWluaXN0cmF0b3JJZCB9LFxuICAgICAgdGVzdERpcmVjdG9ySWQgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzVdXTogdGVzdERpcmVjdG9ySWQgfSxcbiAgICAgIHNhZmV0eU9mZmljZXJJZCAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbNl1dOiBzYWZldHlPZmZpY2VySWQgfSxcbiAgICAgIHJvYm90T3BlcmF0b3JJZCAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbN11dOiByb2JvdE9wZXJhdG9ySWQgfSxcbiAgICAgIHBlcmZvcm1lcklkICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s4XV06IHBlcmZvcm1lcklkIH0sXG4gICAgICB0ZXN0SW50ZW50ICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s5XV06IHRlc3RJbnRlbnQgfSxcbiAgICAgIHdvcmtzcGFjZSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbMTBdXTogd29ya3NwYWNlIH0sXG4gICAgICB2ZWhpY2xlSWQgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzExXV06IHZlaGljbGVJZCB9LFxuICAgICAgbm90ZSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbMTJdXTogbm90ZSB9XG4gICAgKTtcbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kUHV0UmVxdWVzdChcInNoaWZ0XCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKGlkKSB7XG4gICAgLy9EZWxldGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmREZWxldGVSZXF1ZXN0KFwic2hpZnRcIiwgXCJpZD1cIiArIGlkKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/Shift.js\n");

/***/ }),

/***/ "./src/database_interface/TestEvent.js":
/*!*********************************************!*\
  !*** ./src/database_interface/TestEvent.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TestEvent: () => (/* binding */ TestEvent),\n/* harmony export */   TestEventInterface: () => (/* binding */ TestEventInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//TestEvent data container class.\nclass TestEvent {\n  constructor(id, startTime, endTime, location, version, timeZone, note) {\n    this.id = id;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.location = location;\n    this.version = version;\n    this.timeZone = timeZone;\n    this.note = note;\n  }\n}\n\n//TestEvent database interaction class.\nclass TestEventInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"starttime_secs\",\n      \"endtime_secs\",\n      \"location\",\n      \"version\",\n      \"time_zone\",\n      \"note\",\n    ];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"test_event\");\n    return data.map(\n      (entry) =>\n        new TestEvent(\n          entry[0],\n          entry[1],\n          entry[2],\n          entry[3],\n          entry[4],\n          entry[5],\n          entry[6]\n        )\n    );\n  }\n\n  async post(location, version, timeZone, note) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[3]]: location,\n      [this.paramNames[4]]: version,\n      [this.paramNames[5]]: timeZone,\n      [this.paramNames[6]]: note,\n    };\n    await this.serverInterface.sendPostRequest(\"test_event\", data);\n  }\n\n  async put(\n    id,\n    action,\n    location = null,\n    version = null,\n    timeZone = null,\n    note = null\n  ) {\n    //Update entry in server table.\n    //The action parameter can be either \"edit\" or \"close\".\n    //Mandatory parameters:\n    const data = {\n      [this.paramNames[0]]: id,\n      [\"action\"]: action,\n    };\n    //Optional parameters:\n    Object.assign(\n      data,\n      location !== null && { [this.paramNames[3]]: location },\n      version !== null && { [this.paramNames[4]]: version },\n      timeZone !== null && { [this.paramNames[5]]: timeZone },\n      note !== null && { [this.paramNames[6]]: note }\n    );\n    await this.serverInterface.sendPutRequest(\"test_event\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"test_event\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1Rlc3RFdmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9kYXRhYmFzZV9pbnRlcmZhY2UvVGVzdEV2ZW50LmpzPzZmZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vVGVzdEV2ZW50IGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFRlc3RFdmVudCB7XG4gIGNvbnN0cnVjdG9yKGlkLCBzdGFydFRpbWUsIGVuZFRpbWUsIGxvY2F0aW9uLCB2ZXJzaW9uLCB0aW1lWm9uZSwgbm90ZSkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnN0YXJ0VGltZSA9IHN0YXJ0VGltZTtcbiAgICB0aGlzLmVuZFRpbWUgPSBlbmRUaW1lO1xuICAgIHRoaXMubG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xuICAgIHRoaXMudGltZVpvbmUgPSB0aW1lWm9uZTtcbiAgICB0aGlzLm5vdGUgPSBub3RlO1xuICB9XG59XG5cbi8vVGVzdEV2ZW50IGRhdGFiYXNlIGludGVyYWN0aW9uIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFRlc3RFdmVudEludGVyZmFjZSB7XG4gIGNvbnN0cnVjdG9yKHNlcnZlckludGVyZmFjZSkge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMuc2VydmVySW50ZXJmYWNlID0gc2VydmVySW50ZXJmYWNlO1xuICAgIHRoaXMucGFyYW1OYW1lcyA9IFtcbiAgICAgIFwiaWRcIixcbiAgICAgIFwic3RhcnR0aW1lX3NlY3NcIixcbiAgICAgIFwiZW5kdGltZV9zZWNzXCIsXG4gICAgICBcImxvY2F0aW9uXCIsXG4gICAgICBcInZlcnNpb25cIixcbiAgICAgIFwidGltZV96b25lXCIsXG4gICAgICBcIm5vdGVcIixcbiAgICBdO1xuICB9XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIC8vR2V0IHRhYmxlIGRhdGEgZnJvbSBzZXJ2ZXIuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRHZXRSZXF1ZXN0KFwidGVzdF9ldmVudFwiKTtcbiAgICByZXR1cm4gZGF0YS5tYXAoXG4gICAgICAoZW50cnkpID0+XG4gICAgICAgIG5ldyBUZXN0RXZlbnQoXG4gICAgICAgICAgZW50cnlbMF0sXG4gICAgICAgICAgZW50cnlbMV0sXG4gICAgICAgICAgZW50cnlbMl0sXG4gICAgICAgICAgZW50cnlbM10sXG4gICAgICAgICAgZW50cnlbNF0sXG4gICAgICAgICAgZW50cnlbNV0sXG4gICAgICAgICAgZW50cnlbNl1cbiAgICAgICAgKVxuICAgICk7XG4gIH1cblxuICBhc3luYyBwb3N0KGxvY2F0aW9uLCB2ZXJzaW9uLCB0aW1lWm9uZSwgbm90ZSkge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1szXV06IGxvY2F0aW9uLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1s0XV06IHZlcnNpb24sXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzVdXTogdGltZVpvbmUsXG4gICAgICBbdGhpcy5wYXJhbU5hbWVzWzZdXTogbm90ZSxcbiAgICB9O1xuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRQb3N0UmVxdWVzdChcInRlc3RfZXZlbnRcIiwgZGF0YSk7XG4gIH1cblxuICBhc3luYyBwdXQoXG4gICAgaWQsXG4gICAgYWN0aW9uLFxuICAgIGxvY2F0aW9uID0gbnVsbCxcbiAgICB2ZXJzaW9uID0gbnVsbCxcbiAgICB0aW1lWm9uZSA9IG51bGwsXG4gICAgbm90ZSA9IG51bGxcbiAgKSB7XG4gICAgLy9VcGRhdGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIC8vVGhlIGFjdGlvbiBwYXJhbWV0ZXIgY2FuIGJlIGVpdGhlciBcImVkaXRcIiBvciBcImNsb3NlXCIuXG4gICAgLy9NYW5kYXRvcnkgcGFyYW1ldGVyczpcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1swXV06IGlkLFxuICAgICAgW1wiYWN0aW9uXCJdOiBhY3Rpb24sXG4gICAgfTtcbiAgICAvL09wdGlvbmFsIHBhcmFtZXRlcnM6XG4gICAgT2JqZWN0LmFzc2lnbihcbiAgICAgIGRhdGEsXG4gICAgICBsb2NhdGlvbiAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbM11dOiBsb2NhdGlvbiB9LFxuICAgICAgdmVyc2lvbiAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbNF1dOiB2ZXJzaW9uIH0sXG4gICAgICB0aW1lWm9uZSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbNV1dOiB0aW1lWm9uZSB9LFxuICAgICAgbm90ZSAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbNl1dOiBub3RlIH1cbiAgICApO1xuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmRQdXRSZXF1ZXN0KFwidGVzdF9ldmVudFwiLCBkYXRhKTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZShpZCkge1xuICAgIC8vRGVsZXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kRGVsZXRlUmVxdWVzdChcInRlc3RfZXZlbnRcIiwgXCJpZD1cIiArIGlkKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/database_interface/TestEvent.js\n");

/***/ }),

/***/ "./src/database_interface/Vehicle.js":
/*!*******************************************!*\
  !*** ./src/database_interface/Vehicle.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Vehicle: () => (/* binding */ Vehicle),\n/* harmony export */   VehicleInterface: () => (/* binding */ VehicleInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Vehicle data container class.\nclass Vehicle {\n  constructor(\n    id,\n    key,\n    shortDescription,\n    longDescription,\n    institution,\n    configuration\n  ) {\n    this.id = id;\n    this.key = key;\n    this.shortDescription = shortDescription;\n    this.longDescription = longDescription;\n    this.institution = institution;\n    this.configuration = configuration;\n  }\n}\n\n//Vehicle database interaction class.\nclass VehicleInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\n      \"id\",\n      \"key\",\n      \"short_description\",\n      \"long_description\",\n      \"institution\",\n      \"configuration\",\n    ];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"vehicle\");\n    return data.map(\n      (entry) =>\n        new Vehicle(entry[0], entry[1], entry[2], entry[3], entry[4], entry[5])\n    );\n  }\n\n  async post(\n    key,\n    shortDescription,\n    longDescription,\n    institution,\n    configuration\n  ) {\n    //Create entry in server table.\n    const data = {\n      [this.paramNames[1]]: key,\n      [this.paramNames[2]]: shortDescription,\n      [this.paramNames[3]]: longDescription,\n      [this.paramNames[4]]: institution,\n      [this.paramNames[5]]: configuration,\n    };\n    await this.serverInterface.sendPostRequest(\"vehicle\", data);\n  }\n\n  async put(\n    id,\n    key,\n    shortDescription,\n    longDescription,\n    institution,\n    configuration\n  ) {\n    //Update entry in server table.\n    //Mandatory parameters:\n    const data = { [this.paramNames[0]]: id };\n    //Optional parameters:\n    Object.assign(\n      data,\n      key !== null && { [this.paramNames[1]]: key },\n      shortDescription !== null && { [this.paramNames[2]]: shortDescription },\n      longDescription !== null && { [this.paramNames[3]]: longDescription },\n      institution !== null && { [this.paramNames[4]]: institution },\n      configuration !== null && { [this.paramNames[5]]: configuration }\n    );\n    await this.serverInterface.sendPutRequest(\"vehicle\", data);\n  }\n\n  async delete(id) {\n    //Delete entry in server table.\n    await this.serverInterface.sendDeleteRequest(\"vehicle\", \"id=\" + id);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1ZlaGljbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9kYXRhYmFzZV9pbnRlcmZhY2UvVmVoaWNsZS5qcz82MTQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vL1ZlaGljbGUgZGF0YSBjb250YWluZXIgY2xhc3MuXG5leHBvcnQgY2xhc3MgVmVoaWNsZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGlkLFxuICAgIGtleSxcbiAgICBzaG9ydERlc2NyaXB0aW9uLFxuICAgIGxvbmdEZXNjcmlwdGlvbixcbiAgICBpbnN0aXR1dGlvbixcbiAgICBjb25maWd1cmF0aW9uXG4gICkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB0aGlzLnNob3J0RGVzY3JpcHRpb24gPSBzaG9ydERlc2NyaXB0aW9uO1xuICAgIHRoaXMubG9uZ0Rlc2NyaXB0aW9uID0gbG9uZ0Rlc2NyaXB0aW9uO1xuICAgIHRoaXMuaW5zdGl0dXRpb24gPSBpbnN0aXR1dGlvbjtcbiAgICB0aGlzLmNvbmZpZ3VyYXRpb24gPSBjb25maWd1cmF0aW9uO1xuICB9XG59XG5cbi8vVmVoaWNsZSBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBWZWhpY2xlSW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1xuICAgICAgXCJpZFwiLFxuICAgICAgXCJrZXlcIixcbiAgICAgIFwic2hvcnRfZGVzY3JpcHRpb25cIixcbiAgICAgIFwibG9uZ19kZXNjcmlwdGlvblwiLFxuICAgICAgXCJpbnN0aXR1dGlvblwiLFxuICAgICAgXCJjb25maWd1cmF0aW9uXCIsXG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcInZlaGljbGVcIik7XG4gICAgcmV0dXJuIGRhdGEubWFwKFxuICAgICAgKGVudHJ5KSA9PlxuICAgICAgICBuZXcgVmVoaWNsZShlbnRyeVswXSwgZW50cnlbMV0sIGVudHJ5WzJdLCBlbnRyeVszXSwgZW50cnlbNF0sIGVudHJ5WzVdKVxuICAgICk7XG4gIH1cblxuICBhc3luYyBwb3N0KFxuICAgIGtleSxcbiAgICBzaG9ydERlc2NyaXB0aW9uLFxuICAgIGxvbmdEZXNjcmlwdGlvbixcbiAgICBpbnN0aXR1dGlvbixcbiAgICBjb25maWd1cmF0aW9uXG4gICkge1xuICAgIC8vQ3JlYXRlIGVudHJ5IGluIHNlcnZlciB0YWJsZS5cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgW3RoaXMucGFyYW1OYW1lc1sxXV06IGtleSxcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbMl1dOiBzaG9ydERlc2NyaXB0aW9uLFxuICAgICAgW3RoaXMucGFyYW1OYW1lc1szXV06IGxvbmdEZXNjcmlwdGlvbixcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNF1dOiBpbnN0aXR1dGlvbixcbiAgICAgIFt0aGlzLnBhcmFtTmFtZXNbNV1dOiBjb25maWd1cmF0aW9uLFxuICAgIH07XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFBvc3RSZXF1ZXN0KFwidmVoaWNsZVwiLCBkYXRhKTtcbiAgfVxuXG4gIGFzeW5jIHB1dChcbiAgICBpZCxcbiAgICBrZXksXG4gICAgc2hvcnREZXNjcmlwdGlvbixcbiAgICBsb25nRGVzY3JpcHRpb24sXG4gICAgaW5zdGl0dXRpb24sXG4gICAgY29uZmlndXJhdGlvblxuICApIHtcbiAgICAvL1VwZGF0ZSBlbnRyeSBpbiBzZXJ2ZXIgdGFibGUuXG4gICAgLy9NYW5kYXRvcnkgcGFyYW1ldGVyczpcbiAgICBjb25zdCBkYXRhID0geyBbdGhpcy5wYXJhbU5hbWVzWzBdXTogaWQgfTtcbiAgICAvL09wdGlvbmFsIHBhcmFtZXRlcnM6XG4gICAgT2JqZWN0LmFzc2lnbihcbiAgICAgIGRhdGEsXG4gICAgICBrZXkgIT09IG51bGwgJiYgeyBbdGhpcy5wYXJhbU5hbWVzWzFdXToga2V5IH0sXG4gICAgICBzaG9ydERlc2NyaXB0aW9uICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1syXV06IHNob3J0RGVzY3JpcHRpb24gfSxcbiAgICAgIGxvbmdEZXNjcmlwdGlvbiAhPT0gbnVsbCAmJiB7IFt0aGlzLnBhcmFtTmFtZXNbM11dOiBsb25nRGVzY3JpcHRpb24gfSxcbiAgICAgIGluc3RpdHV0aW9uICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s0XV06IGluc3RpdHV0aW9uIH0sXG4gICAgICBjb25maWd1cmF0aW9uICE9PSBudWxsICYmIHsgW3RoaXMucGFyYW1OYW1lc1s1XV06IGNvbmZpZ3VyYXRpb24gfVxuICAgICk7XG4gICAgYXdhaXQgdGhpcy5zZXJ2ZXJJbnRlcmZhY2Uuc2VuZFB1dFJlcXVlc3QoXCJ2ZWhpY2xlXCIsIGRhdGEpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKGlkKSB7XG4gICAgLy9EZWxldGUgZW50cnkgaW4gc2VydmVyIHRhYmxlLlxuICAgIGF3YWl0IHRoaXMuc2VydmVySW50ZXJmYWNlLnNlbmREZWxldGVSZXF1ZXN0KFwidmVoaWNsZVwiLCBcImlkPVwiICsgaWQpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/database_interface/Vehicle.js\n");

/***/ }),

/***/ "./src/database_interface/Weather.js":
/*!*******************************************!*\
  !*** ./src/database_interface/Weather.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Weather: () => (/* binding */ Weather),\n/* harmony export */   WeatherInterface: () => (/* binding */ WeatherInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Weather data container class.\nclass Weather {\n  constructor(id, shortDescription) {\n    this.id = id;\n    this.shortDescription = shortDescription;\n  }\n}\n\n//Weather database interaction class.\nclass WeatherInterface {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.paramNames = [\"id\", \"short_description\"];\n  }\n\n  async get() {\n    //Get table data from server.\n    const data = await this.serverInterface.sendGetRequest(\"weather\");\n    return data.map((entry) => new Weather(entry[0], entry[1]));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1dlYXRoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvZGF0YWJhc2VfaW50ZXJmYWNlL1dlYXRoZXIuanM/N2E5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9XZWF0aGVyIGRhdGEgY29udGFpbmVyIGNsYXNzLlxuZXhwb3J0IGNsYXNzIFdlYXRoZXIge1xuICBjb25zdHJ1Y3RvcihpZCwgc2hvcnREZXNjcmlwdGlvbikge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnNob3J0RGVzY3JpcHRpb24gPSBzaG9ydERlc2NyaXB0aW9uO1xuICB9XG59XG5cbi8vV2VhdGhlciBkYXRhYmFzZSBpbnRlcmFjdGlvbiBjbGFzcy5cbmV4cG9ydCBjbGFzcyBXZWF0aGVySW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlKSB7XG4gICAgLy9TZXQgYXJndW1lbnRzIGFzIHByb3BlcnRpZXMuXG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBzZXJ2ZXJJbnRlcmZhY2U7XG4gICAgdGhpcy5wYXJhbU5hbWVzID0gW1wiaWRcIiwgXCJzaG9ydF9kZXNjcmlwdGlvblwiXTtcbiAgfVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICAvL0dldCB0YWJsZSBkYXRhIGZyb20gc2VydmVyLlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnNlcnZlckludGVyZmFjZS5zZW5kR2V0UmVxdWVzdChcIndlYXRoZXJcIik7XG4gICAgcmV0dXJuIGRhdGEubWFwKChlbnRyeSkgPT4gbmV3IFdlYXRoZXIoZW50cnlbMF0sIGVudHJ5WzFdKSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/database_interface/Weather.js\n");

/***/ }),

/***/ "./src/frames/LogSelection.js":
/*!************************************!*\
  !*** ./src/frames/LogSelection.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogSelection: () => (/* binding */ LogSelection)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* harmony import */ var _utility_Modal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utility/Modal.js */ \"./src/utility/Modal.js\");\n/* harmony import */ var _utility_ConfirmationModal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utility/ConfirmationModal.js */ \"./src/utility/ConfirmationModal.js\");\n/* harmony import */ var _database_interface_TestEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../database_interface/TestEvent.js */ \"./src/database_interface/TestEvent.js\");\n/* harmony import */ var _database_interface_Shift_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../database_interface/Shift.js */ \"./src/database_interface/Shift.js\");\n/* harmony import */ var _database_interface_Leg_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../database_interface/Leg.js */ \"./src/database_interface/Leg.js\");\n/* harmony import */ var _database_interface_Performer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../database_interface/Performer.js */ \"./src/database_interface/Performer.js\");\n/* harmony import */ var _database_interface_Personnel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../database_interface/Personnel.js */ \"./src/database_interface/Personnel.js\");\n/* harmony import */ var _database_interface_Vehicle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../database_interface/Vehicle.js */ \"./src/database_interface/Vehicle.js\");\n/* harmony import */ var _database_interface_Weather_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../database_interface/Weather.js */ \"./src/database_interface/Weather.js\");\n/* harmony import */ var _database_interface_PoseSource_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../database_interface/PoseSource.js */ \"./src/database_interface/PoseSource.js\");\n/* harmony import */ var _overlays_TestEventEdit_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../overlays/TestEventEdit.js */ \"./src/overlays/TestEventEdit.js\");\n/* harmony import */ var _overlays_ShiftEdit_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../overlays/ShiftEdit.js */ \"./src/overlays/ShiftEdit.js\");\n/* harmony import */ var _overlays_LegEdit_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../overlays/LegEdit.js */ \"./src/overlays/LegEdit.js\");\n/* eslint-disable no-undef */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Log {\n  //Helper base class to contain log related data and functions.\n  constructor(\n    name,\n    dataInterface,\n    parentSelect = null,\n    childClass = null,\n    checkSelectionCallback\n  ) {\n    //Set arguments as properties.\n    this.name = name;\n    this.dataInterface = dataInterface;\n    this.parentSelect = parentSelect;\n    this.childClass = childClass;\n    this.checkSelectionFcn = checkSelectionCallback;\n    //Get DOM element hooks.\n    this.statusDot = document.getElementById(`${name}-status-dot`);\n    this.select = document.getElementById(`${name}-id`);\n    this.newBtn = document.getElementById(`new-${name}-btn`);\n    this.endBtn = document.getElementById(`end-${name}-btn`);\n    this.editBtn = document.getElementById(`edit-${name}-btn`);\n    this.deleteBtn = document.getElementById(`delete-${name}-btn`);\n    //Initialize variables.\n    this.postData = null; //To be redefined by child class.\n    this.dataList = [];\n    this.open = false;\n    //Add event listeners.\n    this.select.addEventListener(\"change\", this.selectChangeHandler.bind(this));\n    this.newBtn.addEventListener(\"click\", this.newBtnClickHandler.bind(this));\n    this.endBtn.addEventListener(\"click\", this.endBtnClickHandler.bind(this));\n    this.editBtn.addEventListener(\"click\", this.editBtnClickHandler.bind(this));\n    this.deleteBtn.addEventListener(\n      \"click\",\n      this.deleteBtnClickHandler.bind(this)\n    );\n  }\n\n  checkSelectionCallback() {\n    //Execute callback passed in constructor's arguments.\n    this.checkSelectionFcn();\n  }\n\n  clearSelectData() {\n    //Clear the child select data.\n    if (this.childClass) {\n      this.childClass.clearSelectData();\n    }\n    //Clear own select data.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.clearChildren(this.select);\n  }\n\n  async updateData() {\n    this.dataList = await this.dataInterface.get(\n      this.parentSelect && this.parentSelect.value\n    );\n  }\n\n  async updateSelect() {\n    //Check parent select value.\n    if (this.parentSelect && !this.parentSelect.value) {\n      alert(\"Please select an ID in the parent select first.\");\n      return;\n    }\n    try {\n      //Get table data from server.\n      await this.updateData();\n      //Fill the specified select with the fetched data.\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n        this.select,\n        this.dataList.map((entry) => entry.id).reverse(),\n        this.dataList\n          .map((entry) => (entry.endTime ? \"closed-log\" : \"open-log\"))\n          .reverse()\n      );\n      //Clear the child select data.\n      if (this.childClass) {\n        this.childClass.clearSelectData();\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async selectChangeHandler() {\n    //Remove top blank option.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(this.select);\n    //Update open log status\n    this.open = !this.dataList.find((entry) => entry.id == this.select.value)\n      .endTime;\n    //Update the child options.\n    if (this.childClass) {\n      await this.childClass.updateSelect();\n    }\n    if (this.childClass && this.childClass.dataList.length === 1) {\n      //If the child only has one option, select it and call recursion.\n      this.childClass.select.value = this.childClass.dataList[0].id;\n      this.childClass.selectChangeHandler();\n    } else {\n      //Else finish: Check log IDs, hide segments and map.\n      this.checkSelectionCallback();\n    }\n  }\n\n  async newBtnClickHandler() {\n    try {\n      //Send request for the creation of a new log entry.\n      await this.dataInterface.post(...this.postData);\n      //Update the select options.\n      await this.updateSelect();\n      //Remove top blank option.\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(this.select);\n      //Choose the newly created log entry from the select.\n      this.select.value = Math.max(...this.dataList.map((entry) => entry.id));\n      //Update open log status.\n      this.open = true;\n      //Trigger the edit behavior.\n      await this.editBtnClickHandler();\n      //Check log IDs, hide segments and map.\n      this.checkSelectionCallback();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async recursiveUpdate() {\n    //Method to update the dataList and select options after a put request.\n    //This won't rebuild the selects, but rather update the log status.\n    //Child recursiveUpdate.\n    if (this.childClass) {\n      await this.childClass.recursiveUpdate();\n    }\n    if (!this.parentSelect || (this.parentSelect && this.parentSelect.value)) {\n      //Update this dataList:\n      await this.updateData();\n      //Update open log status\n      if (this.select.value) {\n        this.open = !this.dataList.find(\n          (entry) => entry.id == this.select.value\n        ).endTime;\n      }\n      //Change the select option html class for the logs.\n      Array.from(this.select.children).forEach((option) => {\n        if (option.value) {\n          //Find the log entry for the option.\n          const matchedEntry = this.dataList.find(\n            (entry) => entry.id == option.value\n          );\n          //Update the option's html class.\n          option.className = matchedEntry.endTime ? \"closed-log\" : \"open-log\";\n        }\n      });\n    }\n  }\n\n  async endBtnClickHandler() {\n    //Check select value.\n    if (!this.select.value) {\n      alert(\"Please select an ID to close.\");\n      return;\n    }\n    try {\n      //Stop logging.\n      const startLoggingBtn = document.getElementById(\"start-logging-btn\");\n      if (startLoggingBtn.textContent === \"Stop Logging\") {\n        startLoggingBtn.click();\n      }\n      //Close log entry.\n      await this.dataInterface.put(this.select.value, \"close\");\n      //Update dataList and select options' status for this and all the children classes.\n      await this.recursiveUpdate();\n      //Check log IDs, hide segments and map.\n      this.checkSelectionCallback();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async editBtnClickHandler() {\n    //Display the edit window built in the child function.\n    const modal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_1__.Modal(\n      this.editContainer,\n      \"Your browser does't support this feature! - Please change to a more modern one.\",\n      this.updateData.bind(this)\n    );\n    modal.show();\n  }\n\n  async deleteLogEntry() {\n    try {\n      //Send request for the deletion of the current log entry.\n      await this.dataInterface.delete(this.select.value);\n      //Update the select options.\n      await this.updateSelect();\n      //Reset log status.\n      this.open = false;\n      //Check log IDs, hide segments and map.\n      this.checkSelectionCallback();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async deleteBtnClickHandler() {\n    //Make sure an id selected.\n    if (!this.select.value) {\n      alert(\"Please select an ID to delete!\");\n      return;\n    }\n    //Prompt confirmation.\n    const modal = new _utility_ConfirmationModal_js__WEBPACK_IMPORTED_MODULE_2__.ConfirmationModal(\n      \"Warning!\",\n      `<strong>This operation cannot be undone!</strong>\n      Are you sure you want to delete <b>${this.name.replace(/-/g, \" \")} ${\n        this.select.value\n      }</b> and all its children?`,\n      \"Your browser does't support this feature! - Please change to a more modern one.\",\n      this.deleteLogEntry.bind(this) //Delete the entry if confirmed.\n    );\n    modal.show();\n  }\n}\n\nclass TestEventLog extends Log {\n  //Specific test event class to deal with log interactions.\n  constructor(serverInterface, childClass, checkSelectionCallback) {\n    //Parent constructor.\n    super(\n      \"test-event\",\n      new _database_interface_TestEvent_js__WEBPACK_IMPORTED_MODULE_3__.TestEventInterface(serverInterface),\n      null,\n      childClass,\n      checkSelectionCallback\n    );\n    //Add option to open the test event.\n    this.openBtn = document.getElementById(\"open-test-event-btn\");\n    this.openBtn.addEventListener(\"click\", this.openBtnClickHandler.bind(this));\n  }\n\n  async newBtnClickHandler() {\n    //Set postData.\n    this.postData = [null, null, null, null];\n    //Call parent function.\n    await super.newBtnClickHandler();\n  }\n\n  async openBtnClickHandler() {\n    //Check select value.\n    if (!this.select.value) {\n      alert(\"Please select an ID to open.\");\n      return;\n    }\n    try {\n      //Open log entry.\n      await this.dataInterface.put(this.select.value, \"open\");\n      //Update dataList and select options' status for this and all the children classes.\n      await this.recursiveUpdate();\n      //Check log IDs, hide segments and map.\n      this.checkSelectionCallback();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async editBtnClickHandler() {\n    //Check select value.\n    if (!this.select.value) {\n      alert(\"Please select an ID to edit.\");\n      return;\n    }\n    //Find the selected log entry.\n    const selectedLog = this.dataList.find(\n      (entry) => entry.id == this.select.value\n    );\n    //Build the edit window.\n    this.editContainer = new _overlays_TestEventEdit_js__WEBPACK_IMPORTED_MODULE_11__.TestEventEdit(selectedLog, this.dataInterface);\n    //Call parent function.\n    await super.editBtnClickHandler();\n  }\n}\n\nclass ShiftLog extends Log {\n  //Specific shift class to deal with log interactions.\n  constructor(\n    serverInterface,\n    childClass,\n    checkSelectionCallback,\n    currentUser\n  ) {\n    //Parent constructor.\n    super(\n      \"shift\",\n      new _database_interface_Shift_js__WEBPACK_IMPORTED_MODULE_4__.ShiftInterface(serverInterface),\n      document.getElementById(\"test-event-id\"),\n      childClass,\n      checkSelectionCallback\n    );\n    //Initialize child variables and objects.\n    this.currentUser = currentUser;\n    this.performerInterface = new _database_interface_Performer_js__WEBPACK_IMPORTED_MODULE_6__.PerformerInterface(serverInterface);\n    this.personnelInterface = new _database_interface_Personnel_js__WEBPACK_IMPORTED_MODULE_7__.PersonnelInterface(serverInterface);\n    this.vehicleInterface = new _database_interface_Vehicle_js__WEBPACK_IMPORTED_MODULE_8__.VehicleInterface(serverInterface);\n    this.performerList = null;\n    this.personnelList = null;\n    this.vehicleList = null;\n  }\n\n  async newBtnClickHandler() {\n    //Make sure a test event is selected.\n    if (!this.parentSelect.value) {\n      alert(\"Please select a test event to add a new shift!\");\n      return;\n    }\n    //Make sure a user is selected from the interface.\n    if (!this.currentUser.id) {\n      document.getElementById(\"user-icon\").click();\n      return;\n    }\n    //Fetch performer and vehicle data from server.\n    try {\n      this.performerList = await this.performerInterface.get();\n      this.vehicleList = await this.vehicleInterface.get();\n    } catch (error) {\n      alert(error.message);\n      return;\n    }\n    //If there are no performers or vehicles in the list, alert the user.\n    if (this.performerList.length == 0 || this.vehicleList.length == 0) {\n      alert(\n        \"Please configure a performer and a vehicle before trying to add a new shift!\"\n      );\n      return;\n    }\n    //Find the performer that matches the selected user. If none matches, use the first one.\n    let matchedPerformer =\n      this.performerList.find(\n        (performer) => performer.institution == this.currentUser.institution\n      ) || this.performerList[0];\n    //Find a vehicle that matches the selected user's institution. If none matches, use the first one.\n    let matchedVehicle =\n      this.vehicleList.find(\n        (vehicle) => vehicle.institution == this.currentUser.institution\n      ) || this.vehicleList[0];\n    //Set postData.\n    this.postData = [\n      this.parentSelect.value,\n      this.currentUser.id,\n      this.currentUser.id,\n      this.currentUser.id,\n      this.currentUser.id,\n      matchedPerformer.id,\n      null,\n      null,\n      matchedVehicle.id,\n      null,\n    ];\n    //Call parent function.\n    await super.newBtnClickHandler();\n  }\n\n  async editBtnClickHandler() {\n    //Check select value.\n    if (!this.select.value) {\n      alert(\"Please select an ID to edit.\");\n      return;\n    }\n    //Find the selected log entry.\n    const selectedLog = this.dataList.find(\n      (entry) => entry.id == this.select.value\n    );\n    //Fetch performer, personnel and vehicle data from server.\n    try {\n      this.performerList = await this.performerInterface.get();\n      this.personnelList = await this.personnelInterface.get();\n      this.vehicleList = await this.vehicleInterface.get();\n    } catch (error) {\n      alert(error.message);\n      return;\n    }\n    //Build the edit window.\n    this.editContainer = new _overlays_ShiftEdit_js__WEBPACK_IMPORTED_MODULE_12__.ShiftEdit(\n      selectedLog,\n      this.dataInterface,\n      this.performerList,\n      this.personnelList,\n      this.vehicleList\n    );\n    //Call parent function.\n    await super.editBtnClickHandler();\n  }\n}\n\nclass LegLog extends Log {\n  //Specific leg class to deal with log interactions.\n  constructor(serverInterface, checkSelectionCallback) {\n    //Parent constructor.\n    super(\n      \"leg\",\n      new _database_interface_Leg_js__WEBPACK_IMPORTED_MODULE_5__.LegInterface(serverInterface),\n      document.getElementById(\"shift-id\"),\n      null,\n      checkSelectionCallback\n    );\n    //Initialize child variables and objects.\n    this.weatherInterface = new _database_interface_Weather_js__WEBPACK_IMPORTED_MODULE_9__.WeatherInterface(serverInterface);\n    this.poseSourceInterface = new _database_interface_PoseSource_js__WEBPACK_IMPORTED_MODULE_10__.PoseSourceInterface(serverInterface);\n\n    this.weatherList = null;\n    this.poseSourceList = null;\n  }\n\n  async newBtnClickHandler() {\n    //Make sure a shift is selected.\n    if (!this.parentSelect.value) {\n      alert(\"Please select a shift to add a new leg!\");\n      return;\n    }\n    //Fetch weather and pose source data from server.\n    try {\n      //Weather data is static. Skip if already fetched.\n      if (!this.weatherList || this.weatherList.length == 0) {\n        this.weatherList = await this.weatherInterface.get();\n      }\n      this.poseSourceList = await this.poseSourceInterface.get();\n    } catch (error) {\n      alert(error.message);\n      return;\n    }\n    //If there are no weather states, alert the user.\n    if (this.weatherList.length == 0) {\n      alert(\n        \"Weather list empty. Your database was not properly initialized. Please fix this before continuing.\"\n      );\n      return;\n    }\n    //If the pose source list is empty, alert the user.\n    if (this.poseSourceList.length == 0) {\n      alert(\"Please configure a pose source before trying to add a new leg!\");\n      return;\n    }\n    //Set postData.\n    this.postData = [\n      this.parentSelect.value,\n      this.weatherList[0].id,\n      this.poseSourceList[0].id,\n      null,\n    ];\n    //Call parent function.\n    await super.newBtnClickHandler();\n  }\n\n  async editBtnClickHandler() {\n    //Check select value.\n    if (!this.select.value) {\n      alert(\"Please select an ID to edit.\");\n      return;\n    }\n    //Find the selected log entry.\n    const selectedLog = this.dataList.find(\n      (entry) => entry.id == this.select.value\n    );\n    //Fetch weather and pose source data from server.\n    try {\n      //Weather data is static. Skip if already fetched.\n      if (!this.weatherList || this.weatherList.length == 0) {\n        this.weatherList = await this.weatherInterface.get();\n      }\n      this.poseSourceList = await this.poseSourceInterface.get();\n    } catch (error) {\n      alert(error.message);\n      return;\n    }\n    //Build the edit window.\n    this.editContainer = new _overlays_LegEdit_js__WEBPACK_IMPORTED_MODULE_13__.LegEdit(\n      selectedLog,\n      this.dataInterface,\n      this.weatherList,\n      this.poseSourceList\n    );\n    //Call parent function.\n    await super.editBtnClickHandler();\n  }\n}\n\nclass LogSelection {\n  //Container class for the log selection section of the web page.\n  constructor(serverInterface, rosInterface, currentUser, doneCallback) {\n    //Set arguments as properties.\n    this.ros = rosInterface;\n    this.doneCallback = doneCallback;\n    //Reach to DOM elements.\n    this.startLoggingBtn = document.getElementById(\"start-logging-btn\");\n    this.autoRefreshBox = document.getElementById(\"auto-refresh\");\n    //Initialize variables.\n    this.isLogging = false;\n    this.setLoggingClient = new ROSLIB.Service({\n      ros: this.ros,\n      name: \"/set_ftt_logging\",\n      serviceType: \"std_srvs/SetBool\",\n    });\n    this.getLoggingClient = new ROSLIB.Service({\n      ros: this.ros,\n      name: \"/get_ftt_logging\",\n      serviceType: \"std_srvs/Trigger\",\n    });\n    //Initialize log objects.\n    this.legLog = new LegLog(\n      serverInterface,\n      this.checkSelectedLogs.bind(this)\n    );\n    this.shiftLog = new ShiftLog(\n      serverInterface,\n      this.legLog,\n      this.checkSelectedLogs.bind(this),\n      currentUser\n    );\n    this.testEventLog = new TestEventLog(\n      serverInterface,\n      this.shiftLog,\n      this.checkSelectedLogs.bind(this)\n    );\n    //Add event listeners.\n    this.startLoggingBtn.addEventListener(\n      \"click\",\n      this.loggingBtnClickHandler.bind(this)\n    );\n    //Trigger init behavior.\n    this.init();\n  }\n\n  async init() {\n    await this.testEventLog.updateSelect();\n    const personnelList = await this.shiftLog.personnelInterface.get();\n    if (personnelList.length > 0) {\n      document.getElementById(\"user-icon\").click();\n    } else {\n      //Prompt configuration notice.\n      const modal = new _utility_ConfirmationModal_js__WEBPACK_IMPORTED_MODULE_2__.ConfirmationModal(\n        \"Welcome!\",\n        `It looks like you haven't configured any users yet. \n        Please input at least one entry for each <strong>Database Configuration</strong> table. \n        Clicking on the top left cogwheel of the main page or on the <i>confirm</i> button below will take you to the configuration page.`,\n        \"Your browser does't support this feature! - Please change to a more modern one.\",\n        () => {\n          document.getElementById(\"config-icon\").click();\n        }\n      );\n      modal.show();\n    }\n  }\n\n  toggleLogging() {\n    //Toggle logging status.\n    this.isLogging = !this.isLogging;\n    //Update button display.\n    if (!this.isLogging) {\n      this.startLoggingBtn.textContent = \"Start Logging\";\n    } else {\n      this.startLoggingBtn.textContent = \"Stop Logging\";\n    }\n  }\n\n  updateLogging() {\n    //If ROS is connected\n    if (this.ros.isConnected) {\n      //Check current logging status in ros.\n      const request = new ROSLIB.ServiceRequest();\n      this.getLoggingClient.callService(request, (result) => {\n        if (result.success != this.isLogging) {\n          //Toggle logging to match status in ros.\n          this.toggleLogging();\n        }\n        //If all log ids have been selected.\n        if (\n          this.testEventLog.select.value &&\n          this.shiftLog.select.value &&\n          this.legLog.select.value\n        ) {\n          //Enable the logging button if all logs are open or if the logging status is active and all the logs are closed.\n          let forceActivate = false;\n          if (this.isLogging) {\n            //Find if all test events are closed.\n            const testEventsClosed =\n              !this.testEventLog.open &&\n              this.testEventLog.dataList.reduce(\n                (closed, curr) => closed && !!curr.endTime,\n                true\n              );\n            if (testEventsClosed) {\n              forceActivate = true;\n            } else if (this.testEventLog.open) {\n              //This test event is open. Find if all shifts are closed.\n              const shiftsClosed =\n                !this.shiftLog.open &&\n                this.shiftLog.dataList.reduce(\n                  (closed, curr) => closed && !!curr.endTime,\n                  true\n                );\n              if (shiftsClosed) {\n                forceActivate = true;\n              } else if (this.shiftLog.open) {\n                //This shift is open. Find if all legs are closed.\n                const legsClosed =\n                  !this.legLog.open &&\n                  this.legLog.dataList.reduce(\n                    (closed, curr) => closed && !!curr.endTime,\n                    true\n                  );\n                if (legsClosed) {\n                  forceActivate = true;\n                }\n              }\n            }\n          }\n          if (\n            (this.testEventLog.open &&\n              this.shiftLog.open &&\n              this.legLog.open) ||\n            forceActivate\n          ) {\n            this.startLoggingBtn.disabled = false;\n          } else {\n            this.startLoggingBtn.disabled = true;\n          }\n          //Enable the auto refresh box if all logs are open.\n          if (\n            this.testEventLog.open &&\n            this.shiftLog.open &&\n            this.legLog.open\n          ) {\n            this.autoRefreshBox.disabled = false;\n          } else {\n            if (this.autoRefreshBox.checked) {\n              this.autoRefreshBox.click();\n            }\n            this.autoRefreshBox.disabled = true;\n          }\n          //Activate the auto refresh box if logging, deactivate it if not.\n          if (this.isLogging) {\n            if (!this.autoRefreshBox.checked) {\n              this.autoRefreshBox.click();\n            }\n          } else {\n            if (this.autoRefreshBox.checked) {\n              this.autoRefreshBox.click();\n            }\n          }\n        }\n      });\n    } else {\n      this.startLoggingBtn.disabled = true;\n      if (this.autoRefreshBox.checked) {\n        this.autoRefreshBox.click();\n      }\n      this.autoRefreshBox.disabled = true;\n    }\n  }\n\n  loggingBtnClickHandler() {\n    //Call ros service to start/stop logging.\n    const request = new ROSLIB.ServiceRequest({\n      data: !this.isLogging,\n    });\n    this.setLoggingClient.callService(request, (result) => {\n      if (result.success) {\n        //Update the table.\n        this.doneCallback();\n        //Update the logging status\n        this.updateLogging();\n      } else {\n        alert(result.message);\n      }\n    });\n  }\n\n  checkSelectedLogs() {\n    //Hide the segment details and map.\n    document.getElementById(\"segment-detail\").style.display = \"none\";\n    document.getElementById(\"map-viewer\").style.display = \"none\";\n    //Update status dot for all logs\n    const logs = [this.testEventLog, this.shiftLog, this.legLog];\n    for (const log of logs) {\n      if (log.select.value) {\n        if (log.open) {\n          log.statusDot.classList.remove(\"status-red\");\n          log.statusDot.classList.add(\"status-green\");\n        } else {\n          log.statusDot.classList.remove(\"status-green\");\n          log.statusDot.classList.add(\"status-red\");\n        }\n      } else {\n        log.statusDot.classList.remove(\"status-red\");\n        log.statusDot.classList.remove(\"status-green\");\n      }\n    }\n    //Update end/open option for test event\n    if (this.testEventLog.open) {\n      this.testEventLog.endBtn.style.display = \"grid\";\n      this.testEventLog.openBtn.style.display = \"none\";\n    } else {\n      this.testEventLog.endBtn.style.display = \"none\";\n      this.testEventLog.openBtn.style.display = \"grid\";\n    }\n    //Guarantee the segment auto-refresh isn't active.\n    if (this.autoRefreshBox.checked) {\n      this.autoRefreshBox.click();\n    }\n    //Trigger callback if all log ids have been selected.\n    if (\n      this.testEventLog.select.value &&\n      this.shiftLog.select.value &&\n      this.legLog.select.value\n    ) {\n      this.doneCallback();\n      //Update the logging status.\n      this.updateLogging();\n    } else {\n      this.startLoggingBtn.disabled = true;\n      this.autoRefreshBox.disabled = true;\n    }\n    //Guarantee the gps map is disabled.\n    const gpsBox = document.getElementById(\"gps-map-box\");\n    if (gpsBox.checked) {\n      gpsBox.click();\n    }\n    //Guarantee the local map is disabled.\n    const localBox = document.getElementById(\"local-map-box\");\n    if (localBox.checked) {\n      localBox.click();\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/frames/LogSelection.js\n");

/***/ }),

/***/ "./src/frames/MainFrame.js":
/*!*********************************!*\
  !*** ./src/frames/MainFrame.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MainFrame: () => (/* binding */ MainFrame)\n/* harmony export */ });\n/* harmony import */ var _SegmentDetail_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SegmentDetail.js */ \"./src/frames/SegmentDetail.js\");\n/* harmony import */ var _LogSelection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LogSelection.js */ \"./src/frames/LogSelection.js\");\n/* harmony import */ var _database_interface_Personnel_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../database_interface/Personnel.js */ \"./src/database_interface/Personnel.js\");\n/* harmony import */ var _overlays_UserSelect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../overlays/UserSelect.js */ \"./src/overlays/UserSelect.js\");\n/* harmony import */ var _database_interface_TestEvent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../database_interface/TestEvent.js */ \"./src/database_interface/TestEvent.js\");\n/* harmony import */ var _overlays_ReportDownload_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../overlays/ReportDownload.js */ \"./src/overlays/ReportDownload.js\");\n/* harmony import */ var _overlays_ShiftCompare_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../overlays/ShiftCompare.js */ \"./src/overlays/ShiftCompare.js\");\n/* harmony import */ var _utility_Modal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utility/Modal.js */ \"./src/utility/Modal.js\");\n/* harmony import */ var _overlays_RosConfig_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../overlays/RosConfig.js */ \"./src/overlays/RosConfig.js\");\n/* eslint-disable no-undef */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n\n\n\n\n\n\n\n\nclass MainFrame {\n  constructor(serverInterface) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    //Reach to DOM elements.\n    this.userIcon = document.getElementById(\"user-icon\");\n    this.userName = document.getElementById(\"user-name\");\n    this.downloadIcon = document.getElementById(\"download-icon\");\n    this.rosConnectIcon = document.getElementById(\"ros-status-light\");\n    this.selectForCompreBox = document.getElementById(\"select-for-compare\");\n    this.compareBtn = document.getElementById(\"compare-btn\");\n    //Initialize variables.\n    this.currentUser = new _database_interface_Personnel_js__WEBPACK_IMPORTED_MODULE_2__.Personnel();\n    this.personnelInterface = new _database_interface_Personnel_js__WEBPACK_IMPORTED_MODULE_2__.PersonnelInterface(this.serverInterface);\n    this.testEventInterface = new _database_interface_TestEvent_js__WEBPACK_IMPORTED_MODULE_4__.TestEventInterface(this.serverInterface);\n    this.openLogsSelected = false;\n    this.ros = new ROSLIB.Ros();\n    this.rosConnectIntervalId = null;\n    this.forceRosConnect = false;\n    this.ros_server_adr = `ws://${location.hostname}:9090`;\n    this.compareIds = [];\n    //Check stored configuration.\n    let rosData = JSON.parse(localStorage.getItem(\"fttRosData\"));\n    if (rosData) {\n      //Update variable.\n      this.ros_server_adr = rosData.url;\n    }\n    //Contruct page sections.\n    this.segmentDetail = new _SegmentDetail_js__WEBPACK_IMPORTED_MODULE_0__.SegmentDetail(serverInterface, this.currentUser);\n    this.logSelection = new _LogSelection_js__WEBPACK_IMPORTED_MODULE_1__.LogSelection(\n      serverInterface,\n      this.ros,\n      this.currentUser,\n      this.logSelectionDoneCallback.bind(this)\n    );\n    //Add event listeners.\n    this.userIcon.addEventListener(\n      \"click\",\n      this.userIconClickHandler.bind(this)\n    );\n    this.downloadIcon.addEventListener(\n      \"click\",\n      this.downloadIconClickHandler.bind(this)\n    );\n    this.rosConnectIcon.addEventListener(\n      \"click\",\n      this.rosConnectIconClickHandler.bind(this)\n    );\n    this.selectForCompreBox.addEventListener(\n      \"change\",\n      this.selectForCompreBoxHandler.bind(this)\n    );\n    this.compareBtn.addEventListener(\"click\", () => {\n      this.compareLogsHandler();\n    });\n    this.ros.on(\"error\", this.rosErrorHandler.bind(this));\n    this.ros.on(\"connection\", this.rosConnectionHandler.bind(this));\n    this.ros.on(\"close\", this.rosCloseHandler.bind(this));\n    //Try to connect to ROS.\n    this.rosConnect();\n  }\n\n  async logSelectionDoneCallback() {\n    //Display segment and map sections.\n    document.getElementById(\"segment-detail\").style.display = \"block\";\n    document.getElementById(\"map-viewer\").style.display = \"block\";\n    //Get new segment data from DB.\n    const segmentList = await this.segmentDetail.segmentInterface.get(\n      this.segmentDetail.legSelectHook.value\n    );\n    //If any segment has GPS poses, activate the GPS map\n    for (const entry of segmentList) {\n      if (entry.lng && entry.lat && !this.segmentDetail.gpsMapBox.checked) {\n        this.segmentDetail.gpsMapBox.checked = true;\n        this.segmentDetail.mapInterface.mapElement.style.display = \"block\";\n        this.segmentDetail.mapInterface.leafletMap.invalidateSize(true);\n        break;\n      }\n    }\n    //If any segment has local poses, activate the local map\n    for (const entry of segmentList) {\n      if (\n        entry.local_x &&\n        entry.local_y &&\n        !this.segmentDetail.localMapBox.checked\n      ) {\n        this.segmentDetail.localMapBox.checked = true;\n        this.segmentDetail.localMapInterface.mapElement.style.display = \"block\";\n        break;\n      }\n    }\n    //Update segments table.\n    this.segmentDetail.updateSegments(segmentList);\n    //Check if this shift id is selected for compare and update slider accodingly.\n    const shiftSelectValue = document.getElementById(\"shift-id\").value;\n    if (this.compareIds.includes(shiftSelectValue)) {\n      this.selectForCompreBox.checked = true;\n    } else {\n      this.selectForCompreBox.checked = false;\n    }\n  }\n\n  async userIconClickHandler() {\n    try {\n      //Get the latest personnel data from the server.\n      const personnelList = await this.personnelInterface.get();\n      //Build a user selection overlay.\n      const userSelect = new _overlays_UserSelect_js__WEBPACK_IMPORTED_MODULE_3__.UserSelect(this.currentUser, personnelList);\n      //Display the overlay.\n      const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_7__.Modal(\n        userSelect,\n        \"Your browser doesn't support this feature! - Please change to a more modern one.\",\n        () => {\n          this.userName.textContent = this.currentUser.name || \"Select User\";\n        }\n      );\n      userModal.show();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async downloadIconClickHandler() {\n    try {\n      //Get the latest test event data from the server.\n      const testEventList = await this.testEventInterface.get();\n      //Build a report generator overlay.\n      const reportDownload = new _overlays_ReportDownload_js__WEBPACK_IMPORTED_MODULE_5__.ReportDownload(\n        this.serverInterface,\n        testEventList\n      );\n      //Display the overlay.\n      const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_7__.Modal(\n        reportDownload,\n        \"Your browser doesn't support this feature! - Please change to a more modern one.\"\n      );\n      userModal.show();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  rosConnectIconClickHandler() {\n    //Build a map configuration overlay.\n    const rosConfig = new _overlays_RosConfig_js__WEBPACK_IMPORTED_MODULE_8__.RosConfig();\n    //Display the overlay.\n    const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_7__.Modal(\n      rosConfig,\n      \"Your browser doesn't support this feature! - Please change to a more modern one.\",\n      () => {\n        this.forceRosConnect = true;\n        this.rosConnect();\n      }\n    );\n    userModal.show();\n  }\n\n  selectForCompreBoxHandler() {\n    //Store or delete this shift id for compare\n    const shiftSelectValue = document.getElementById(\"shift-id\").value;\n    if (this.selectForCompreBox.checked) {\n      this.compareIds.push(shiftSelectValue);\n    } else {\n      this.compareIds = this.compareIds.filter(\n        (value) => value != shiftSelectValue\n      );\n    }\n    this.compareBtn.disabled = this.compareIds.length < 2;\n  }\n\n  compareLogsHandler() {\n    try {\n      //Build a shift compare overlay.\n      const shiftCompare = new _overlays_ShiftCompare_js__WEBPACK_IMPORTED_MODULE_6__.ShiftCompare(\n        this.serverInterface,\n        this.compareIds\n      );\n      //Display the overlay.\n      const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_7__.Modal(\n        shiftCompare,\n        \"Your browser doesn't support this feature! - Please change to a more modern one.\",\n        () => {},\n        true\n      );\n      userModal.show();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  rosConnect() {\n    this.ros.connect(this.ros_server_adr);\n  }\n\n  rosErrorHandler() {\n    this.logSelection.updateLogging();\n    const errorMsg =\n      \"Error connecting to ROS. Make sure rosbridge_server is running.\";\n    console.log(errorMsg);\n    if (this.forceRosConnect) {\n      alert(errorMsg);\n      this.forceRosConnect = false;\n    }\n  }\n\n  rosConnectionHandler() {\n    this.logSelection.updateLogging();\n    this.rosConnectIcon.classList.remove(\"disconnected\");\n    this.rosConnectIcon.classList.add(\"connected\");\n    this.rosConnectIcon.textContent = \"sensors\";\n    console.log(\"Connection to ROS established.\");\n    // if(this.rosConnectIntervalId) {\n    //   clearInterval(this.rosConnectIntervalId);\n    //   this.rosConnectIntervalId = null;\n    // }\n  }\n\n  rosCloseHandler() {\n    this.logSelection.updateLogging();\n    this.rosConnectIcon.classList.remove(\"connected\");\n    this.rosConnectIcon.classList.add(\"disconnected\");\n    this.rosConnectIcon.textContent = \"sensors_off\";\n    console.log(\"Connection to ROS closed.\");\n    // if(!this.rosConnectIntervalId) {\n    //   this.rosConnectIntervalId = setInterval(\n    //     this.rosConnect.bind(this),\n    //     2000\n    //   );\n    // }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/frames/MainFrame.js\n");

/***/ }),

/***/ "./src/frames/SegmentDetail.js":
/*!*************************************!*\
  !*** ./src/frames/SegmentDetail.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SegmentDetail: () => (/* binding */ SegmentDetail)\n/* harmony export */ });\n/* harmony import */ var _utility_LeafletMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/LeafletMap.js */ \"./src/utility/LeafletMap.js\");\n/* harmony import */ var _utility_LocalMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utility/LocalMap.js */ \"./src/utility/LocalMap.js\");\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* harmony import */ var _utility_Modal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utility/Modal.js */ \"./src/utility/Modal.js\");\n/* harmony import */ var _database_interface_Segment_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../database_interface/Segment.js */ \"./src/database_interface/Segment.js\");\n/* harmony import */ var _database_interface_ItoReason_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../database_interface/ItoReason.js */ \"./src/database_interface/ItoReason.js\");\n/* harmony import */ var _database_interface_Note_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../database_interface/Note.js */ \"./src/database_interface/Note.js\");\n/* harmony import */ var _database_interface_Image_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../database_interface/Image.js */ \"./src/database_interface/Image.js\");\n/* harmony import */ var _overlays_SegmentEdit_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../overlays/SegmentEdit.js */ \"./src/overlays/SegmentEdit.js\");\n/* harmony import */ var _overlays_MapConfig_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../overlays/MapConfig.js */ \"./src/overlays/MapConfig.js\");\n/* harmony import */ var _overlays_AutoRefreshConfig_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../overlays/AutoRefreshConfig.js */ \"./src/overlays/AutoRefreshConfig.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Global variables for fixed and common database parameter values.\nconst SEGMENT_TYPE_ITO = 1;\nconst ITO_REASON_UNEXPECTED = 12;\nconst ITO_REASON_PLANNER = 3;\nconst ITO_REASON_SAFETY = 1;\nconst ITO_REASON_TRANSIT = 9;\n// const ITO_REASON_UNASSIGNED = 11;\n\nclass SegmentDetail {\n  //Container class for the segment info and map display sections of the web page.\n  constructor(serverInterface, currentUser) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.currentUser = currentUser;\n    //Reach to DOM elements.\n    this.legSelectHook = document.getElementById(\"leg-id\");\n    this.unexpectedBtn = document.getElementById(\"unexpected-btn\");\n    this.plannerBtn = document.getElementById(\"planner-btn\");\n    this.safetyBtn = document.getElementById(\"safety-btn\");\n    this.transitBtn = document.getElementById(\"transit-btn\");\n    this.showItoOnlyBox = document.getElementById(\"show-ito-only\");\n    this.autoRefreshBox = document.getElementById(\"auto-refresh\");\n    this.autoRefreshCfg = document.getElementById(\"auto-refresh-config-icon\");\n    this.segmentTable = document.getElementById(\"segment-table-body\");\n    this.segmentNewBtn = document.getElementById(\"new-segment-btn\");\n    this.segmentEndBtn = document.getElementById(\"end-segment-btn\");\n    this.segmentEditBtn = document.getElementById(\"edit-segment-btn\");\n    this.refreshBtn = document.getElementById(\"refresh-btn\");\n    this.gpsMapConfig = document.getElementById(\"gps-map-config-icon\");\n    this.gpsMapBox = document.getElementById(\"gps-map-box\");\n    this.localMapBox = document.getElementById(\"local-map-box\");\n    //Initialize variables.\n    this.mapInterface = new _utility_LeafletMap_js__WEBPACK_IMPORTED_MODULE_0__.LeafletMap(serverInterface, \"gps-map\", \"map-viewer\");\n    this.localMapInterface = new _utility_LocalMap_js__WEBPACK_IMPORTED_MODULE_1__.LocalMap(serverInterface);\n    this.segmentInterface = new _database_interface_Segment_js__WEBPACK_IMPORTED_MODULE_4__.SegmentInterface(serverInterface);\n    this.itoReasonInterface = new _database_interface_ItoReason_js__WEBPACK_IMPORTED_MODULE_5__.ItoReasonInterface(serverInterface);\n    this.noteInterface = new _database_interface_Note_js__WEBPACK_IMPORTED_MODULE_6__.NoteInterface(serverInterface);\n    this.imageInterface = new _database_interface_Image_js__WEBPACK_IMPORTED_MODULE_7__.ImageInterface(serverInterface);\n    this.segmentList = [];\n    this.itoReasonList = null;\n    this.autoRefreshIntervalId = null;\n    this.selectedRow = null;\n    this.selectedRowId = null;\n    this.selectedRowParentId = null;\n    this.showAutoSegments = true;\n    this.autoRefreshTimer = 2000;\n    //Check stored configuration.\n    let autoRefreshData = JSON.parse(\n      localStorage.getItem(\"fttAutoRefreshData\")\n    );\n    if (autoRefreshData) {\n      //Update variable.\n      this.autoRefreshTimer = autoRefreshData.timer;\n    } else {\n      //Store default.\n      autoRefreshData = { timer: this.autoRefreshTimer };\n      localStorage.setItem(\n        \"fttAutoRefreshData\",\n        JSON.stringify(autoRefreshData)\n      );\n    }\n    //Add event listeners.\n    this.segmentTable.addEventListener(\n      \"click\",\n      this.segmentTableClickHandler.bind(this)\n    );\n    this.segmentTable.addEventListener(\"dblclick\", (event) => {\n      if (event.target.closest(\"tr\") != this.selectedRow) {\n        this.segmentTableClickHandler(event);\n      }\n      this.editSegmentHandler();\n    });\n    this.unexpectedBtn.addEventListener(\n      \"click\",\n      this.quickReasonEditBtnHandler.bind(this, ITO_REASON_UNEXPECTED)\n    );\n    this.plannerBtn.addEventListener(\n      \"click\",\n      this.quickReasonEditBtnHandler.bind(this, ITO_REASON_PLANNER)\n    );\n    this.safetyBtn.addEventListener(\n      \"click\",\n      this.quickReasonEditBtnHandler.bind(this, ITO_REASON_SAFETY)\n    );\n    this.transitBtn.addEventListener(\n      \"click\",\n      this.quickReasonEditBtnHandler.bind(this, ITO_REASON_TRANSIT)\n    );\n    this.segmentNewBtn.addEventListener(\n      \"click\",\n      this.newSegmentHandler.bind(this)\n    );\n    this.segmentEndBtn.addEventListener(\n      \"click\",\n      this.endSegmentHandler.bind(this)\n    );\n    this.segmentEditBtn.addEventListener(\n      \"click\",\n      this.editSegmentHandler.bind(this)\n    );\n    this.refreshBtn.addEventListener(\"click\", () => {\n      this.updateSegments();\n    });\n    this.showItoOnlyBox.addEventListener(\n      \"change\",\n      this.showItoOnlyBoxHandler.bind(this)\n    );\n    this.autoRefreshBox.addEventListener(\n      \"change\",\n      this.autoRefreshBoxHandler.bind(this)\n    );\n    this.autoRefreshCfg.addEventListener(\n      \"click\",\n      this.autoRefreshConfigHandler.bind(this)\n    );\n    this.gpsMapConfig.addEventListener(\n      \"click\",\n      this.gpsMapConfigHandler.bind(this)\n    );\n    this.gpsMapBox.addEventListener(\n      \"click\",\n      this.toggleGpsMapHandler.bind(this)\n    );\n    this.localMapBox.addEventListener(\n      \"click\",\n      this.toggleLocalMapHandler.bind(this)\n    );\n  }\n\n  async updateSegments(newSegmentList = null) {\n    //Update segment data table and map display.\n    try {\n      if (newSegmentList) {\n        //Update segmentList with new values.\n        this.segmentList = newSegmentList;\n      } else {\n        //Get segment data from DB.\n        this.segmentList = await this.segmentInterface.get(\n          this.legSelectHook.value\n        );\n      }\n      //Remove old data from table.\n      const tableRows = Array.from(this.segmentTable.querySelectorAll(\"tr\"));\n      for (const row of tableRows.reverse()) {\n        const match = this.segmentList.find(\n          (entry) => entry.id == row.firstChild.textContent\n        );\n        if (!match) {\n          //If the row was selected, delete selection data.\n          if (this.selectedRowId == row.firstChild.textContent) {\n            this.selectedRow = null;\n            this.selectedRowId = null;\n            this.selectedRowParentId = null;\n            this.mapInterface.removeActiveMarker();\n            this.mapInterface.removeActivePoses();\n            this.localMapInterface.removeActiveMarker();\n            this.localMapInterface.removeActivePoses();\n          }\n          //Delete row.\n          row.remove();\n        }\n      }\n      const mapLayers = this.mapInterface.mapPointsLayers;\n      const localMapLayers = this.localMapInterface.mapPointsLayers;\n      //If GPS map is active:\n      if (this.gpsMapBox.checked) {\n        //Remove old data from map.\n        for (let idx = mapLayers.length - 1; idx >= 0; idx--) {\n          const match = this.segmentList.find(\n            (entry) => entry.id == mapLayers[idx].segmentId\n          );\n          if (!match) {\n            this.mapInterface.leafletMap.removeLayer(\n              mapLayers[idx].mapPosesPtr\n            );\n            mapLayers.splice(idx, 1);\n          }\n        }\n        //Reset display if map is empty.\n        if (mapLayers.length == 0) {\n          const firstLocEntry = this.segmentList.find(\n            (entry) => entry.lat && entry.lng\n          );\n          if (firstLocEntry) {\n            console.log(\n              \"Setting map display in \" +\n                firstLocEntry.lat +\n                \", \" +\n                firstLocEntry.lng\n            );\n            this.mapInterface.leafletMap.setView(\n              [firstLocEntry.lat, firstLocEntry.lng],\n              17\n            );\n            this.mapInterface.removeLocalMap();\n          }\n        }\n      }\n      //If local map is active:\n      if (this.localMapBox.checked) {\n        //Remove old data from map.\n        for (let idx = localMapLayers.length - 1; idx >= 0; idx--) {\n          const match = this.segmentList.find(\n            (entry) => entry.id == localMapLayers[idx].segmentId\n          );\n          if (!match) {\n            this.localMapInterface.removePoses(localMapLayers[idx].segmentId);\n          }\n        }\n        //Reset display if map is empty.\n        if (localMapLayers.length == 0) {\n          this.localMapInterface.resetViewer();\n        }\n        // Update local map:\n        const shiftSelectValue = document.getElementById(\"shift-id\").value;\n        if (shiftSelectValue) {\n          const mapImage = await this.localMapInterface.getAndDrawMap(\n            shiftSelectValue\n          );\n          //Also draw the local map over the GPS map (if active and gps poses available).\n          if (this.gpsMapBox.checked && mapImage) {\n            //Filter master segments that have both local and gps position.\n            let fSegs = this.segmentList.filter(\n              (entry) =>\n                entry.lat &&\n                entry.lng &&\n                entry.local_x &&\n                entry.local_y &&\n                entry.parentId === null\n            );\n            if (fSegs.length >= 2) {\n              fSegs.reverse();\n              await this.mapInterface.addLocalMap(mapImage, fSegs);\n            }\n          }\n        } else {\n          alert(\"No shift selected!\");\n        }\n      }\n      //Record if maps were empty.\n      const local_reset = localMapLayers.length === 0;\n      const gps_reset = mapLayers.length === 0;\n      //Record if segmentTable was empty.\n      const table_reset = this.segmentTable.children.length === 0;\n      //Add or edit data from table and map:\n      for (const entry of this.segmentList.reverse()) {\n        //Find if the entry was in the table before the update.\n        //For ito master segments, find if the child is in the table.\n        let targetId = entry.id;\n        if (entry.segmentType == \"ITO\" && !entry.parentId) {\n          const matchedChild = this.segmentList.find(\n            (segment) => segment.parentId === entry.id\n          );\n          if (matchedChild) {\n            targetId = matchedChild.id;\n          }\n        }\n        const matchedRow = tableRows.find(\n          (row) => row.firstChild.textContent == targetId\n        );\n        //Update table rows (only auto and ito-children):\n        if (\n          entry.segmentType == \"AUTO\" ||\n          (entry.segmentType == \"ITO\" && entry.parentId)\n        ) {\n          const entryState = entry.endTime == null ? \"OPEN\" : \"CLOSED\";\n          const entryReason = entry.itoReason || \"\";\n          if (matchedRow) {\n            //Update row info with new data.\n            if (matchedRow.children[2].textContent != entryReason) {\n              console.log(\"Updating row \" + entry.id + \" reason\");\n              matchedRow.children[2].textContent = entryReason;\n            }\n            if (matchedRow.children[3].textContent != entryState) {\n              console.log(\"Updating row \" + entry.id + \" state\");\n              matchedRow.children[3].textContent = entryState;\n            }\n          } else {\n            //Create new table row.\n            console.log(\"Creating row \" + entry.id);\n            _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_2__.DOMGeneric.addRow(this.segmentTable, [\n              entry.id,\n              entry.segmentType,\n              entryReason,\n              entryState,\n            ]);\n            //Set visibility if the row is AUTO\n            if (entry.segmentType === \"AUTO\") {\n              if (!this.showAutoSegments) {\n                this.segmentTable.firstChild.style.display = \"none\";\n              }\n            }\n            //Activate maps if this is the first row:\n            if (table_reset) {\n              //If the segment has GPS poses, activate the GPS map\n              if (entry.lng && entry.lat && !this.gpsMapBox.checked) {\n                this.gpsMapBox.checked = true;\n                this.mapInterface.mapElement.style.display = \"block\";\n                this.mapInterface.leafletMap.invalidateSize(true);\n              }\n              //If any segment has local poses, activate the local map\n              if (entry.local_x && entry.local_y && !this.localMapBox.checked) {\n                this.localMapBox.checked = true;\n                this.localMapInterface.mapElement.style.display = \"block\";\n              }\n            }\n          }\n        }\n        //If GPS map is active:\n        if (this.gpsMapBox.checked) {\n          //Update map poses:\n          if (!entry.parentId) {\n            const matchedMapLayer = mapLayers.find(\n              (layer) => layer.segmentId == entry.id\n            );\n            //If the map was reset, the segment is new in the table or if it's open:\n            if (\n              gps_reset ||\n              (!matchedMapLayer && !matchedRow) ||\n              entry.endTime == null\n            ) {\n              //Create new or update points layer.\n              await this.mapInterface.getAndDrawMapPoses(entry.id);\n              if (\n                (entry.segmentType == \"AUTO\" &&\n                  entry.id == this.selectedRowId) ||\n                (entry.segmentType == \"ITO\" &&\n                  entry.id == this.selectedRowParentId)\n              ) {\n                this.mapInterface.addActivePoses(entry.id);\n              }\n            }\n          }\n        }\n        //If local map is active:\n        if (this.localMapBox.checked) {\n          //Update map poses:\n          if (!entry.parentId) {\n            const matchedMapLayer = localMapLayers.find(\n              (layer) => layer.segmentId == entry.id\n            );\n            //If the map was reset, the segment is new in the table or if it's open:\n            if (\n              local_reset ||\n              (!matchedMapLayer && !matchedRow) ||\n              entry.endTime == null\n            ) {\n              //Create new or update points layer.\n              await this.localMapInterface.getAndDrawMapPoses(entry.id);\n              if (\n                (entry.segmentType == \"AUTO\" &&\n                  entry.id == this.selectedRowId) ||\n                (entry.segmentType == \"ITO\" &&\n                  entry.id == this.selectedRowParentId)\n              ) {\n                this.localMapInterface.addActivePoses(entry.id);\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  showItoOnlyBoxHandler() {\n    //Hide auto segments if the box is checked.\n    if (this.showItoOnlyBox.checked) {\n      this.showAutoSegments = false;\n    } else {\n      this.showAutoSegments = true;\n    }\n    const tableRows = Array.from(this.segmentTable.querySelectorAll(\"tr\"));\n    for (const row of tableRows) {\n      if (row.children[1].textContent === \"AUTO\") {\n        if (this.showAutoSegments) {\n          row.style.removeProperty(\"display\");\n        } else {\n          row.style.display = \"none\";\n        }\n      }\n    }\n  }\n\n  autoRefreshBoxHandler() {\n    //Call updateSegments in regular intervals if the box is checked.\n    if (this.autoRefreshBox.checked) {\n      if (this.legSelectHook.value) {\n        this.autoRefreshIntervalId = setInterval(() => {\n          this.updateSegments();\n        }, this.autoRefreshTimer);\n      } else {\n        this.autoRefreshBox.checked = false;\n        alert(\"No leg selected!\");\n      }\n    } else {\n      clearInterval(this.autoRefreshIntervalId);\n    }\n  }\n\n  autoRefreshConfigHandler() {\n    //Build a map configuration overlay.\n    const autoRefreshConfig = new _overlays_AutoRefreshConfig_js__WEBPACK_IMPORTED_MODULE_10__.AutoRefreshConfig();\n    //Display the overlay.\n    const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_3__.Modal(\n      autoRefreshConfig,\n      \"Your browser doesn't support this feature! - Please change to a more modern one.\",\n      () => {\n        const autoRefreshData = JSON.parse(\n          localStorage.getItem(\"fttAutoRefreshData\")\n        );\n        if (autoRefreshData) {\n          this.autoRefreshTimer = autoRefreshData.timer;\n          clearInterval(this.autoRefreshIntervalId);\n          this.autoRefreshBoxHandler();\n        } else {\n          alert(\"No autoRefresh configuration data in local storage.\");\n        }\n      }\n    );\n    userModal.show();\n  }\n\n  segmentTableClickHandler(event) {\n    //Find the closest row to the click event.\n    const closestRow = event.target.closest(\"tr\");\n    if (this.selectedRow) {\n      //Remove any previous selection data\n      this.selectedRow.classList.remove(\"active-row\");\n      this.mapInterface.removeActiveMarker();\n      this.mapInterface.removeActivePoses();\n      this.localMapInterface.removeActiveMarker();\n      this.localMapInterface.removeActivePoses();\n      if (this.selectedRow == closestRow) {\n        //Reset selection variables for a selected row being deselected.\n        this.selectedRow = null;\n        this.selectedRowId = null;\n        this.selectedRowParentId = null;\n        return;\n      }\n    }\n    //Add selection data to reference the clicked row.\n    this.selectedRow = closestRow;\n    this.selectedRowId = closestRow.firstChild.textContent;\n    this.selectedRow.classList.add(\"active-row\");\n    //Find associated segment from the list.\n    const selectedEntry = this.segmentList.find(\n      (entry) => entry.id == this.selectedRowId\n    );\n    //Mark start location of the selected segment/parent segment.\n    this.selectedRowParentId = selectedEntry.parentId;\n    if (selectedEntry.lat && selectedEntry.lng) {\n      this.mapInterface.addActiveMarker(selectedEntry.lat, selectedEntry.lng);\n    } else if (this.selectedRowParentId) {\n      const selectedEntryParent = this.segmentList.find(\n        (entry) => entry.id == this.selectedRowParentId\n      );\n      if (selectedEntryParent.lat && selectedEntryParent.lng) {\n        this.mapInterface.addActiveMarker(\n          selectedEntryParent.lat,\n          selectedEntryParent.lng\n        );\n      }\n    }\n    //Mark local start location of the selected segment/parent segment.\n    if (selectedEntry.local_x && selectedEntry.local_y) {\n      this.localMapInterface.addActiveMarker(\n        selectedEntry.local_x,\n        selectedEntry.local_y\n      );\n    } else if (this.selectedRowParentId) {\n      const selectedEntryParent = this.segmentList.find(\n        (entry) => entry.id == this.selectedRowParentId\n      );\n      if (selectedEntryParent.local_x && selectedEntryParent.local_y) {\n        this.localMapInterface.addActiveMarker(\n          selectedEntryParent.local_x,\n          selectedEntryParent.local_y\n        );\n      }\n    }\n    //Highlight map poses of the selected parent segment.\n    this.mapInterface.addActivePoses(\n      this.selectedRowParentId || this.selectedRowId\n    );\n    //Highlight local map poses of the selected parent segment.\n    this.localMapInterface.addActivePoses(\n      this.selectedRowParentId || this.selectedRowId\n    );\n  }\n\n  async quickReasonEditBtnHandler(itoReasonId) {\n    //Check that a segment is selected.\n    if (!this.selectedRowId) {\n      alert(\"No segment selected for edition!\");\n      return;\n    }\n    const selectedEntry = this.segmentList.find(\n      (entry) => entry.id == this.selectedRowId\n    );\n    if (selectedEntry.segmentType == \"AUTO\") {\n      alert(\"Cannot assign ITO reason to AUTO segment!\");\n      return;\n    }\n    try {\n      //Send put request to edit the ito reason.\n      await this.segmentInterface.put(this.selectedRowId, \"edit\", itoReasonId);\n      //Update table.\n      this.updateSegments();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async newSegmentHandler() {\n    //Fetch ito reason data from server if needed.\n    try {\n      if (!this.itoReasonList || this.itoReasonList.length == 0) {\n        this.itoReasonList = await this.itoReasonInterface.get();\n        //If there are no ito reasons, alert the user.\n        if (this.itoReasonList.length == 0) {\n          alert(\n            \"ITO reasons list empty. Your database was not properly initialized. Please fix this before continuing.\"\n          );\n          return;\n        }\n      }\n    } catch (error) {\n      alert(error.message);\n      return;\n    }\n    //Select the unassigned ito reason.\n    const matchedItoReason = this.itoReasonList.find(\n      (entry) => entry.shortDescription == \"Unassigned\"\n    );\n    //Check there is a match and keep the id of the unassigned ito reason.\n    let unassignedItoReasonId;\n    if (matchedItoReason) {\n      unassignedItoReasonId = matchedItoReason.id;\n    } else {\n      alert(\n        \"Unable to find the 'Unassigned' ITO reason. Your database was not properly initialized. Please fix this before continuing.\"\n      );\n      return;\n    }\n    try {\n      //Send post request to create a new ITO segment with unassigned reason.\n      await this.segmentInterface.post(\n        this.legSelectHook.value,\n        unassignedItoReasonId,\n        SEGMENT_TYPE_ITO,\n        null,\n        null,\n        null,\n        null\n      );\n      //Update table.\n      this.updateSegments();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async endSegmentHandler() {\n    //Check that a segment is selected.\n    if (!this.selectedRowId) {\n      alert(\"No segment selected to end!\");\n      return;\n    }\n    try {\n      //Send put request to close the segment.\n      await this.segmentInterface.put(this.selectedRowId, \"close\");\n      //Update table.\n      this.updateSegments();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async editSegmentHandler() {\n    //Check that a segment is selected.\n    if (!this.selectedRowId) {\n      alert(\"Please select a segment to edit.\");\n      return;\n    }\n    try {\n      //Fetch ito reason data from server if needed.\n      if (!this.itoReasonList || this.itoReasonList.length == 0) {\n        this.itoReasonList = await this.itoReasonInterface.get();\n      }\n      //Find the selected segment entry.\n      const selectedSegment = this.segmentList.find(\n        (segment) => segment.id == this.selectedRowId\n      );\n      //Build the segment editing overlay.\n      const segmentEdit = new _overlays_SegmentEdit_js__WEBPACK_IMPORTED_MODULE_8__.SegmentEdit(\n        selectedSegment,\n        this.segmentInterface,\n        this.noteInterface,\n        this.imageInterface,\n        this.itoReasonList,\n        this.currentUser\n      );\n      //Display the overlay.\n      const segmentModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_3__.Modal(\n        segmentEdit,\n        \"Your browser does't support this feature! - Please change to a more modern one.\",\n        () => {\n          this.updateSegments();\n        }\n      );\n      segmentModal.show();\n    } catch (error) {\n      alert(error.messaje);\n    }\n  }\n\n  gpsMapConfigHandler() {\n    //Build a map configuration overlay.\n    const mapConfig = new _overlays_MapConfig_js__WEBPACK_IMPORTED_MODULE_9__.MapConfig();\n    //Display the overlay.\n    const userModal = new _utility_Modal_js__WEBPACK_IMPORTED_MODULE_3__.Modal(\n      mapConfig,\n      \"Your browser doesn't support this feature! - Please change to a more modern one.\",\n      () => {\n        this.mapInterface.changeTileLayer();\n      }\n    );\n    userModal.show();\n  }\n\n  toggleGpsMapHandler(event) {\n    if (event.target.checked) {\n      this.mapInterface.mapElement.style.display = \"block\";\n      this.mapInterface.leafletMap.invalidateSize(true);\n      this.updateSegments();\n    } else {\n      //Hide map container.\n      this.mapInterface.mapElement.style.display = \"none\";\n      //Delete map poses.\n      const mapLayers = this.mapInterface.mapPointsLayers;\n      for (let idx = mapLayers.length - 1; idx >= 0; idx--) {\n        this.mapInterface.leafletMap.removeLayer(mapLayers[idx].mapPosesPtr);\n        mapLayers.splice(idx, 1);\n      }\n      //Remove local map from GPS map.\n      this.mapInterface.removeLocalMap();\n      this.mapInterface.removeLayerControl();\n    }\n  }\n\n  toggleLocalMapHandler(event) {\n    if (event.target.checked) {\n      this.localMapInterface.mapElement.style.display = \"block\";\n      this.updateSegments();\n    } else {\n      //Hide local map container.\n      this.localMapInterface.mapElement.style.display = \"none\";\n      //Delete local map poses.\n      const localMapLayers = this.localMapInterface.mapPointsLayers;\n      for (let idx = localMapLayers.length - 1; idx >= 0; idx--) {\n        this.localMapInterface.removePoses(localMapLayers[idx].segmentId);\n        //Remove local map from GPS map.\n        this.mapInterface.removeLocalMap();\n        this.mapInterface.removeLayerControl();\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZnJhbWVzL1NlZ21lbnREZXRhaWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL2ZyYW1lcy9TZWdtZW50RGV0YWlsLmpzPzk0MDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbmltcG9ydCB7IExlYWZsZXRNYXAgfSBmcm9tIFwiLi4vdXRpbGl0eS9MZWFmbGV0TWFwLmpzXCI7XG5pbXBvcnQgeyBMb2NhbE1hcCB9IGZyb20gXCIuLi91dGlsaXR5L0xvY2FsTWFwLmpzXCI7XG5pbXBvcnQgeyBET01HZW5lcmljIH0gZnJvbSBcIi4uL3V0aWxpdHkvRE9NR2VuZXJpYy5qc1wiO1xuaW1wb3J0IHsgTW9kYWwgfSBmcm9tIFwiLi4vdXRpbGl0eS9Nb2RhbC5qc1wiO1xuaW1wb3J0IHsgU2VnbWVudEludGVyZmFjZSB9IGZyb20gXCIuLi9kYXRhYmFzZV9pbnRlcmZhY2UvU2VnbWVudC5qc1wiO1xuaW1wb3J0IHsgSXRvUmVhc29uSW50ZXJmYWNlIH0gZnJvbSBcIi4uL2RhdGFiYXNlX2ludGVyZmFjZS9JdG9SZWFzb24uanNcIjtcbmltcG9ydCB7IE5vdGVJbnRlcmZhY2UgfSBmcm9tIFwiLi4vZGF0YWJhc2VfaW50ZXJmYWNlL05vdGUuanNcIjtcbmltcG9ydCB7IEltYWdlSW50ZXJmYWNlIH0gZnJvbSBcIi4uL2RhdGFiYXNlX2ludGVyZmFjZS9JbWFnZS5qc1wiO1xuaW1wb3J0IHsgU2VnbWVudEVkaXQgfSBmcm9tIFwiLi4vb3ZlcmxheXMvU2VnbWVudEVkaXQuanNcIjtcbmltcG9ydCB7IE1hcENvbmZpZyB9IGZyb20gXCIuLi9vdmVybGF5cy9NYXBDb25maWcuanNcIjtcbmltcG9ydCB7IEF1dG9SZWZyZXNoQ29uZmlnIH0gZnJvbSBcIi4uL292ZXJsYXlzL0F1dG9SZWZyZXNoQ29uZmlnLmpzXCI7XG5cbi8vR2xvYmFsIHZhcmlhYmxlcyBmb3IgZml4ZWQgYW5kIGNvbW1vbiBkYXRhYmFzZSBwYXJhbWV0ZXIgdmFsdWVzLlxuY29uc3QgU0VHTUVOVF9UWVBFX0lUTyA9IDE7XG5jb25zdCBJVE9fUkVBU09OX1VORVhQRUNURUQgPSAxMjtcbmNvbnN0IElUT19SRUFTT05fUExBTk5FUiA9IDM7XG5jb25zdCBJVE9fUkVBU09OX1NBRkVUWSA9IDE7XG5jb25zdCBJVE9fUkVBU09OX1RSQU5TSVQgPSA5O1xuLy8gY29uc3QgSVRPX1JFQVNPTl9VTkFTU0lHTkVEID0gMTE7XG5cbmV4cG9ydCBjbGFzcyBTZWdtZW50RGV0YWlsIHtcbiAgLy9Db250YWluZXIgY2xhc3MgZm9yIHRoZSBzZWdtZW50IGluZm8gYW5kIG1hcCBkaXNwbGF5IHNlY3Rpb25zIG9mIHRoZSB3ZWIgcGFnZS5cbiAgY29uc3RydWN0b3Ioc2VydmVySW50ZXJmYWNlLCBjdXJyZW50VXNlcikge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMuc2VydmVySW50ZXJmYWNlID0gc2VydmVySW50ZXJmYWNlO1xuICAgIHRoaXMuY3VycmVudFVzZXIgPSBjdXJyZW50VXNlcjtcbiAgICAvL1JlYWNoIHRvIERPTSBlbGVtZW50cy5cbiAgICB0aGlzLmxlZ1NlbGVjdEhvb2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZy1pZFwiKTtcbiAgICB0aGlzLnVuZXhwZWN0ZWRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVuZXhwZWN0ZWQtYnRuXCIpO1xuICAgIHRoaXMucGxhbm5lckJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxhbm5lci1idG5cIik7XG4gICAgdGhpcy5zYWZldHlCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNhZmV0eS1idG5cIik7XG4gICAgdGhpcy50cmFuc2l0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmFuc2l0LWJ0blwiKTtcbiAgICB0aGlzLnNob3dJdG9Pbmx5Qm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaG93LWl0by1vbmx5XCIpO1xuICAgIHRoaXMuYXV0b1JlZnJlc2hCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF1dG8tcmVmcmVzaFwiKTtcbiAgICB0aGlzLmF1dG9SZWZyZXNoQ2ZnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhdXRvLXJlZnJlc2gtY29uZmlnLWljb25cIik7XG4gICAgdGhpcy5zZWdtZW50VGFibGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlZ21lbnQtdGFibGUtYm9keVwiKTtcbiAgICB0aGlzLnNlZ21lbnROZXdCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy1zZWdtZW50LWJ0blwiKTtcbiAgICB0aGlzLnNlZ21lbnRFbmRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVuZC1zZWdtZW50LWJ0blwiKTtcbiAgICB0aGlzLnNlZ21lbnRFZGl0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlZGl0LXNlZ21lbnQtYnRuXCIpO1xuICAgIHRoaXMucmVmcmVzaEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVmcmVzaC1idG5cIik7XG4gICAgdGhpcy5ncHNNYXBDb25maWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdwcy1tYXAtY29uZmlnLWljb25cIik7XG4gICAgdGhpcy5ncHNNYXBCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdwcy1tYXAtYm94XCIpO1xuICAgIHRoaXMubG9jYWxNYXBCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvY2FsLW1hcC1ib3hcIik7XG4gICAgLy9Jbml0aWFsaXplIHZhcmlhYmxlcy5cbiAgICB0aGlzLm1hcEludGVyZmFjZSA9IG5ldyBMZWFmbGV0TWFwKHNlcnZlckludGVyZmFjZSwgXCJncHMtbWFwXCIsIFwibWFwLXZpZXdlclwiKTtcbiAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlID0gbmV3IExvY2FsTWFwKHNlcnZlckludGVyZmFjZSk7XG4gICAgdGhpcy5zZWdtZW50SW50ZXJmYWNlID0gbmV3IFNlZ21lbnRJbnRlcmZhY2Uoc2VydmVySW50ZXJmYWNlKTtcbiAgICB0aGlzLml0b1JlYXNvbkludGVyZmFjZSA9IG5ldyBJdG9SZWFzb25JbnRlcmZhY2Uoc2VydmVySW50ZXJmYWNlKTtcbiAgICB0aGlzLm5vdGVJbnRlcmZhY2UgPSBuZXcgTm90ZUludGVyZmFjZShzZXJ2ZXJJbnRlcmZhY2UpO1xuICAgIHRoaXMuaW1hZ2VJbnRlcmZhY2UgPSBuZXcgSW1hZ2VJbnRlcmZhY2Uoc2VydmVySW50ZXJmYWNlKTtcbiAgICB0aGlzLnNlZ21lbnRMaXN0ID0gW107XG4gICAgdGhpcy5pdG9SZWFzb25MaXN0ID0gbnVsbDtcbiAgICB0aGlzLmF1dG9SZWZyZXNoSW50ZXJ2YWxJZCA9IG51bGw7XG4gICAgdGhpcy5zZWxlY3RlZFJvdyA9IG51bGw7XG4gICAgdGhpcy5zZWxlY3RlZFJvd0lkID0gbnVsbDtcbiAgICB0aGlzLnNlbGVjdGVkUm93UGFyZW50SWQgPSBudWxsO1xuICAgIHRoaXMuc2hvd0F1dG9TZWdtZW50cyA9IHRydWU7XG4gICAgdGhpcy5hdXRvUmVmcmVzaFRpbWVyID0gMjAwMDtcbiAgICAvL0NoZWNrIHN0b3JlZCBjb25maWd1cmF0aW9uLlxuICAgIGxldCBhdXRvUmVmcmVzaERhdGEgPSBKU09OLnBhcnNlKFxuICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJmdHRBdXRvUmVmcmVzaERhdGFcIilcbiAgICApO1xuICAgIGlmIChhdXRvUmVmcmVzaERhdGEpIHtcbiAgICAgIC8vVXBkYXRlIHZhcmlhYmxlLlxuICAgICAgdGhpcy5hdXRvUmVmcmVzaFRpbWVyID0gYXV0b1JlZnJlc2hEYXRhLnRpbWVyO1xuICAgIH0gZWxzZSB7XG4gICAgICAvL1N0b3JlIGRlZmF1bHQuXG4gICAgICBhdXRvUmVmcmVzaERhdGEgPSB7IHRpbWVyOiB0aGlzLmF1dG9SZWZyZXNoVGltZXIgfTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgICBcImZ0dEF1dG9SZWZyZXNoRGF0YVwiLFxuICAgICAgICBKU09OLnN0cmluZ2lmeShhdXRvUmVmcmVzaERhdGEpXG4gICAgICApO1xuICAgIH1cbiAgICAvL0FkZCBldmVudCBsaXN0ZW5lcnMuXG4gICAgdGhpcy5zZWdtZW50VGFibGUuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMuc2VnbWVudFRhYmxlQ2xpY2tIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIHRoaXMuc2VnbWVudFRhYmxlLmFkZEV2ZW50TGlzdGVuZXIoXCJkYmxjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC50YXJnZXQuY2xvc2VzdChcInRyXCIpICE9IHRoaXMuc2VsZWN0ZWRSb3cpIHtcbiAgICAgICAgdGhpcy5zZWdtZW50VGFibGVDbGlja0hhbmRsZXIoZXZlbnQpO1xuICAgICAgfVxuICAgICAgdGhpcy5lZGl0U2VnbWVudEhhbmRsZXIoKTtcbiAgICB9KTtcbiAgICB0aGlzLnVuZXhwZWN0ZWRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMucXVpY2tSZWFzb25FZGl0QnRuSGFuZGxlci5iaW5kKHRoaXMsIElUT19SRUFTT05fVU5FWFBFQ1RFRClcbiAgICApO1xuICAgIHRoaXMucGxhbm5lckJ0bi5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgdGhpcy5xdWlja1JlYXNvbkVkaXRCdG5IYW5kbGVyLmJpbmQodGhpcywgSVRPX1JFQVNPTl9QTEFOTkVSKVxuICAgICk7XG4gICAgdGhpcy5zYWZldHlCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMucXVpY2tSZWFzb25FZGl0QnRuSGFuZGxlci5iaW5kKHRoaXMsIElUT19SRUFTT05fU0FGRVRZKVxuICAgICk7XG4gICAgdGhpcy50cmFuc2l0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICB0aGlzLnF1aWNrUmVhc29uRWRpdEJ0bkhhbmRsZXIuYmluZCh0aGlzLCBJVE9fUkVBU09OX1RSQU5TSVQpXG4gICAgKTtcbiAgICB0aGlzLnNlZ21lbnROZXdCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMubmV3U2VnbWVudEhhbmRsZXIuYmluZCh0aGlzKVxuICAgICk7XG4gICAgdGhpcy5zZWdtZW50RW5kQnRuLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICB0aGlzLmVuZFNlZ21lbnRIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIHRoaXMuc2VnbWVudEVkaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMuZWRpdFNlZ21lbnRIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIHRoaXMucmVmcmVzaEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy51cGRhdGVTZWdtZW50cygpO1xuICAgIH0pO1xuICAgIHRoaXMuc2hvd0l0b09ubHlCb3guYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2hhbmdlXCIsXG4gICAgICB0aGlzLnNob3dJdG9Pbmx5Qm94SGFuZGxlci5iaW5kKHRoaXMpXG4gICAgKTtcbiAgICB0aGlzLmF1dG9SZWZyZXNoQm94LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNoYW5nZVwiLFxuICAgICAgdGhpcy5hdXRvUmVmcmVzaEJveEhhbmRsZXIuYmluZCh0aGlzKVxuICAgICk7XG4gICAgdGhpcy5hdXRvUmVmcmVzaENmZy5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgdGhpcy5hdXRvUmVmcmVzaENvbmZpZ0hhbmRsZXIuYmluZCh0aGlzKVxuICAgICk7XG4gICAgdGhpcy5ncHNNYXBDb25maWcuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMuZ3BzTWFwQ29uZmlnSGFuZGxlci5iaW5kKHRoaXMpXG4gICAgKTtcbiAgICB0aGlzLmdwc01hcEJveC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgdGhpcy50b2dnbGVHcHNNYXBIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIHRoaXMubG9jYWxNYXBCb3guYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIHRoaXMudG9nZ2xlTG9jYWxNYXBIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgdXBkYXRlU2VnbWVudHMobmV3U2VnbWVudExpc3QgPSBudWxsKSB7XG4gICAgLy9VcGRhdGUgc2VnbWVudCBkYXRhIHRhYmxlIGFuZCBtYXAgZGlzcGxheS5cbiAgICB0cnkge1xuICAgICAgaWYgKG5ld1NlZ21lbnRMaXN0KSB7XG4gICAgICAgIC8vVXBkYXRlIHNlZ21lbnRMaXN0IHdpdGggbmV3IHZhbHVlcy5cbiAgICAgICAgdGhpcy5zZWdtZW50TGlzdCA9IG5ld1NlZ21lbnRMaXN0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy9HZXQgc2VnbWVudCBkYXRhIGZyb20gREIuXG4gICAgICAgIHRoaXMuc2VnbWVudExpc3QgPSBhd2FpdCB0aGlzLnNlZ21lbnRJbnRlcmZhY2UuZ2V0KFxuICAgICAgICAgIHRoaXMubGVnU2VsZWN0SG9vay52YWx1ZVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgLy9SZW1vdmUgb2xkIGRhdGEgZnJvbSB0YWJsZS5cbiAgICAgIGNvbnN0IHRhYmxlUm93cyA9IEFycmF5LmZyb20odGhpcy5zZWdtZW50VGFibGUucXVlcnlTZWxlY3RvckFsbChcInRyXCIpKTtcbiAgICAgIGZvciAoY29uc3Qgcm93IG9mIHRhYmxlUm93cy5yZXZlcnNlKCkpIHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnNlZ21lbnRMaXN0LmZpbmQoXG4gICAgICAgICAgKGVudHJ5KSA9PiBlbnRyeS5pZCA9PSByb3cuZmlyc3RDaGlsZC50ZXh0Q29udGVudFxuICAgICAgICApO1xuICAgICAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgICAgLy9JZiB0aGUgcm93IHdhcyBzZWxlY3RlZCwgZGVsZXRlIHNlbGVjdGlvbiBkYXRhLlxuICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkUm93SWQgPT0gcm93LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRSb3cgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFJvd0lkID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dQYXJlbnRJZCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLm1hcEludGVyZmFjZS5yZW1vdmVBY3RpdmVNYXJrZXIoKTtcbiAgICAgICAgICAgIHRoaXMubWFwSW50ZXJmYWNlLnJlbW92ZUFjdGl2ZVBvc2VzKCk7XG4gICAgICAgICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLnJlbW92ZUFjdGl2ZU1hcmtlcigpO1xuICAgICAgICAgICAgdGhpcy5sb2NhbE1hcEludGVyZmFjZS5yZW1vdmVBY3RpdmVQb3NlcygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvL0RlbGV0ZSByb3cuXG4gICAgICAgICAgcm93LnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBtYXBMYXllcnMgPSB0aGlzLm1hcEludGVyZmFjZS5tYXBQb2ludHNMYXllcnM7XG4gICAgICBjb25zdCBsb2NhbE1hcExheWVycyA9IHRoaXMubG9jYWxNYXBJbnRlcmZhY2UubWFwUG9pbnRzTGF5ZXJzO1xuICAgICAgLy9JZiBHUFMgbWFwIGlzIGFjdGl2ZTpcbiAgICAgIGlmICh0aGlzLmdwc01hcEJveC5jaGVja2VkKSB7XG4gICAgICAgIC8vUmVtb3ZlIG9sZCBkYXRhIGZyb20gbWFwLlxuICAgICAgICBmb3IgKGxldCBpZHggPSBtYXBMYXllcnMubGVuZ3RoIC0gMTsgaWR4ID49IDA7IGlkeC0tKSB7XG4gICAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnNlZ21lbnRMaXN0LmZpbmQoXG4gICAgICAgICAgICAoZW50cnkpID0+IGVudHJ5LmlkID09IG1hcExheWVyc1tpZHhdLnNlZ21lbnRJZFxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UubGVhZmxldE1hcC5yZW1vdmVMYXllcihcbiAgICAgICAgICAgICAgbWFwTGF5ZXJzW2lkeF0ubWFwUG9zZXNQdHJcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBtYXBMYXllcnMuc3BsaWNlKGlkeCwgMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vUmVzZXQgZGlzcGxheSBpZiBtYXAgaXMgZW1wdHkuXG4gICAgICAgIGlmIChtYXBMYXllcnMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICBjb25zdCBmaXJzdExvY0VudHJ5ID0gdGhpcy5zZWdtZW50TGlzdC5maW5kKFxuICAgICAgICAgICAgKGVudHJ5KSA9PiBlbnRyeS5sYXQgJiYgZW50cnkubG5nXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAoZmlyc3RMb2NFbnRyeSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAgIFwiU2V0dGluZyBtYXAgZGlzcGxheSBpbiBcIiArXG4gICAgICAgICAgICAgICAgZmlyc3RMb2NFbnRyeS5sYXQgK1xuICAgICAgICAgICAgICAgIFwiLCBcIiArXG4gICAgICAgICAgICAgICAgZmlyc3RMb2NFbnRyeS5sbmdcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0aGlzLm1hcEludGVyZmFjZS5sZWFmbGV0TWFwLnNldFZpZXcoXG4gICAgICAgICAgICAgIFtmaXJzdExvY0VudHJ5LmxhdCwgZmlyc3RMb2NFbnRyeS5sbmddLFxuICAgICAgICAgICAgICAxN1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHRoaXMubWFwSW50ZXJmYWNlLnJlbW92ZUxvY2FsTWFwKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvL0lmIGxvY2FsIG1hcCBpcyBhY3RpdmU6XG4gICAgICBpZiAodGhpcy5sb2NhbE1hcEJveC5jaGVja2VkKSB7XG4gICAgICAgIC8vUmVtb3ZlIG9sZCBkYXRhIGZyb20gbWFwLlxuICAgICAgICBmb3IgKGxldCBpZHggPSBsb2NhbE1hcExheWVycy5sZW5ndGggLSAxOyBpZHggPj0gMDsgaWR4LS0pIHtcbiAgICAgICAgICBjb25zdCBtYXRjaCA9IHRoaXMuc2VnbWVudExpc3QuZmluZChcbiAgICAgICAgICAgIChlbnRyeSkgPT4gZW50cnkuaWQgPT0gbG9jYWxNYXBMYXllcnNbaWR4XS5zZWdtZW50SWRcbiAgICAgICAgICApO1xuICAgICAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxNYXBJbnRlcmZhY2UucmVtb3ZlUG9zZXMobG9jYWxNYXBMYXllcnNbaWR4XS5zZWdtZW50SWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvL1Jlc2V0IGRpc3BsYXkgaWYgbWFwIGlzIGVtcHR5LlxuICAgICAgICBpZiAobG9jYWxNYXBMYXllcnMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLnJlc2V0Vmlld2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVXBkYXRlIGxvY2FsIG1hcDpcbiAgICAgICAgY29uc3Qgc2hpZnRTZWxlY3RWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2hpZnQtaWRcIikudmFsdWU7XG4gICAgICAgIGlmIChzaGlmdFNlbGVjdFZhbHVlKSB7XG4gICAgICAgICAgY29uc3QgbWFwSW1hZ2UgPSBhd2FpdCB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLmdldEFuZERyYXdNYXAoXG4gICAgICAgICAgICBzaGlmdFNlbGVjdFZhbHVlXG4gICAgICAgICAgKTtcbiAgICAgICAgICAvL0Fsc28gZHJhdyB0aGUgbG9jYWwgbWFwIG92ZXIgdGhlIEdQUyBtYXAgKGlmIGFjdGl2ZSBhbmQgZ3BzIHBvc2VzIGF2YWlsYWJsZSkuXG4gICAgICAgICAgaWYgKHRoaXMuZ3BzTWFwQm94LmNoZWNrZWQgJiYgbWFwSW1hZ2UpIHtcbiAgICAgICAgICAgIC8vRmlsdGVyIG1hc3RlciBzZWdtZW50cyB0aGF0IGhhdmUgYm90aCBsb2NhbCBhbmQgZ3BzIHBvc2l0aW9uLlxuICAgICAgICAgICAgbGV0IGZTZWdzID0gdGhpcy5zZWdtZW50TGlzdC5maWx0ZXIoXG4gICAgICAgICAgICAgIChlbnRyeSkgPT5cbiAgICAgICAgICAgICAgICBlbnRyeS5sYXQgJiZcbiAgICAgICAgICAgICAgICBlbnRyeS5sbmcgJiZcbiAgICAgICAgICAgICAgICBlbnRyeS5sb2NhbF94ICYmXG4gICAgICAgICAgICAgICAgZW50cnkubG9jYWxfeSAmJlxuICAgICAgICAgICAgICAgIGVudHJ5LnBhcmVudElkID09PSBudWxsXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgaWYgKGZTZWdzLmxlbmd0aCA+PSAyKSB7XG4gICAgICAgICAgICAgIGZTZWdzLnJldmVyc2UoKTtcbiAgICAgICAgICAgICAgYXdhaXQgdGhpcy5tYXBJbnRlcmZhY2UuYWRkTG9jYWxNYXAobWFwSW1hZ2UsIGZTZWdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxlcnQoXCJObyBzaGlmdCBzZWxlY3RlZCFcIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vUmVjb3JkIGlmIG1hcHMgd2VyZSBlbXB0eS5cbiAgICAgIGNvbnN0IGxvY2FsX3Jlc2V0ID0gbG9jYWxNYXBMYXllcnMubGVuZ3RoID09PSAwO1xuICAgICAgY29uc3QgZ3BzX3Jlc2V0ID0gbWFwTGF5ZXJzLmxlbmd0aCA9PT0gMDtcbiAgICAgIC8vUmVjb3JkIGlmIHNlZ21lbnRUYWJsZSB3YXMgZW1wdHkuXG4gICAgICBjb25zdCB0YWJsZV9yZXNldCA9IHRoaXMuc2VnbWVudFRhYmxlLmNoaWxkcmVuLmxlbmd0aCA9PT0gMDtcbiAgICAgIC8vQWRkIG9yIGVkaXQgZGF0YSBmcm9tIHRhYmxlIGFuZCBtYXA6XG4gICAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIHRoaXMuc2VnbWVudExpc3QucmV2ZXJzZSgpKSB7XG4gICAgICAgIC8vRmluZCBpZiB0aGUgZW50cnkgd2FzIGluIHRoZSB0YWJsZSBiZWZvcmUgdGhlIHVwZGF0ZS5cbiAgICAgICAgLy9Gb3IgaXRvIG1hc3RlciBzZWdtZW50cywgZmluZCBpZiB0aGUgY2hpbGQgaXMgaW4gdGhlIHRhYmxlLlxuICAgICAgICBsZXQgdGFyZ2V0SWQgPSBlbnRyeS5pZDtcbiAgICAgICAgaWYgKGVudHJ5LnNlZ21lbnRUeXBlID09IFwiSVRPXCIgJiYgIWVudHJ5LnBhcmVudElkKSB7XG4gICAgICAgICAgY29uc3QgbWF0Y2hlZENoaWxkID0gdGhpcy5zZWdtZW50TGlzdC5maW5kKFxuICAgICAgICAgICAgKHNlZ21lbnQpID0+IHNlZ21lbnQucGFyZW50SWQgPT09IGVudHJ5LmlkXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAobWF0Y2hlZENoaWxkKSB7XG4gICAgICAgICAgICB0YXJnZXRJZCA9IG1hdGNoZWRDaGlsZC5pZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWF0Y2hlZFJvdyA9IHRhYmxlUm93cy5maW5kKFxuICAgICAgICAgIChyb3cpID0+IHJvdy5maXJzdENoaWxkLnRleHRDb250ZW50ID09IHRhcmdldElkXG4gICAgICAgICk7XG4gICAgICAgIC8vVXBkYXRlIHRhYmxlIHJvd3MgKG9ubHkgYXV0byBhbmQgaXRvLWNoaWxkcmVuKTpcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGVudHJ5LnNlZ21lbnRUeXBlID09IFwiQVVUT1wiIHx8XG4gICAgICAgICAgKGVudHJ5LnNlZ21lbnRUeXBlID09IFwiSVRPXCIgJiYgZW50cnkucGFyZW50SWQpXG4gICAgICAgICkge1xuICAgICAgICAgIGNvbnN0IGVudHJ5U3RhdGUgPSBlbnRyeS5lbmRUaW1lID09IG51bGwgPyBcIk9QRU5cIiA6IFwiQ0xPU0VEXCI7XG4gICAgICAgICAgY29uc3QgZW50cnlSZWFzb24gPSBlbnRyeS5pdG9SZWFzb24gfHwgXCJcIjtcbiAgICAgICAgICBpZiAobWF0Y2hlZFJvdykge1xuICAgICAgICAgICAgLy9VcGRhdGUgcm93IGluZm8gd2l0aCBuZXcgZGF0YS5cbiAgICAgICAgICAgIGlmIChtYXRjaGVkUm93LmNoaWxkcmVuWzJdLnRleHRDb250ZW50ICE9IGVudHJ5UmVhc29uKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVXBkYXRpbmcgcm93IFwiICsgZW50cnkuaWQgKyBcIiByZWFzb25cIik7XG4gICAgICAgICAgICAgIG1hdGNoZWRSb3cuY2hpbGRyZW5bMl0udGV4dENvbnRlbnQgPSBlbnRyeVJlYXNvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtYXRjaGVkUm93LmNoaWxkcmVuWzNdLnRleHRDb250ZW50ICE9IGVudHJ5U3RhdGUpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVcGRhdGluZyByb3cgXCIgKyBlbnRyeS5pZCArIFwiIHN0YXRlXCIpO1xuICAgICAgICAgICAgICBtYXRjaGVkUm93LmNoaWxkcmVuWzNdLnRleHRDb250ZW50ID0gZW50cnlTdGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy9DcmVhdGUgbmV3IHRhYmxlIHJvdy5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ3JlYXRpbmcgcm93IFwiICsgZW50cnkuaWQpO1xuICAgICAgICAgICAgRE9NR2VuZXJpYy5hZGRSb3codGhpcy5zZWdtZW50VGFibGUsIFtcbiAgICAgICAgICAgICAgZW50cnkuaWQsXG4gICAgICAgICAgICAgIGVudHJ5LnNlZ21lbnRUeXBlLFxuICAgICAgICAgICAgICBlbnRyeVJlYXNvbixcbiAgICAgICAgICAgICAgZW50cnlTdGF0ZSxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgLy9TZXQgdmlzaWJpbGl0eSBpZiB0aGUgcm93IGlzIEFVVE9cbiAgICAgICAgICAgIGlmIChlbnRyeS5zZWdtZW50VHlwZSA9PT0gXCJBVVRPXCIpIHtcbiAgICAgICAgICAgICAgaWYgKCF0aGlzLnNob3dBdXRvU2VnbWVudHMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlZ21lbnRUYWJsZS5maXJzdENoaWxkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9BY3RpdmF0ZSBtYXBzIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHJvdzpcbiAgICAgICAgICAgIGlmICh0YWJsZV9yZXNldCkge1xuICAgICAgICAgICAgICAvL0lmIHRoZSBzZWdtZW50IGhhcyBHUFMgcG9zZXMsIGFjdGl2YXRlIHRoZSBHUFMgbWFwXG4gICAgICAgICAgICAgIGlmIChlbnRyeS5sbmcgJiYgZW50cnkubGF0ICYmICF0aGlzLmdwc01hcEJveC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ncHNNYXBCb3guY2hlY2tlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UubWFwRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgICAgIHRoaXMubWFwSW50ZXJmYWNlLmxlYWZsZXRNYXAuaW52YWxpZGF0ZVNpemUodHJ1ZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLy9JZiBhbnkgc2VnbWVudCBoYXMgbG9jYWwgcG9zZXMsIGFjdGl2YXRlIHRoZSBsb2NhbCBtYXBcbiAgICAgICAgICAgICAgaWYgKGVudHJ5LmxvY2FsX3ggJiYgZW50cnkubG9jYWxfeSAmJiAhdGhpcy5sb2NhbE1hcEJveC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbE1hcEJveC5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLm1hcEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvL0lmIEdQUyBtYXAgaXMgYWN0aXZlOlxuICAgICAgICBpZiAodGhpcy5ncHNNYXBCb3guY2hlY2tlZCkge1xuICAgICAgICAgIC8vVXBkYXRlIG1hcCBwb3NlczpcbiAgICAgICAgICBpZiAoIWVudHJ5LnBhcmVudElkKSB7XG4gICAgICAgICAgICBjb25zdCBtYXRjaGVkTWFwTGF5ZXIgPSBtYXBMYXllcnMuZmluZChcbiAgICAgICAgICAgICAgKGxheWVyKSA9PiBsYXllci5zZWdtZW50SWQgPT0gZW50cnkuaWRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICAvL0lmIHRoZSBtYXAgd2FzIHJlc2V0LCB0aGUgc2VnbWVudCBpcyBuZXcgaW4gdGhlIHRhYmxlIG9yIGlmIGl0J3Mgb3BlbjpcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgZ3BzX3Jlc2V0IHx8XG4gICAgICAgICAgICAgICghbWF0Y2hlZE1hcExheWVyICYmICFtYXRjaGVkUm93KSB8fFxuICAgICAgICAgICAgICBlbnRyeS5lbmRUaW1lID09IG51bGxcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAvL0NyZWF0ZSBuZXcgb3IgdXBkYXRlIHBvaW50cyBsYXllci5cbiAgICAgICAgICAgICAgYXdhaXQgdGhpcy5tYXBJbnRlcmZhY2UuZ2V0QW5kRHJhd01hcFBvc2VzKGVudHJ5LmlkKTtcbiAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIChlbnRyeS5zZWdtZW50VHlwZSA9PSBcIkFVVE9cIiAmJlxuICAgICAgICAgICAgICAgICAgZW50cnkuaWQgPT0gdGhpcy5zZWxlY3RlZFJvd0lkKSB8fFxuICAgICAgICAgICAgICAgIChlbnRyeS5zZWdtZW50VHlwZSA9PSBcIklUT1wiICYmXG4gICAgICAgICAgICAgICAgICBlbnRyeS5pZCA9PSB0aGlzLnNlbGVjdGVkUm93UGFyZW50SWQpXG4gICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHRoaXMubWFwSW50ZXJmYWNlLmFkZEFjdGl2ZVBvc2VzKGVudHJ5LmlkKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvL0lmIGxvY2FsIG1hcCBpcyBhY3RpdmU6XG4gICAgICAgIGlmICh0aGlzLmxvY2FsTWFwQm94LmNoZWNrZWQpIHtcbiAgICAgICAgICAvL1VwZGF0ZSBtYXAgcG9zZXM6XG4gICAgICAgICAgaWYgKCFlbnRyeS5wYXJlbnRJZCkge1xuICAgICAgICAgICAgY29uc3QgbWF0Y2hlZE1hcExheWVyID0gbG9jYWxNYXBMYXllcnMuZmluZChcbiAgICAgICAgICAgICAgKGxheWVyKSA9PiBsYXllci5zZWdtZW50SWQgPT0gZW50cnkuaWRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICAvL0lmIHRoZSBtYXAgd2FzIHJlc2V0LCB0aGUgc2VnbWVudCBpcyBuZXcgaW4gdGhlIHRhYmxlIG9yIGlmIGl0J3Mgb3BlbjpcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgbG9jYWxfcmVzZXQgfHxcbiAgICAgICAgICAgICAgKCFtYXRjaGVkTWFwTGF5ZXIgJiYgIW1hdGNoZWRSb3cpIHx8XG4gICAgICAgICAgICAgIGVudHJ5LmVuZFRpbWUgPT0gbnVsbFxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIC8vQ3JlYXRlIG5ldyBvciB1cGRhdGUgcG9pbnRzIGxheWVyLlxuICAgICAgICAgICAgICBhd2FpdCB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLmdldEFuZERyYXdNYXBQb3NlcyhlbnRyeS5pZCk7XG4gICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAoZW50cnkuc2VnbWVudFR5cGUgPT0gXCJBVVRPXCIgJiZcbiAgICAgICAgICAgICAgICAgIGVudHJ5LmlkID09IHRoaXMuc2VsZWN0ZWRSb3dJZCkgfHxcbiAgICAgICAgICAgICAgICAoZW50cnkuc2VnbWVudFR5cGUgPT0gXCJJVE9cIiAmJlxuICAgICAgICAgICAgICAgICAgZW50cnkuaWQgPT0gdGhpcy5zZWxlY3RlZFJvd1BhcmVudElkKVxuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLmFkZEFjdGl2ZVBvc2VzKGVudHJ5LmlkKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBzaG93SXRvT25seUJveEhhbmRsZXIoKSB7XG4gICAgLy9IaWRlIGF1dG8gc2VnbWVudHMgaWYgdGhlIGJveCBpcyBjaGVja2VkLlxuICAgIGlmICh0aGlzLnNob3dJdG9Pbmx5Qm94LmNoZWNrZWQpIHtcbiAgICAgIHRoaXMuc2hvd0F1dG9TZWdtZW50cyA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNob3dBdXRvU2VnbWVudHMgPSB0cnVlO1xuICAgIH1cbiAgICBjb25zdCB0YWJsZVJvd3MgPSBBcnJheS5mcm9tKHRoaXMuc2VnbWVudFRhYmxlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJ0clwiKSk7XG4gICAgZm9yIChjb25zdCByb3cgb2YgdGFibGVSb3dzKSB7XG4gICAgICBpZiAocm93LmNoaWxkcmVuWzFdLnRleHRDb250ZW50ID09PSBcIkFVVE9cIikge1xuICAgICAgICBpZiAodGhpcy5zaG93QXV0b1NlZ21lbnRzKSB7XG4gICAgICAgICAgcm93LnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiZGlzcGxheVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByb3cuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgYXV0b1JlZnJlc2hCb3hIYW5kbGVyKCkge1xuICAgIC8vQ2FsbCB1cGRhdGVTZWdtZW50cyBpbiByZWd1bGFyIGludGVydmFscyBpZiB0aGUgYm94IGlzIGNoZWNrZWQuXG4gICAgaWYgKHRoaXMuYXV0b1JlZnJlc2hCb3guY2hlY2tlZCkge1xuICAgICAgaWYgKHRoaXMubGVnU2VsZWN0SG9vay52YWx1ZSkge1xuICAgICAgICB0aGlzLmF1dG9SZWZyZXNoSW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnVwZGF0ZVNlZ21lbnRzKCk7XG4gICAgICAgIH0sIHRoaXMuYXV0b1JlZnJlc2hUaW1lcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmF1dG9SZWZyZXNoQm94LmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgYWxlcnQoXCJObyBsZWcgc2VsZWN0ZWQhXCIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuYXV0b1JlZnJlc2hJbnRlcnZhbElkKTtcbiAgICB9XG4gIH1cblxuICBhdXRvUmVmcmVzaENvbmZpZ0hhbmRsZXIoKSB7XG4gICAgLy9CdWlsZCBhIG1hcCBjb25maWd1cmF0aW9uIG92ZXJsYXkuXG4gICAgY29uc3QgYXV0b1JlZnJlc2hDb25maWcgPSBuZXcgQXV0b1JlZnJlc2hDb25maWcoKTtcbiAgICAvL0Rpc3BsYXkgdGhlIG92ZXJsYXkuXG4gICAgY29uc3QgdXNlck1vZGFsID0gbmV3IE1vZGFsKFxuICAgICAgYXV0b1JlZnJlc2hDb25maWcsXG4gICAgICBcIllvdXIgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgdGhpcyBmZWF0dXJlISAtIFBsZWFzZSBjaGFuZ2UgdG8gYSBtb3JlIG1vZGVybiBvbmUuXCIsXG4gICAgICAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGF1dG9SZWZyZXNoRGF0YSA9IEpTT04ucGFyc2UoXG4gICAgICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJmdHRBdXRvUmVmcmVzaERhdGFcIilcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKGF1dG9SZWZyZXNoRGF0YSkge1xuICAgICAgICAgIHRoaXMuYXV0b1JlZnJlc2hUaW1lciA9IGF1dG9SZWZyZXNoRGF0YS50aW1lcjtcbiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuYXV0b1JlZnJlc2hJbnRlcnZhbElkKTtcbiAgICAgICAgICB0aGlzLmF1dG9SZWZyZXNoQm94SGFuZGxlcigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFsZXJ0KFwiTm8gYXV0b1JlZnJlc2ggY29uZmlndXJhdGlvbiBkYXRhIGluIGxvY2FsIHN0b3JhZ2UuXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgICB1c2VyTW9kYWwuc2hvdygpO1xuICB9XG5cbiAgc2VnbWVudFRhYmxlQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XG4gICAgLy9GaW5kIHRoZSBjbG9zZXN0IHJvdyB0byB0aGUgY2xpY2sgZXZlbnQuXG4gICAgY29uc3QgY2xvc2VzdFJvdyA9IGV2ZW50LnRhcmdldC5jbG9zZXN0KFwidHJcIik7XG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRSb3cpIHtcbiAgICAgIC8vUmVtb3ZlIGFueSBwcmV2aW91cyBzZWxlY3Rpb24gZGF0YVxuICAgICAgdGhpcy5zZWxlY3RlZFJvdy5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLXJvd1wiKTtcbiAgICAgIHRoaXMubWFwSW50ZXJmYWNlLnJlbW92ZUFjdGl2ZU1hcmtlcigpO1xuICAgICAgdGhpcy5tYXBJbnRlcmZhY2UucmVtb3ZlQWN0aXZlUG9zZXMoKTtcbiAgICAgIHRoaXMubG9jYWxNYXBJbnRlcmZhY2UucmVtb3ZlQWN0aXZlTWFya2VyKCk7XG4gICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLnJlbW92ZUFjdGl2ZVBvc2VzKCk7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZFJvdyA9PSBjbG9zZXN0Um93KSB7XG4gICAgICAgIC8vUmVzZXQgc2VsZWN0aW9uIHZhcmlhYmxlcyBmb3IgYSBzZWxlY3RlZCByb3cgYmVpbmcgZGVzZWxlY3RlZC5cbiAgICAgICAgdGhpcy5zZWxlY3RlZFJvdyA9IG51bGw7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZCA9IG51bGw7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dQYXJlbnRJZCA9IG51bGw7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgLy9BZGQgc2VsZWN0aW9uIGRhdGEgdG8gcmVmZXJlbmNlIHRoZSBjbGlja2VkIHJvdy5cbiAgICB0aGlzLnNlbGVjdGVkUm93ID0gY2xvc2VzdFJvdztcbiAgICB0aGlzLnNlbGVjdGVkUm93SWQgPSBjbG9zZXN0Um93LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgdGhpcy5zZWxlY3RlZFJvdy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLXJvd1wiKTtcbiAgICAvL0ZpbmQgYXNzb2NpYXRlZCBzZWdtZW50IGZyb20gdGhlIGxpc3QuXG4gICAgY29uc3Qgc2VsZWN0ZWRFbnRyeSA9IHRoaXMuc2VnbWVudExpc3QuZmluZChcbiAgICAgIChlbnRyeSkgPT4gZW50cnkuaWQgPT0gdGhpcy5zZWxlY3RlZFJvd0lkXG4gICAgKTtcbiAgICAvL01hcmsgc3RhcnQgbG9jYXRpb24gb2YgdGhlIHNlbGVjdGVkIHNlZ21lbnQvcGFyZW50IHNlZ21lbnQuXG4gICAgdGhpcy5zZWxlY3RlZFJvd1BhcmVudElkID0gc2VsZWN0ZWRFbnRyeS5wYXJlbnRJZDtcbiAgICBpZiAoc2VsZWN0ZWRFbnRyeS5sYXQgJiYgc2VsZWN0ZWRFbnRyeS5sbmcpIHtcbiAgICAgIHRoaXMubWFwSW50ZXJmYWNlLmFkZEFjdGl2ZU1hcmtlcihzZWxlY3RlZEVudHJ5LmxhdCwgc2VsZWN0ZWRFbnRyeS5sbmcpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RlZFJvd1BhcmVudElkKSB7XG4gICAgICBjb25zdCBzZWxlY3RlZEVudHJ5UGFyZW50ID0gdGhpcy5zZWdtZW50TGlzdC5maW5kKFxuICAgICAgICAoZW50cnkpID0+IGVudHJ5LmlkID09IHRoaXMuc2VsZWN0ZWRSb3dQYXJlbnRJZFxuICAgICAgKTtcbiAgICAgIGlmIChzZWxlY3RlZEVudHJ5UGFyZW50LmxhdCAmJiBzZWxlY3RlZEVudHJ5UGFyZW50LmxuZykge1xuICAgICAgICB0aGlzLm1hcEludGVyZmFjZS5hZGRBY3RpdmVNYXJrZXIoXG4gICAgICAgICAgc2VsZWN0ZWRFbnRyeVBhcmVudC5sYXQsXG4gICAgICAgICAgc2VsZWN0ZWRFbnRyeVBhcmVudC5sbmdcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy9NYXJrIGxvY2FsIHN0YXJ0IGxvY2F0aW9uIG9mIHRoZSBzZWxlY3RlZCBzZWdtZW50L3BhcmVudCBzZWdtZW50LlxuICAgIGlmIChzZWxlY3RlZEVudHJ5LmxvY2FsX3ggJiYgc2VsZWN0ZWRFbnRyeS5sb2NhbF95KSB7XG4gICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLmFkZEFjdGl2ZU1hcmtlcihcbiAgICAgICAgc2VsZWN0ZWRFbnRyeS5sb2NhbF94LFxuICAgICAgICBzZWxlY3RlZEVudHJ5LmxvY2FsX3lcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGVkUm93UGFyZW50SWQpIHtcbiAgICAgIGNvbnN0IHNlbGVjdGVkRW50cnlQYXJlbnQgPSB0aGlzLnNlZ21lbnRMaXN0LmZpbmQoXG4gICAgICAgIChlbnRyeSkgPT4gZW50cnkuaWQgPT0gdGhpcy5zZWxlY3RlZFJvd1BhcmVudElkXG4gICAgICApO1xuICAgICAgaWYgKHNlbGVjdGVkRW50cnlQYXJlbnQubG9jYWxfeCAmJiBzZWxlY3RlZEVudHJ5UGFyZW50LmxvY2FsX3kpIHtcbiAgICAgICAgdGhpcy5sb2NhbE1hcEludGVyZmFjZS5hZGRBY3RpdmVNYXJrZXIoXG4gICAgICAgICAgc2VsZWN0ZWRFbnRyeVBhcmVudC5sb2NhbF94LFxuICAgICAgICAgIHNlbGVjdGVkRW50cnlQYXJlbnQubG9jYWxfeVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICAvL0hpZ2hsaWdodCBtYXAgcG9zZXMgb2YgdGhlIHNlbGVjdGVkIHBhcmVudCBzZWdtZW50LlxuICAgIHRoaXMubWFwSW50ZXJmYWNlLmFkZEFjdGl2ZVBvc2VzKFxuICAgICAgdGhpcy5zZWxlY3RlZFJvd1BhcmVudElkIHx8IHRoaXMuc2VsZWN0ZWRSb3dJZFxuICAgICk7XG4gICAgLy9IaWdobGlnaHQgbG9jYWwgbWFwIHBvc2VzIG9mIHRoZSBzZWxlY3RlZCBwYXJlbnQgc2VnbWVudC5cbiAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLmFkZEFjdGl2ZVBvc2VzKFxuICAgICAgdGhpcy5zZWxlY3RlZFJvd1BhcmVudElkIHx8IHRoaXMuc2VsZWN0ZWRSb3dJZFxuICAgICk7XG4gIH1cblxuICBhc3luYyBxdWlja1JlYXNvbkVkaXRCdG5IYW5kbGVyKGl0b1JlYXNvbklkKSB7XG4gICAgLy9DaGVjayB0aGF0IGEgc2VnbWVudCBpcyBzZWxlY3RlZC5cbiAgICBpZiAoIXRoaXMuc2VsZWN0ZWRSb3dJZCkge1xuICAgICAgYWxlcnQoXCJObyBzZWdtZW50IHNlbGVjdGVkIGZvciBlZGl0aW9uIVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc2VsZWN0ZWRFbnRyeSA9IHRoaXMuc2VnbWVudExpc3QuZmluZChcbiAgICAgIChlbnRyeSkgPT4gZW50cnkuaWQgPT0gdGhpcy5zZWxlY3RlZFJvd0lkXG4gICAgKTtcbiAgICBpZiAoc2VsZWN0ZWRFbnRyeS5zZWdtZW50VHlwZSA9PSBcIkFVVE9cIikge1xuICAgICAgYWxlcnQoXCJDYW5ub3QgYXNzaWduIElUTyByZWFzb24gdG8gQVVUTyBzZWdtZW50IVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vU2VuZCBwdXQgcmVxdWVzdCB0byBlZGl0IHRoZSBpdG8gcmVhc29uLlxuICAgICAgYXdhaXQgdGhpcy5zZWdtZW50SW50ZXJmYWNlLnB1dCh0aGlzLnNlbGVjdGVkUm93SWQsIFwiZWRpdFwiLCBpdG9SZWFzb25JZCk7XG4gICAgICAvL1VwZGF0ZSB0YWJsZS5cbiAgICAgIHRoaXMudXBkYXRlU2VnbWVudHMoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYWxlcnQoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbmV3U2VnbWVudEhhbmRsZXIoKSB7XG4gICAgLy9GZXRjaCBpdG8gcmVhc29uIGRhdGEgZnJvbSBzZXJ2ZXIgaWYgbmVlZGVkLlxuICAgIHRyeSB7XG4gICAgICBpZiAoIXRoaXMuaXRvUmVhc29uTGlzdCB8fCB0aGlzLml0b1JlYXNvbkxpc3QubGVuZ3RoID09IDApIHtcbiAgICAgICAgdGhpcy5pdG9SZWFzb25MaXN0ID0gYXdhaXQgdGhpcy5pdG9SZWFzb25JbnRlcmZhY2UuZ2V0KCk7XG4gICAgICAgIC8vSWYgdGhlcmUgYXJlIG5vIGl0byByZWFzb25zLCBhbGVydCB0aGUgdXNlci5cbiAgICAgICAgaWYgKHRoaXMuaXRvUmVhc29uTGlzdC5sZW5ndGggPT0gMCkge1xuICAgICAgICAgIGFsZXJ0KFxuICAgICAgICAgICAgXCJJVE8gcmVhc29ucyBsaXN0IGVtcHR5LiBZb3VyIGRhdGFiYXNlIHdhcyBub3QgcHJvcGVybHkgaW5pdGlhbGl6ZWQuIFBsZWFzZSBmaXggdGhpcyBiZWZvcmUgY29udGludWluZy5cIlxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGFsZXJ0KGVycm9yLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvL1NlbGVjdCB0aGUgdW5hc3NpZ25lZCBpdG8gcmVhc29uLlxuICAgIGNvbnN0IG1hdGNoZWRJdG9SZWFzb24gPSB0aGlzLml0b1JlYXNvbkxpc3QuZmluZChcbiAgICAgIChlbnRyeSkgPT4gZW50cnkuc2hvcnREZXNjcmlwdGlvbiA9PSBcIlVuYXNzaWduZWRcIlxuICAgICk7XG4gICAgLy9DaGVjayB0aGVyZSBpcyBhIG1hdGNoIGFuZCBrZWVwIHRoZSBpZCBvZiB0aGUgdW5hc3NpZ25lZCBpdG8gcmVhc29uLlxuICAgIGxldCB1bmFzc2lnbmVkSXRvUmVhc29uSWQ7XG4gICAgaWYgKG1hdGNoZWRJdG9SZWFzb24pIHtcbiAgICAgIHVuYXNzaWduZWRJdG9SZWFzb25JZCA9IG1hdGNoZWRJdG9SZWFzb24uaWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFsZXJ0KFxuICAgICAgICBcIlVuYWJsZSB0byBmaW5kIHRoZSAnVW5hc3NpZ25lZCcgSVRPIHJlYXNvbi4gWW91ciBkYXRhYmFzZSB3YXMgbm90IHByb3Blcmx5IGluaXRpYWxpemVkLiBQbGVhc2UgZml4IHRoaXMgYmVmb3JlIGNvbnRpbnVpbmcuXCJcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvL1NlbmQgcG9zdCByZXF1ZXN0IHRvIGNyZWF0ZSBhIG5ldyBJVE8gc2VnbWVudCB3aXRoIHVuYXNzaWduZWQgcmVhc29uLlxuICAgICAgYXdhaXQgdGhpcy5zZWdtZW50SW50ZXJmYWNlLnBvc3QoXG4gICAgICAgIHRoaXMubGVnU2VsZWN0SG9vay52YWx1ZSxcbiAgICAgICAgdW5hc3NpZ25lZEl0b1JlYXNvbklkLFxuICAgICAgICBTRUdNRU5UX1RZUEVfSVRPLFxuICAgICAgICBudWxsLFxuICAgICAgICBudWxsLFxuICAgICAgICBudWxsLFxuICAgICAgICBudWxsXG4gICAgICApO1xuICAgICAgLy9VcGRhdGUgdGFibGUuXG4gICAgICB0aGlzLnVwZGF0ZVNlZ21lbnRzKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGFsZXJ0KGVycm9yLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGVuZFNlZ21lbnRIYW5kbGVyKCkge1xuICAgIC8vQ2hlY2sgdGhhdCBhIHNlZ21lbnQgaXMgc2VsZWN0ZWQuXG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkUm93SWQpIHtcbiAgICAgIGFsZXJ0KFwiTm8gc2VnbWVudCBzZWxlY3RlZCB0byBlbmQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy9TZW5kIHB1dCByZXF1ZXN0IHRvIGNsb3NlIHRoZSBzZWdtZW50LlxuICAgICAgYXdhaXQgdGhpcy5zZWdtZW50SW50ZXJmYWNlLnB1dCh0aGlzLnNlbGVjdGVkUm93SWQsIFwiY2xvc2VcIik7XG4gICAgICAvL1VwZGF0ZSB0YWJsZS5cbiAgICAgIHRoaXMudXBkYXRlU2VnbWVudHMoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYWxlcnQoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZWRpdFNlZ21lbnRIYW5kbGVyKCkge1xuICAgIC8vQ2hlY2sgdGhhdCBhIHNlZ21lbnQgaXMgc2VsZWN0ZWQuXG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkUm93SWQpIHtcbiAgICAgIGFsZXJ0KFwiUGxlYXNlIHNlbGVjdCBhIHNlZ21lbnQgdG8gZWRpdC5cIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvL0ZldGNoIGl0byByZWFzb24gZGF0YSBmcm9tIHNlcnZlciBpZiBuZWVkZWQuXG4gICAgICBpZiAoIXRoaXMuaXRvUmVhc29uTGlzdCB8fCB0aGlzLml0b1JlYXNvbkxpc3QubGVuZ3RoID09IDApIHtcbiAgICAgICAgdGhpcy5pdG9SZWFzb25MaXN0ID0gYXdhaXQgdGhpcy5pdG9SZWFzb25JbnRlcmZhY2UuZ2V0KCk7XG4gICAgICB9XG4gICAgICAvL0ZpbmQgdGhlIHNlbGVjdGVkIHNlZ21lbnQgZW50cnkuXG4gICAgICBjb25zdCBzZWxlY3RlZFNlZ21lbnQgPSB0aGlzLnNlZ21lbnRMaXN0LmZpbmQoXG4gICAgICAgIChzZWdtZW50KSA9PiBzZWdtZW50LmlkID09IHRoaXMuc2VsZWN0ZWRSb3dJZFxuICAgICAgKTtcbiAgICAgIC8vQnVpbGQgdGhlIHNlZ21lbnQgZWRpdGluZyBvdmVybGF5LlxuICAgICAgY29uc3Qgc2VnbWVudEVkaXQgPSBuZXcgU2VnbWVudEVkaXQoXG4gICAgICAgIHNlbGVjdGVkU2VnbWVudCxcbiAgICAgICAgdGhpcy5zZWdtZW50SW50ZXJmYWNlLFxuICAgICAgICB0aGlzLm5vdGVJbnRlcmZhY2UsXG4gICAgICAgIHRoaXMuaW1hZ2VJbnRlcmZhY2UsXG4gICAgICAgIHRoaXMuaXRvUmVhc29uTGlzdCxcbiAgICAgICAgdGhpcy5jdXJyZW50VXNlclxuICAgICAgKTtcbiAgICAgIC8vRGlzcGxheSB0aGUgb3ZlcmxheS5cbiAgICAgIGNvbnN0IHNlZ21lbnRNb2RhbCA9IG5ldyBNb2RhbChcbiAgICAgICAgc2VnbWVudEVkaXQsXG4gICAgICAgIFwiWW91ciBicm93c2VyIGRvZXMndCBzdXBwb3J0IHRoaXMgZmVhdHVyZSEgLSBQbGVhc2UgY2hhbmdlIHRvIGEgbW9yZSBtb2Rlcm4gb25lLlwiLFxuICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgdGhpcy51cGRhdGVTZWdtZW50cygpO1xuICAgICAgICB9XG4gICAgICApO1xuICAgICAgc2VnbWVudE1vZGFsLnNob3coKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYWxlcnQoZXJyb3IubWVzc2FqZSk7XG4gICAgfVxuICB9XG5cbiAgZ3BzTWFwQ29uZmlnSGFuZGxlcigpIHtcbiAgICAvL0J1aWxkIGEgbWFwIGNvbmZpZ3VyYXRpb24gb3ZlcmxheS5cbiAgICBjb25zdCBtYXBDb25maWcgPSBuZXcgTWFwQ29uZmlnKCk7XG4gICAgLy9EaXNwbGF5IHRoZSBvdmVybGF5LlxuICAgIGNvbnN0IHVzZXJNb2RhbCA9IG5ldyBNb2RhbChcbiAgICAgIG1hcENvbmZpZyxcbiAgICAgIFwiWW91ciBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCB0aGlzIGZlYXR1cmUhIC0gUGxlYXNlIGNoYW5nZSB0byBhIG1vcmUgbW9kZXJuIG9uZS5cIixcbiAgICAgICgpID0+IHtcbiAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UuY2hhbmdlVGlsZUxheWVyKCk7XG4gICAgICB9XG4gICAgKTtcbiAgICB1c2VyTW9kYWwuc2hvdygpO1xuICB9XG5cbiAgdG9nZ2xlR3BzTWFwSGFuZGxlcihldmVudCkge1xuICAgIGlmIChldmVudC50YXJnZXQuY2hlY2tlZCkge1xuICAgICAgdGhpcy5tYXBJbnRlcmZhY2UubWFwRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgdGhpcy5tYXBJbnRlcmZhY2UubGVhZmxldE1hcC5pbnZhbGlkYXRlU2l6ZSh0cnVlKTtcbiAgICAgIHRoaXMudXBkYXRlU2VnbWVudHMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy9IaWRlIG1hcCBjb250YWluZXIuXG4gICAgICB0aGlzLm1hcEludGVyZmFjZS5tYXBFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIC8vRGVsZXRlIG1hcCBwb3Nlcy5cbiAgICAgIGNvbnN0IG1hcExheWVycyA9IHRoaXMubWFwSW50ZXJmYWNlLm1hcFBvaW50c0xheWVycztcbiAgICAgIGZvciAobGV0IGlkeCA9IG1hcExheWVycy5sZW5ndGggLSAxOyBpZHggPj0gMDsgaWR4LS0pIHtcbiAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UubGVhZmxldE1hcC5yZW1vdmVMYXllcihtYXBMYXllcnNbaWR4XS5tYXBQb3Nlc1B0cik7XG4gICAgICAgIG1hcExheWVycy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgIH1cbiAgICAgIC8vUmVtb3ZlIGxvY2FsIG1hcCBmcm9tIEdQUyBtYXAuXG4gICAgICB0aGlzLm1hcEludGVyZmFjZS5yZW1vdmVMb2NhbE1hcCgpO1xuICAgICAgdGhpcy5tYXBJbnRlcmZhY2UucmVtb3ZlTGF5ZXJDb250cm9sKCk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlTG9jYWxNYXBIYW5kbGVyKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LnRhcmdldC5jaGVja2VkKSB7XG4gICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLm1hcEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIHRoaXMudXBkYXRlU2VnbWVudHMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy9IaWRlIGxvY2FsIG1hcCBjb250YWluZXIuXG4gICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLm1hcEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgLy9EZWxldGUgbG9jYWwgbWFwIHBvc2VzLlxuICAgICAgY29uc3QgbG9jYWxNYXBMYXllcnMgPSB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLm1hcFBvaW50c0xheWVycztcbiAgICAgIGZvciAobGV0IGlkeCA9IGxvY2FsTWFwTGF5ZXJzLmxlbmd0aCAtIDE7IGlkeCA+PSAwOyBpZHgtLSkge1xuICAgICAgICB0aGlzLmxvY2FsTWFwSW50ZXJmYWNlLnJlbW92ZVBvc2VzKGxvY2FsTWFwTGF5ZXJzW2lkeF0uc2VnbWVudElkKTtcbiAgICAgICAgLy9SZW1vdmUgbG9jYWwgbWFwIGZyb20gR1BTIG1hcC5cbiAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UucmVtb3ZlTG9jYWxNYXAoKTtcbiAgICAgICAgdGhpcy5tYXBJbnRlcmZhY2UucmVtb3ZlTGF5ZXJDb250cm9sKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/frames/SegmentDetail.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utility_ServerInterface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utility/ServerInterface.js */ \"./src/utility/ServerInterface.js\");\n/* harmony import */ var _frames_MainFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./frames/MainFrame.js */ \"./src/frames/MainFrame.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n\nclass App {\n  static init() {\n    this.serverInterface = new _utility_ServerInterface_js__WEBPACK_IMPORTED_MODULE_0__.ServerInterface();\n    this.mainFrame = new _frames_MainFrame_js__WEBPACK_IMPORTED_MODULE_1__.MainFrame(this.serverInterface);\n  }\n}\n\nApp.init();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuaW1wb3J0IHsgU2VydmVySW50ZXJmYWNlIH0gZnJvbSBcIi4vdXRpbGl0eS9TZXJ2ZXJJbnRlcmZhY2UuanNcIjtcbmltcG9ydCB7IE1haW5GcmFtZSB9IGZyb20gXCIuL2ZyYW1lcy9NYWluRnJhbWUuanNcIjtcblxuY2xhc3MgQXBwIHtcbiAgc3RhdGljIGluaXQoKSB7XG4gICAgdGhpcy5zZXJ2ZXJJbnRlcmZhY2UgPSBuZXcgU2VydmVySW50ZXJmYWNlKCk7XG4gICAgdGhpcy5tYWluRnJhbWUgPSBuZXcgTWFpbkZyYW1lKHRoaXMuc2VydmVySW50ZXJmYWNlKTtcbiAgfVxufVxuXG5BcHAuaW5pdCgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/overlays/AutoRefreshConfig.js":
/*!*******************************************!*\
  !*** ./src/overlays/AutoRefreshConfig.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoRefreshConfig: () => (/* binding */ AutoRefreshConfig)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2022 - Fraunhofer FKIE\n */\n\n//Structure and logic of the autoRefresh config UI.\nclass AutoRefreshConfig {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor() {\n    //Import and build autoRefresh config node.\n    const templateEl = document.getElementById(\"auto-refresh-config-template\");\n    this.element = document.importNode(templateEl.content, true);\n    //Get html hooks.\n    const autoRefreshTimer = this.element.getElementById(\"auto-refresh-timer\");\n    //Fill input fields with current data.\n    const autoRefreshData = JSON.parse(\n      localStorage.getItem(\"fttAutoRefreshData\")\n    );\n    if (autoRefreshData) {\n      autoRefreshTimer.value = autoRefreshData.timer;\n    } else {\n      alert(\"No autoRefresh configuration data in local storage.\");\n    }\n    //Set change event listeners.\n    autoRefreshTimer.addEventListener(\n      \"input\",\n      this.dataChangedHandler.bind(this)\n    );\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button:first-of-type\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n    //Register reset button handler.\n    this.element\n      .querySelector(\"form button:last-of-type\")\n      .addEventListener(\"click\", this.resetDataBtnHandler.bind(this));\n  }\n\n  dataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    let autoRefreshData = {};\n    autoRefreshData.timer = parseInt(\n      document.getElementById(\"auto-refresh-timer\").value\n    );\n    //Store data.\n    localStorage.setItem(\"fttAutoRefreshData\", JSON.stringify(autoRefreshData));\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n\n  async resetDataBtnHandler(event) {\n    event.preventDefault();\n    //Create default data object.\n    const autoRefreshData = {\n      timer: 2000,\n    };\n    //Fill input fields with current data\n    document.getElementById(\"auto-refresh-timer\").value = autoRefreshData.timer;\n    //Store data.\n    localStorage.setItem(\"fttAutoRefreshData\", JSON.stringify(autoRefreshData));\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvQXV0b1JlZnJlc2hDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvb3ZlcmxheXMvQXV0b1JlZnJlc2hDb25maWcuanM/OGUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIyIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9TdHJ1Y3R1cmUgYW5kIGxvZ2ljIG9mIHRoZSBhdXRvUmVmcmVzaCBjb25maWcgVUkuXG5leHBvcnQgY2xhc3MgQXV0b1JlZnJlc2hDb25maWcge1xuICAvL1RoaXMgY2xhc3MgaXMgYmFzZWQgb24gYSB0ZW1wbGF0ZSB0aGF0IGl0IGxhdGVyIGdvaW5nIHRvIGJlIGFkZGVkIHRvIGFub3RoZXIgRE9NIE5vZGUuXG4gIC8vVGhlcmVmb3JlLCBubyBET00gcmVmZXJlbmNlcyBhcmUga2VwdCBhcyBwcm9wZXJ0aWVzLlxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvL0ltcG9ydCBhbmQgYnVpbGQgYXV0b1JlZnJlc2ggY29uZmlnIG5vZGUuXG4gICAgY29uc3QgdGVtcGxhdGVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXV0by1yZWZyZXNoLWNvbmZpZy10ZW1wbGF0ZVwiKTtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSk7XG4gICAgLy9HZXQgaHRtbCBob29rcy5cbiAgICBjb25zdCBhdXRvUmVmcmVzaFRpbWVyID0gdGhpcy5lbGVtZW50LmdldEVsZW1lbnRCeUlkKFwiYXV0by1yZWZyZXNoLXRpbWVyXCIpO1xuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCBjdXJyZW50IGRhdGEuXG4gICAgY29uc3QgYXV0b1JlZnJlc2hEYXRhID0gSlNPTi5wYXJzZShcbiAgICAgIGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZnR0QXV0b1JlZnJlc2hEYXRhXCIpXG4gICAgKTtcbiAgICBpZiAoYXV0b1JlZnJlc2hEYXRhKSB7XG4gICAgICBhdXRvUmVmcmVzaFRpbWVyLnZhbHVlID0gYXV0b1JlZnJlc2hEYXRhLnRpbWVyO1xuICAgIH0gZWxzZSB7XG4gICAgICBhbGVydChcIk5vIGF1dG9SZWZyZXNoIGNvbmZpZ3VyYXRpb24gZGF0YSBpbiBsb2NhbCBzdG9yYWdlLlwiKTtcbiAgICB9XG4gICAgLy9TZXQgY2hhbmdlIGV2ZW50IGxpc3RlbmVycy5cbiAgICBhdXRvUmVmcmVzaFRpbWVyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImlucHV0XCIsXG4gICAgICB0aGlzLmRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpXG4gICAgKTtcbiAgICAvL1JlZ2lzdGVyIHVwZGF0ZSBidXR0b24gaGFuZGxlci5cbiAgICB0aGlzLmVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b246Zmlyc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZURhdGFCdG5IYW5kbGVyLmJpbmQodGhpcykpO1xuICAgIC8vUmVnaXN0ZXIgcmVzZXQgYnV0dG9uIGhhbmRsZXIuXG4gICAgdGhpcy5lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uOmxhc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnJlc2V0RGF0YUJ0bkhhbmRsZXIuYmluZCh0aGlzKSk7XG4gIH1cblxuICBkYXRhQ2hhbmdlZEhhbmRsZXIoKSB7XG4gICAgLy9BY3RpdmF0ZSB1cGRhdGUgYnV0dG9uLlxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZURhdGFCdG5IYW5kbGVyKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAvL0dldCBkYXRhIHRvIHVwZGF0ZS5cbiAgICBsZXQgYXV0b1JlZnJlc2hEYXRhID0ge307XG4gICAgYXV0b1JlZnJlc2hEYXRhLnRpbWVyID0gcGFyc2VJbnQoXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF1dG8tcmVmcmVzaC10aW1lclwiKS52YWx1ZVxuICAgICk7XG4gICAgLy9TdG9yZSBkYXRhLlxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZnR0QXV0b1JlZnJlc2hEYXRhXCIsIEpTT04uc3RyaW5naWZ5KGF1dG9SZWZyZXNoRGF0YSkpO1xuICAgIC8vRGlzYWJsZSB1cGRhdGUgYnV0dG9uLlxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgYXN5bmMgcmVzZXREYXRhQnRuSGFuZGxlcihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgLy9DcmVhdGUgZGVmYXVsdCBkYXRhIG9iamVjdC5cbiAgICBjb25zdCBhdXRvUmVmcmVzaERhdGEgPSB7XG4gICAgICB0aW1lcjogMjAwMCxcbiAgICB9O1xuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCBjdXJyZW50IGRhdGFcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF1dG8tcmVmcmVzaC10aW1lclwiKS52YWx1ZSA9IGF1dG9SZWZyZXNoRGF0YS50aW1lcjtcbiAgICAvL1N0b3JlIGRhdGEuXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJmdHRBdXRvUmVmcmVzaERhdGFcIiwgSlNPTi5zdHJpbmdpZnkoYXV0b1JlZnJlc2hEYXRhKSk7XG4gICAgLy9EaXNhYmxlIHVwZGF0ZSBidXR0b24uXG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtIGJ1dHRvblwiKS5kaXNhYmxlZCA9IHRydWU7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/overlays/AutoRefreshConfig.js\n");

/***/ }),

/***/ "./src/overlays/LegEdit.js":
/*!*********************************!*\
  !*** ./src/overlays/LegEdit.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LegEdit: () => (/* binding */ LegEdit)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* eslint-disable no-control-regex */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n//Structure and logic of the leg edition UI.\nclass LegEdit {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(leg, legInterface, weatherList, poseSourceList) {\n    //Set arguments as properties.\n    this.leg = leg;\n    this.legInterface = legInterface;\n    this.weatherList = weatherList;\n    this.poseSourceList = poseSourceList;\n    //Import and build leg edition node.\n    const templateEl = document.getElementById(\"edit-leg-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //=============================== HEADER ===============================\n    //Set title, start and end time.\n    this.element.querySelector(\"header h2 span:last-of-type\").textContent =\n      leg.id;\n    this.element.querySelector(\n      \"header p:first-of-type span:last-of-type\"\n    ).textContent = new Date(leg.startTime * 1000).toISOString();\n    if (leg.endTime) {\n      this.element.querySelector(\n        \"header p:last-of-type span:last-of-type\"\n      ).textContent = new Date(leg.endTime * 1000).toISOString();\n    }\n\n    //============================ DATA SECTION ============================\n    //Reach to leg info data elements.\n    const weatherSelect = this.element.getElementById(\"weather\");\n    const defaultPoseSourceSelect = this.element.getElementById(\n      \"default-pose-source\"\n    );\n    const noteText = this.element.getElementById(\"leg-note\");\n    //Populate selects.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      weatherSelect,\n      weatherList.map((entry) => entry.shortDescription)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      defaultPoseSourceSelect,\n      poseSourceList.map((entry) => entry.shortDescription)\n    );\n    //Focus matching option on the selects with the properties in the leg object.\n    const matchedWeather = weatherList.find(\n      (entry) => entry.id == leg.weatherId\n    );\n    if (matchedWeather) {\n      weatherSelect.value = matchedWeather.shortDescription;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(weatherSelect);\n    }\n    const matchedPoseSource = poseSourceList.find(\n      (entry) => entry.id == leg.defaultPoseSourceId\n    );\n    if (matchedPoseSource) {\n      defaultPoseSourceSelect.value = matchedPoseSource.shortDescription;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(defaultPoseSourceSelect);\n    }\n    //Fill input fields with leg data.\n    noteText.value = leg.note;\n    //Set change event listeners.\n    weatherSelect.addEventListener(\n      \"change\",\n      this.legDataChangedHandler.bind(this)\n    );\n    defaultPoseSourceSelect.addEventListener(\n      \"change\",\n      this.legDataChangedHandler.bind(this)\n    );\n    noteText.addEventListener(\"input\", this.legDataChangedHandler.bind(this));\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n  }\n\n  legDataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    const weatherId = this.weatherList.find(\n      (entry) =>\n        entry.shortDescription == document.getElementById(\"weather\").value\n    ).id;\n    const defaultPoseSourceId = this.poseSourceList.find(\n      (entry) =>\n        entry.shortDescription ==\n        document.getElementById(\"default-pose-source\").value\n    ).id;\n    const note = document.getElementById(\"leg-note\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    //Send put request.\n    try {\n      await this.legInterface.put(\n        this.leg.id,\n        \"edit\",\n        weatherId,\n        defaultPoseSourceId,\n        note\n      );\n      this.element.querySelector(\"form button\").disabled = true;\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvTGVnRWRpdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9vdmVybGF5cy9MZWdFZGl0LmpzP2MwNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY29udHJvbC1yZWdleCAqL1xuLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbmltcG9ydCB7IERPTUdlbmVyaWMgfSBmcm9tIFwiLi4vdXRpbGl0eS9ET01HZW5lcmljLmpzXCI7XG5cbi8vU3RydWN0dXJlIGFuZCBsb2dpYyBvZiB0aGUgbGVnIGVkaXRpb24gVUkuXG5leHBvcnQgY2xhc3MgTGVnRWRpdCB7XG4gIC8vVGhpcyBjbGFzcyBpcyBiYXNlZCBvbiBhIHRlbXBsYXRlIHRoYXQgaXQgbGF0ZXIgZ29pbmcgdG8gYmUgYWRkZWQgdG8gYW5vdGhlciBET00gTm9kZS5cbiAgLy9UaGVyZWZvcmUsIG5vIERPTSByZWZlcmVuY2VzIGFyZSBrZXB0IGFzIHByb3BlcnRpZXMuXG4gIGNvbnN0cnVjdG9yKGxlZywgbGVnSW50ZXJmYWNlLCB3ZWF0aGVyTGlzdCwgcG9zZVNvdXJjZUxpc3QpIHtcbiAgICAvL1NldCBhcmd1bWVudHMgYXMgcHJvcGVydGllcy5cbiAgICB0aGlzLmxlZyA9IGxlZztcbiAgICB0aGlzLmxlZ0ludGVyZmFjZSA9IGxlZ0ludGVyZmFjZTtcbiAgICB0aGlzLndlYXRoZXJMaXN0ID0gd2VhdGhlckxpc3Q7XG4gICAgdGhpcy5wb3NlU291cmNlTGlzdCA9IHBvc2VTb3VyY2VMaXN0O1xuICAgIC8vSW1wb3J0IGFuZCBidWlsZCBsZWcgZWRpdGlvbiBub2RlLlxuICAgIGNvbnN0IHRlbXBsYXRlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXQtbGVnLXRlbXBsYXRlXCIpO1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmltcG9ydE5vZGUodGVtcGxhdGVFbC5jb250ZW50LCB0cnVlKTtcblxuICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBIRUFERVIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vU2V0IHRpdGxlLCBzdGFydCBhbmQgZW5kIHRpbWUuXG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoZWFkZXIgaDIgc3BhbjpsYXN0LW9mLXR5cGVcIikudGV4dENvbnRlbnQgPVxuICAgICAgbGVnLmlkO1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJoZWFkZXIgcDpmaXJzdC1vZi10eXBlIHNwYW46bGFzdC1vZi10eXBlXCJcbiAgICApLnRleHRDb250ZW50ID0gbmV3IERhdGUobGVnLnN0YXJ0VGltZSAqIDEwMDApLnRvSVNPU3RyaW5nKCk7XG4gICAgaWYgKGxlZy5lbmRUaW1lKSB7XG4gICAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgXCJoZWFkZXIgcDpsYXN0LW9mLXR5cGUgc3BhbjpsYXN0LW9mLXR5cGVcIlxuICAgICAgKS50ZXh0Q29udGVudCA9IG5ldyBEYXRlKGxlZy5lbmRUaW1lICogMTAwMCkudG9JU09TdHJpbmcoKTtcbiAgICB9XG5cbiAgICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT0gREFUQSBTRUNUSU9OID09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvL1JlYWNoIHRvIGxlZyBpbmZvIGRhdGEgZWxlbWVudHMuXG4gICAgY29uc3Qgd2VhdGhlclNlbGVjdCA9IHRoaXMuZWxlbWVudC5nZXRFbGVtZW50QnlJZChcIndlYXRoZXJcIik7XG4gICAgY29uc3QgZGVmYXVsdFBvc2VTb3VyY2VTZWxlY3QgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICBcImRlZmF1bHQtcG9zZS1zb3VyY2VcIlxuICAgICk7XG4gICAgY29uc3Qgbm90ZVRleHQgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsZWctbm90ZVwiKTtcbiAgICAvL1BvcHVsYXRlIHNlbGVjdHMuXG4gICAgRE9NR2VuZXJpYy5wb3B1bGF0ZVNlbGVjdChcbiAgICAgIHdlYXRoZXJTZWxlY3QsXG4gICAgICB3ZWF0aGVyTGlzdC5tYXAoKGVudHJ5KSA9PiBlbnRyeS5zaG9ydERlc2NyaXB0aW9uKVxuICAgICk7XG4gICAgRE9NR2VuZXJpYy5wb3B1bGF0ZVNlbGVjdChcbiAgICAgIGRlZmF1bHRQb3NlU291cmNlU2VsZWN0LFxuICAgICAgcG9zZVNvdXJjZUxpc3QubWFwKChlbnRyeSkgPT4gZW50cnkuc2hvcnREZXNjcmlwdGlvbilcbiAgICApO1xuICAgIC8vRm9jdXMgbWF0Y2hpbmcgb3B0aW9uIG9uIHRoZSBzZWxlY3RzIHdpdGggdGhlIHByb3BlcnRpZXMgaW4gdGhlIGxlZyBvYmplY3QuXG4gICAgY29uc3QgbWF0Y2hlZFdlYXRoZXIgPSB3ZWF0aGVyTGlzdC5maW5kKFxuICAgICAgKGVudHJ5KSA9PiBlbnRyeS5pZCA9PSBsZWcud2VhdGhlcklkXG4gICAgKTtcbiAgICBpZiAobWF0Y2hlZFdlYXRoZXIpIHtcbiAgICAgIHdlYXRoZXJTZWxlY3QudmFsdWUgPSBtYXRjaGVkV2VhdGhlci5zaG9ydERlc2NyaXB0aW9uO1xuICAgICAgRE9NR2VuZXJpYy5yZW1vdmVGaXJzdEVtcHR5T3B0aW9uKHdlYXRoZXJTZWxlY3QpO1xuICAgIH1cbiAgICBjb25zdCBtYXRjaGVkUG9zZVNvdXJjZSA9IHBvc2VTb3VyY2VMaXN0LmZpbmQoXG4gICAgICAoZW50cnkpID0+IGVudHJ5LmlkID09IGxlZy5kZWZhdWx0UG9zZVNvdXJjZUlkXG4gICAgKTtcbiAgICBpZiAobWF0Y2hlZFBvc2VTb3VyY2UpIHtcbiAgICAgIGRlZmF1bHRQb3NlU291cmNlU2VsZWN0LnZhbHVlID0gbWF0Y2hlZFBvc2VTb3VyY2Uuc2hvcnREZXNjcmlwdGlvbjtcbiAgICAgIERPTUdlbmVyaWMucmVtb3ZlRmlyc3RFbXB0eU9wdGlvbihkZWZhdWx0UG9zZVNvdXJjZVNlbGVjdCk7XG4gICAgfVxuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCBsZWcgZGF0YS5cbiAgICBub3RlVGV4dC52YWx1ZSA9IGxlZy5ub3RlO1xuICAgIC8vU2V0IGNoYW5nZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgd2VhdGhlclNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjaGFuZ2VcIixcbiAgICAgIHRoaXMubGVnRGF0YUNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIGRlZmF1bHRQb3NlU291cmNlU2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNoYW5nZVwiLFxuICAgICAgdGhpcy5sZWdEYXRhQ2hhbmdlZEhhbmRsZXIuYmluZCh0aGlzKVxuICAgICk7XG4gICAgbm90ZVRleHQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIHRoaXMubGVnRGF0YUNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpO1xuICAgIC8vUmVnaXN0ZXIgdXBkYXRlIGJ1dHRvbiBoYW5kbGVyLlxuICAgIHRoaXMuZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJmb3JtIGJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZURhdGFCdG5IYW5kbGVyLmJpbmQodGhpcykpO1xuICB9XG5cbiAgbGVnRGF0YUNoYW5nZWRIYW5kbGVyKCkge1xuICAgIC8vQWN0aXZhdGUgdXBkYXRlIGJ1dHRvbi5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uXCIpLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICBhc3luYyB1cGRhdGVEYXRhQnRuSGFuZGxlcihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgLy9HZXQgZGF0YSB0byB1cGRhdGUuXG4gICAgY29uc3Qgd2VhdGhlcklkID0gdGhpcy53ZWF0aGVyTGlzdC5maW5kKFxuICAgICAgKGVudHJ5KSA9PlxuICAgICAgICBlbnRyeS5zaG9ydERlc2NyaXB0aW9uID09IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlclwiKS52YWx1ZVxuICAgICkuaWQ7XG4gICAgY29uc3QgZGVmYXVsdFBvc2VTb3VyY2VJZCA9IHRoaXMucG9zZVNvdXJjZUxpc3QuZmluZChcbiAgICAgIChlbnRyeSkgPT5cbiAgICAgICAgZW50cnkuc2hvcnREZXNjcmlwdGlvbiA9PVxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlZmF1bHQtcG9zZS1zb3VyY2VcIikudmFsdWVcbiAgICApLmlkO1xuICAgIGNvbnN0IG5vdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZy1ub3RlXCIpLnZhbHVlLnJlcGxhY2UoL1teXFx4MDAtXFx4N0ZdL2csIFwiXCIpO1xuICAgIC8vU2VuZCBwdXQgcmVxdWVzdC5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5sZWdJbnRlcmZhY2UucHV0KFxuICAgICAgICB0aGlzLmxlZy5pZCxcbiAgICAgICAgXCJlZGl0XCIsXG4gICAgICAgIHdlYXRoZXJJZCxcbiAgICAgICAgZGVmYXVsdFBvc2VTb3VyY2VJZCxcbiAgICAgICAgbm90ZVxuICAgICAgKTtcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/overlays/LegEdit.js\n");

/***/ }),

/***/ "./src/overlays/MapConfig.js":
/*!***********************************!*\
  !*** ./src/overlays/MapConfig.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapConfig: () => (/* binding */ MapConfig)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2022 - Fraunhofer FKIE\n */\n\n//Structure and logic of the map config UI.\nclass MapConfig {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor() {\n    //Import and build map config node.\n    const templateEl = document.getElementById(\"map-config-template\");\n    this.element = document.importNode(templateEl.content, true);\n    //Get html hooks.\n    const mapUrl = this.element.getElementById(\"map-url\");\n    const mapMinZoom = this.element.getElementById(\"map-min-zoom\");\n    const mapMaxZoom = this.element.getElementById(\"map-max-zoom\");\n    //Fill input fields with current data.\n    const mapData = JSON.parse(localStorage.getItem(\"fttTileServerData\"));\n    if (mapData) {\n      mapUrl.value = mapData.url;\n      mapMinZoom.value = mapData.minZoom;\n      mapMaxZoom.value = mapData.maxZoom;\n    } else {\n      alert(\"No map configuration data in local storage.\");\n    }\n    //Set change event listeners.\n    mapUrl.addEventListener(\"input\", this.dataChangedHandler.bind(this));\n    mapMinZoom.addEventListener(\"input\", this.dataChangedHandler.bind(this));\n    mapMaxZoom.addEventListener(\"input\", this.dataChangedHandler.bind(this));\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button:first-of-type\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n    //Register reset button handler.\n    this.element\n      .querySelector(\"form button:last-of-type\")\n      .addEventListener(\"click\", this.resetDataBtnHandler.bind(this));\n  }\n\n  dataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    let mapData = {};\n    mapData.url = document.getElementById(\"map-url\").value;\n    mapData.minZoom = document.getElementById(\"map-min-zoom\").value;\n    mapData.maxZoom = document.getElementById(\"map-max-zoom\").value;\n    //Store data.\n    localStorage.setItem(\"fttTileServerData\", JSON.stringify(mapData));\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n\n  async resetDataBtnHandler(event) {\n    event.preventDefault();\n    //Create default data object.\n    const mapData = {\n      url: \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      minZoom: 0,\n      maxZoom: 19,\n    };\n    //Fill input fields with current data\n    document.getElementById(\"map-url\").value = mapData.url;\n    document.getElementById(\"map-min-zoom\").value = mapData.minZoom;\n    document.getElementById(\"map-max-zoom\").value = mapData.maxZoom;\n    //Store data.\n    localStorage.setItem(\"fttTileServerData\", JSON.stringify(mapData));\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvTWFwQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9vdmVybGF5cy9NYXBDb25maWcuanM/NzAzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIyIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9TdHJ1Y3R1cmUgYW5kIGxvZ2ljIG9mIHRoZSBtYXAgY29uZmlnIFVJLlxuZXhwb3J0IGNsYXNzIE1hcENvbmZpZyB7XG4gIC8vVGhpcyBjbGFzcyBpcyBiYXNlZCBvbiBhIHRlbXBsYXRlIHRoYXQgaXQgbGF0ZXIgZ29pbmcgdG8gYmUgYWRkZWQgdG8gYW5vdGhlciBET00gTm9kZS5cbiAgLy9UaGVyZWZvcmUsIG5vIERPTSByZWZlcmVuY2VzIGFyZSBrZXB0IGFzIHByb3BlcnRpZXMuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIC8vSW1wb3J0IGFuZCBidWlsZCBtYXAgY29uZmlnIG5vZGUuXG4gICAgY29uc3QgdGVtcGxhdGVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwLWNvbmZpZy10ZW1wbGF0ZVwiKTtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSk7XG4gICAgLy9HZXQgaHRtbCBob29rcy5cbiAgICBjb25zdCBtYXBVcmwgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXAtdXJsXCIpO1xuICAgIGNvbnN0IG1hcE1pblpvb20gPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXAtbWluLXpvb21cIik7XG4gICAgY29uc3QgbWFwTWF4Wm9vbSA9IHRoaXMuZWxlbWVudC5nZXRFbGVtZW50QnlJZChcIm1hcC1tYXgtem9vbVwiKTtcbiAgICAvL0ZpbGwgaW5wdXQgZmllbGRzIHdpdGggY3VycmVudCBkYXRhLlxuICAgIGNvbnN0IG1hcERhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZnR0VGlsZVNlcnZlckRhdGFcIikpO1xuICAgIGlmIChtYXBEYXRhKSB7XG4gICAgICBtYXBVcmwudmFsdWUgPSBtYXBEYXRhLnVybDtcbiAgICAgIG1hcE1pblpvb20udmFsdWUgPSBtYXBEYXRhLm1pblpvb207XG4gICAgICBtYXBNYXhab29tLnZhbHVlID0gbWFwRGF0YS5tYXhab29tO1xuICAgIH0gZWxzZSB7XG4gICAgICBhbGVydChcIk5vIG1hcCBjb25maWd1cmF0aW9uIGRhdGEgaW4gbG9jYWwgc3RvcmFnZS5cIik7XG4gICAgfVxuICAgIC8vU2V0IGNoYW5nZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgbWFwVXJsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB0aGlzLmRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICBtYXBNaW5ab29tLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB0aGlzLmRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICBtYXBNYXhab29tLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB0aGlzLmRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICAvL1JlZ2lzdGVyIHVwZGF0ZSBidXR0b24gaGFuZGxlci5cbiAgICB0aGlzLmVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b246Zmlyc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZURhdGFCdG5IYW5kbGVyLmJpbmQodGhpcykpO1xuICAgIC8vUmVnaXN0ZXIgcmVzZXQgYnV0dG9uIGhhbmRsZXIuXG4gICAgdGhpcy5lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uOmxhc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnJlc2V0RGF0YUJ0bkhhbmRsZXIuYmluZCh0aGlzKSk7XG4gIH1cblxuICBkYXRhQ2hhbmdlZEhhbmRsZXIoKSB7XG4gICAgLy9BY3RpdmF0ZSB1cGRhdGUgYnV0dG9uLlxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZURhdGFCdG5IYW5kbGVyKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAvL0dldCBkYXRhIHRvIHVwZGF0ZS5cbiAgICBsZXQgbWFwRGF0YSA9IHt9O1xuICAgIG1hcERhdGEudXJsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXAtdXJsXCIpLnZhbHVlO1xuICAgIG1hcERhdGEubWluWm9vbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwLW1pbi16b29tXCIpLnZhbHVlO1xuICAgIG1hcERhdGEubWF4Wm9vbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwLW1heC16b29tXCIpLnZhbHVlO1xuICAgIC8vU3RvcmUgZGF0YS5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImZ0dFRpbGVTZXJ2ZXJEYXRhXCIsIEpTT04uc3RyaW5naWZ5KG1hcERhdGEpKTtcbiAgICAvL0Rpc2FibGUgdXBkYXRlIGJ1dHRvbi5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uXCIpLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIGFzeW5jIHJlc2V0RGF0YUJ0bkhhbmRsZXIoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vQ3JlYXRlIGRlZmF1bHQgZGF0YSBvYmplY3QuXG4gICAgY29uc3QgbWFwRGF0YSA9IHtcbiAgICAgIHVybDogXCJodHRwczovL2EudGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmdcIixcbiAgICAgIG1pblpvb206IDAsXG4gICAgICBtYXhab29tOiAxOSxcbiAgICB9O1xuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCBjdXJyZW50IGRhdGFcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcC11cmxcIikudmFsdWUgPSBtYXBEYXRhLnVybDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcC1taW4tem9vbVwiKS52YWx1ZSA9IG1hcERhdGEubWluWm9vbTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcC1tYXgtem9vbVwiKS52YWx1ZSA9IG1hcERhdGEubWF4Wm9vbTtcbiAgICAvL1N0b3JlIGRhdGEuXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJmdHRUaWxlU2VydmVyRGF0YVwiLCBKU09OLnN0cmluZ2lmeShtYXBEYXRhKSk7XG4gICAgLy9EaXNhYmxlIHVwZGF0ZSBidXR0b24uXG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtIGJ1dHRvblwiKS5kaXNhYmxlZCA9IHRydWU7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/overlays/MapConfig.js\n");

/***/ }),

/***/ "./src/overlays/ReportDownload.js":
/*!****************************************!*\
  !*** ./src/overlays/ReportDownload.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReportDownload: () => (/* binding */ ReportDownload)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* eslint-disable no-control-regex */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n//Structure and logic of the report download UI.\nclass ReportDownload {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(serverInterface, testEventList) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    //Import and build leg edition node.\n    const templateEl = document.getElementById(\"report-download-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //============================ DATA SECTION ============================\n    //Get html hooks.\n    const testEventSelect = this.element.getElementById(\"report-test-event-id\");\n    const form = this.element.querySelector(\"form\");\n    //Populate select.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      testEventSelect,\n      testEventList\n        .filter((entry) => !!entry.endTime)\n        .map(\n          (entry) =>\n            entry.id +\n            \": \" +\n            new Date(entry.startTime * 1000).toISOString().split(\"T\")[0] +\n            \"-\" +\n            (entry.location || \"(no location)\")\n        )\n        .reverse()\n    );\n    //Register generate report button handler.\n    form\n      .querySelector(\"button\")\n      .addEventListener(\"click\", this.generateReportBtnHandler.bind(this));\n    //Register change handler for every select.\n    form.querySelectorAll(\"select\").forEach((select) => {\n      select.addEventListener(\"change\", this.formChangedHandler.bind(this));\n    });\n    //Register input handler for the complete form.\n    form.addEventListener(\"input\", this.formChangedHandler.bind(this));\n    //Register input handler for textareas to highlight when empty.\n    form.querySelectorAll(\"textarea\").forEach((textarea) => {\n      textarea.addEventListener(\"input\", this.checkTextareas.bind(this));\n    });\n    //Run the textarea check\n    this.checkTextareas();\n  }\n\n  checkTextareas() {\n    this.element.querySelectorAll(\"form textarea\").forEach((textarea) => {\n      if (textarea.value.match(/[^\\x00-\\x7F]/g)) {\n        textarea.classList.add(\"error\");\n      } else {\n        textarea.classList.remove(\"error\");\n      }\n    });\n  }\n\n  formChangedHandler() {\n    // Disable the get report button upon changes.\n    this.element.querySelector(\"form button:last-of-type\").disabled = true;\n    // Get the hook to the generate button\n    const generateBtn = this.element.querySelector(\"form button:first-of-type\");\n    // Check if all fields have values and update generate button status\n    if (\n      document.getElementById(\"report-tile-server\").value &&\n      document\n        .getElementById(\"report-zoom-level\")\n        .value.replace(/[^0-9]/g, \"\") &&\n      document\n        .getElementById(\"report-name\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\") &&\n      document\n        .getElementById(\"report-version\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\") &&\n      document.getElementById(\"report-test-event-id\").value &&\n      document\n        .getElementById(\"report-min-duration\")\n        .value.replace(/[^0-9.]/g, \"\") &&\n      document.getElementById(\"report-use-local-poses\").value &&\n      document\n        .getElementById(\"report-recipient-name\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\") &&\n      document\n        .getElementById(\"report-recipient-address\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\") &&\n      document\n        .getElementById(\"report-creator-name\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\") &&\n      document\n        .getElementById(\"report-creator-address\")\n        .value.replace(/[^\\x00-\\x7F]/g, \"\")\n    ) {\n      generateBtn.disabled = false;\n    } else {\n      generateBtn.disabled = true;\n    }\n  }\n\n  async generateReportBtnHandler(event) {\n    event.preventDefault();\n    // Get data to update.\n    const tileServer = document.getElementById(\"report-tile-server\").value;\n    const zoomLevel = document\n      .getElementById(\"report-zoom-level\")\n      .value.replace(/[^0-9]/g, \"\");\n    const name = document\n      .getElementById(\"report-name\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const version = document\n      .getElementById(\"report-version\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const testEventId = document\n      .getElementById(\"report-test-event-id\")\n      .value.split(\":\")[0];\n    const minDuration = document\n      .getElementById(\"report-min-duration\")\n      .value.replace(/[^0-9.]/g, \"\");\n    const useLocal = document.getElementById(\"report-use-local-poses\").value;\n    const recipientName = document\n      .getElementById(\"report-recipient-name\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const recipientAddress = document\n      .getElementById(\"report-recipient-address\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const creatorName = document\n      .getElementById(\"report-creator-name\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const creatorAddress = document\n      .getElementById(\"report-creator-address\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    // Add a loading animation.\n    const generateBtnLoadIcon = this.element.querySelector(\"form button:first-of-type i\");\n    generateBtnLoadIcon.style.display = \"block\";\n    // Send post request.\n    try {\n      const data = {\n        tile_server: tileServer,\n        zoom_level: zoomLevel,\n        report_name: name,\n        report_version: version,\n        test_event_id: testEventId,\n        min_duration: minDuration,\n        use_local_poses: useLocal,\n        recipient_name: recipientName,\n        recipient_address: recipientAddress,\n        creator_name: creatorName,\n        creator_address: creatorAddress,\n      };\n      await this.serverInterface.sendPostRequest(\"generate_report\", data);\n      this.element.querySelector(\"form button:last-of-type\").disabled = false;\n    } catch (error) {\n      alert(error.message);\n    }\n    // Remove the loading animation.\n    generateBtnLoadIcon.style.display = \"none\";\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/overlays/ReportDownload.js\n");

/***/ }),

/***/ "./src/overlays/RosConfig.js":
/*!***********************************!*\
  !*** ./src/overlays/RosConfig.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RosConfig: () => (/* binding */ RosConfig)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2022 - Fraunhofer FKIE\n */\n\n//Structure and logic of the ros config UI.\nclass RosConfig {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor() {\n    //Import and build ros config node.\n    const templateEl = document.getElementById(\"ros-config-template\");\n    this.element = document.importNode(templateEl.content, true);\n    //Get html hooks.\n    const rosUrl = this.element.getElementById(\"ros-url\");\n    //Fill input fields with current data.\n    const rosData = JSON.parse(localStorage.getItem(\"fttRosData\"));\n    if (rosData) {\n      rosUrl.value = rosData.url;\n    } else {\n      //No config found. Use default\n      rosUrl.value = `ws://${location.hostname}:9090`;\n    }\n    //Set change event listeners.\n    rosUrl.addEventListener(\"input\", this.dataChangedHandler.bind(this));\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button:first-of-type\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n    //Register reset button handler.\n    this.element\n      .querySelector(\"form button:last-of-type\")\n      .addEventListener(\"click\", this.resetDataBtnHandler.bind(this));\n  }\n\n  dataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    let rosData = {};\n    rosData.url = document.getElementById(\"ros-url\").value;\n    //Store data.\n    localStorage.setItem(\"fttRosData\", JSON.stringify(rosData));\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n\n  async resetDataBtnHandler(event) {\n    event.preventDefault();\n    //Fill input fields with default data\n    document.getElementById(\"ros-url\").value = `ws://${location.hostname}:9090`;\n    //Remove data from storage.\n    localStorage.removeItem(\"fttRosData\");\n    //Disable update button.\n    this.element.querySelector(\"form button\").disabled = true;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvUm9zQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9vdmVybGF5cy9Sb3NDb25maWcuanM/MzM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIyIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuLy9TdHJ1Y3R1cmUgYW5kIGxvZ2ljIG9mIHRoZSByb3MgY29uZmlnIFVJLlxuZXhwb3J0IGNsYXNzIFJvc0NvbmZpZyB7XG4gIC8vVGhpcyBjbGFzcyBpcyBiYXNlZCBvbiBhIHRlbXBsYXRlIHRoYXQgaXQgbGF0ZXIgZ29pbmcgdG8gYmUgYWRkZWQgdG8gYW5vdGhlciBET00gTm9kZS5cbiAgLy9UaGVyZWZvcmUsIG5vIERPTSByZWZlcmVuY2VzIGFyZSBrZXB0IGFzIHByb3BlcnRpZXMuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIC8vSW1wb3J0IGFuZCBidWlsZCByb3MgY29uZmlnIG5vZGUuXG4gICAgY29uc3QgdGVtcGxhdGVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9zLWNvbmZpZy10ZW1wbGF0ZVwiKTtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSk7XG4gICAgLy9HZXQgaHRtbCBob29rcy5cbiAgICBjb25zdCByb3NVcmwgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb3MtdXJsXCIpO1xuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCBjdXJyZW50IGRhdGEuXG4gICAgY29uc3Qgcm9zRGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJmdHRSb3NEYXRhXCIpKTtcbiAgICBpZiAocm9zRGF0YSkge1xuICAgICAgcm9zVXJsLnZhbHVlID0gcm9zRGF0YS51cmw7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vTm8gY29uZmlnIGZvdW5kLiBVc2UgZGVmYXVsdFxuICAgICAgcm9zVXJsLnZhbHVlID0gYHdzOi8vJHtsb2NhdGlvbi5ob3N0bmFtZX06OTA5MGA7XG4gICAgfVxuICAgIC8vU2V0IGNoYW5nZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgcm9zVXJsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCB0aGlzLmRhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICAvL1JlZ2lzdGVyIHVwZGF0ZSBidXR0b24gaGFuZGxlci5cbiAgICB0aGlzLmVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b246Zmlyc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZURhdGFCdG5IYW5kbGVyLmJpbmQodGhpcykpO1xuICAgIC8vUmVnaXN0ZXIgcmVzZXQgYnV0dG9uIGhhbmRsZXIuXG4gICAgdGhpcy5lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uOmxhc3Qtb2YtdHlwZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnJlc2V0RGF0YUJ0bkhhbmRsZXIuYmluZCh0aGlzKSk7XG4gIH1cblxuICBkYXRhQ2hhbmdlZEhhbmRsZXIoKSB7XG4gICAgLy9BY3RpdmF0ZSB1cGRhdGUgYnV0dG9uLlxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZURhdGFCdG5IYW5kbGVyKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAvL0dldCBkYXRhIHRvIHVwZGF0ZS5cbiAgICBsZXQgcm9zRGF0YSA9IHt9O1xuICAgIHJvc0RhdGEudXJsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb3MtdXJsXCIpLnZhbHVlO1xuICAgIC8vU3RvcmUgZGF0YS5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImZ0dFJvc0RhdGFcIiwgSlNPTi5zdHJpbmdpZnkocm9zRGF0YSkpO1xuICAgIC8vRGlzYWJsZSB1cGRhdGUgYnV0dG9uLlxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgYXN5bmMgcmVzZXREYXRhQnRuSGFuZGxlcihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgLy9GaWxsIGlucHV0IGZpZWxkcyB3aXRoIGRlZmF1bHQgZGF0YVxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9zLXVybFwiKS52YWx1ZSA9IGB3czovLyR7bG9jYXRpb24uaG9zdG5hbWV9OjkwOTBgO1xuICAgIC8vUmVtb3ZlIGRhdGEgZnJvbSBzdG9yYWdlLlxuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZnR0Um9zRGF0YVwiKTtcbiAgICAvL0Rpc2FibGUgdXBkYXRlIGJ1dHRvbi5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm0gYnV0dG9uXCIpLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/overlays/RosConfig.js\n");

/***/ }),

/***/ "./src/overlays/SegmentEdit.js":
/*!*************************************!*\
  !*** ./src/overlays/SegmentEdit.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SegmentEdit: () => (/* binding */ SegmentEdit)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* eslint-disable no-control-regex */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n//Structure and logic of the segment edition UI.\nclass SegmentEdit {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(\n    segment,\n    segmentInterface,\n    noteInterface,\n    imageInterface,\n    itoReasonList,\n    currentUser\n  ) {\n    //Set arguments as properties.\n    this.segment = segment;\n    this.segmentInterface = segmentInterface;\n    this.noteInterface = noteInterface;\n    this.imageInterface = imageInterface;\n    this.itoReasonList = itoReasonList;\n    this.currentUser = currentUser;\n    //Import and build segment edition node.\n    const templateEl = document.getElementById(\"edit-segment-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //=============================== HEADER ===============================\n    //Set title, start and end time.\n    this.element.querySelector(\"header h2 span:last-of-type\").textContent =\n      segment.id;\n    this.element.querySelector(\n      \"header p:first-of-type span:last-of-type\"\n    ).textContent = new Date(segment.startTime * 1000).toISOString();\n    if (segment.endTime) {\n      this.element.querySelector(\n        \"header p:last-of-type span:last-of-type\"\n      ).textContent = new Date(segment.endTime * 1000).toISOString();\n    }\n\n    //======================== SEGMENT DATA SECTION ========================\n    //Reach to segment info data elements.\n    const itoReasonsSelect = this.element.getElementById(\"ito-reason\");\n    const obstacleInput = this.element.getElementById(\"obstacle\");\n    const lightingInput = this.element.getElementById(\"lighting\");\n    const slopeInput = this.element.getElementById(\"slope\");\n    //Populate ito reason select.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      itoReasonsSelect,\n      itoReasonList.map((entry) => entry.shortDescription)\n    );\n    //Focus matching option in the select with the current segment ito reason.\n    const matchedItoReason = itoReasonList.find(\n      (entry) => entry.id == segment.itoReasonId\n    );\n    if (matchedItoReason) {\n      itoReasonsSelect.value = matchedItoReason.shortDescription;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(itoReasonsSelect);\n    }\n    //Fill input fields with segment data.\n    obstacleInput.value = segment.obstacle;\n    lightingInput.value = segment.lighting;\n    slopeInput.value = segment.slope;\n    //Block obstacle context input fields for non ITO segments.\n    if (segment.segmentType != \"ITO\") {\n      itoReasonsSelect.disabled = true;\n      obstacleInput.disabled = true;\n      lightingInput.disabled = true;\n      slopeInput.disabled = true;\n    }\n    //Set change event listeners.\n    itoReasonsSelect.addEventListener(\n      \"change\",\n      this.segmentDataChangedHandler.bind(this)\n    );\n    obstacleInput.addEventListener(\n      \"input\",\n      this.segmentDataChangedHandler.bind(this)\n    );\n    lightingInput.addEventListener(\n      \"input\",\n      this.segmentDataChangedHandler.bind(this)\n    );\n    slopeInput.addEventListener(\n      \"input\",\n      this.segmentDataChangedHandler.bind(this)\n    );\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n\n    //=========================== NOTES SECTION ============================\n    //Initialize variables.\n    this.noteList = null;\n    this.selectedNoteIdx = 0;\n    //Assign listener to changes in notes.\n    this.element\n      .getElementById(\"note-text\")\n      .addEventListener(\"keydown\", this.noteTextChangeHandler.bind(this));\n    //Assign listener to save button.\n    this.element\n      .getElementById(\"save-note-btn\")\n      .addEventListener(\"click\", this.saveNoteButtonHandler.bind(this));\n    //Assign listener to remove button.\n    this.element\n      .getElementById(\"remove-note-btn\")\n      .addEventListener(\"click\", this.removeNoteButtonHandler.bind(this));\n\n    //=========================== IMAGES SECTION ===========================\n    //Reach to image elements.\n    const imagesContainer = this.element.querySelector(\".current-images\");\n    //Initialize variables to hold images.\n    this.imageList = null;\n    this.newImage = null;\n    this.newImageName = null;\n    //Assign listeners to current images and upload image tabs.\n    this.element\n      .getElementById(\"current-images-tab\")\n      .addEventListener(\"click\", this.currentImagesTabClickHandler.bind(this));\n    this.element\n      .getElementById(\"upload-image-tab\")\n      .addEventListener(\"click\", this.uploadImageTabClickHandler.bind(this));\n    //Assign listener to the current images div.\n    imagesContainer.addEventListener(\n      \"focusin\",\n      this.imageFocusHandler.bind(this)\n    );\n    imagesContainer.addEventListener(\n      \"focusout\",\n      this.imageDefocusHandler.bind(this)\n    );\n    imagesContainer.addEventListener(\n      \"dblclick\",\n      this.imageDoubleClickHandler.bind(this)\n    );\n    //Assign listener to the upload image input field.\n    this.element\n      .getElementById(\"new-image\")\n      .addEventListener(\"change\", this.newImageInputHandler.bind(this));\n    //Assign listener to the submit image button.\n    this.element\n      .getElementById(\"submit-image-btn\")\n      .addEventListener(\"click\", this.submitImageBtnHandler.bind(this));\n\n    //================================ INIT ================================\n    //Call init function to execute async behavior.\n    this.init();\n  }\n\n  async init() {\n    //Get and render notes.\n    await this.renderNotes();\n    //Get and render images.\n    await this.renderImages();\n  }\n\n  segmentDataChangedHandler(event) {\n    //Prevent selection for AUTO segments.\n    if (this.segment.segmentType == \"AUTO\") {\n      event.target.value = \"\";\n      alert(\"Obstacle context data available only for ITO segments!\");\n      return;\n    }\n    //Check validity for all text inputs.\n    const invalid =\n      this.element.querySelector(\"#obstacle\").validity.patternMismatch ||\n      this.element.querySelector(\"#lighting\").validity.patternMismatch ||\n      this.element.querySelector(\"#slope\").validity.patternMismatch;\n    if (invalid) {\n      //Disable update button.\n      this.element.querySelector(\"form button\").disabled = true;\n      //Show info text.\n      this.element.querySelector(\".info-text\").style.display = \"inline\";\n    } else {\n      //Enable update button.\n      this.element.querySelector(\"form button\").disabled = false;\n      //Hide info text.\n      this.element.querySelector(\".info-text\").style.display = \"\";\n    }\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get parameters to update.\n    const itoReasonId = this.itoReasonList.find(\n      (entry) =>\n        entry.shortDescription == document.getElementById(\"ito-reason\").value\n    ).id;\n    const obstacle = document\n      .getElementById(\"obstacle\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const lighting = document\n      .getElementById(\"lighting\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const slope = document\n      .getElementById(\"slope\")\n      .value.replace(/[^\\x00-\\x7F]/g, \"\");\n    try {\n      //Send update request to server.\n      await this.segmentInterface.put(\n        this.segment.id,\n        \"edit\",\n        itoReasonId,\n        obstacle,\n        lighting,\n        slope\n      );\n      //Disable update button.\n      this.element.querySelector(\"form button\").disabled = true;\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async renderNotes() {\n    try {\n      //Get data from server.\n      this.noteList = await this.noteInterface.get(this.segment.id);\n      //Clear any previously created tabs.\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.clearChildren(this.element.querySelector(\".btn-tabs\"));\n      //Create a new tab for each note.\n      this.noteList.forEach((entry) => {\n        this.createNewNoteTab(\n          new Date(entry.secs * 1000).toString().substring(4, 10)\n        );\n      });\n      //Create tab for a potential new note.\n      this.createNewNoteTab(\"New Note\", \"\");\n      //Display the selected note (the first one by default).\n      this.element\n        .querySelector(\".btn-tabs\")\n        .children[this.selectedNoteIdx].click();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  createNewNoteTab(tabName) {\n    //Remove the new-note class from all existing tabs.\n    const tabs = this.element.querySelector(\".btn-tabs\");\n    Array.from(tabs.children).forEach((tab) => {\n      tab.classList.remove(\"new-note\");\n    });\n    //Create a new tab, assign it a name, and the new-note class\n    const newTab = document.createElement(\"button\");\n    newTab.textContent = tabName;\n    newTab.classList.add(\"new-note\");\n    //Attach the new tab to the html page\n    tabs.appendChild(newTab);\n    //Add event listener for the click on the tab\n    newTab.addEventListener(\"click\", this.noteTabClickHandler.bind(this));\n  }\n\n  noteTabClickHandler(event) {\n    //Remove the selected-tab class and any changes from all tabs.\n    const tabs = Array.from(this.element.querySelector(\".btn-tabs\").children);\n    tabs.forEach((tab) => {\n      tab.classList.remove(\"selected-tab\");\n      if (tab.textContent.slice(-1) == \"*\") {\n        tab.textContent = tab.textContent.slice(0, -1);\n      }\n      //Disable save button.\n      this.element.querySelector(\"#save-note-btn\").disabled = true;\n    });\n    //Add selected class to clicked tab.\n    event.target.classList.add(\"selected-tab\");\n    //Find and store index of selected tab.\n    this.selectedNoteIdx = tabs.indexOf(event.target);\n    //Get text area hook.\n    const textArea = this.element.querySelector(\"#note-text\");\n    if (this.selectedNoteIdx < this.noteList.length) {\n      //For existing notes:\n      //Write note in text area.\n      textArea.value = this.noteList[this.selectedNoteIdx].note;\n      //Enable the remove button.\n      this.element.querySelector(\"#remove-note-btn\").disabled = false;\n    } else {\n      //Clear text area.\n      textArea.value = \"\";\n      //Disable remove button for a new note.\n      this.element.querySelector(\"#remove-note-btn\").disabled = true;\n    }\n  }\n\n  noteTextChangeHandler() {\n    //If not already included, add * to tab name to reflect unsaved changes.\n    let selectedTab = this.element.querySelector(\".selected-tab\");\n    if (selectedTab.textContent.slice(-1) != \"*\") {\n      selectedTab.textContent += \"*\";\n    }\n    //Enable save button.\n    document.getElementById(\"save-note-btn\").disabled = false;\n  }\n\n  async saveNoteButtonHandler(event) {\n    event.preventDefault();\n    //Check if the current user is set.\n    if (!this.currentUser.id) {\n      alert(\"Please select a user to add or modify a note!\");\n      return;\n    }\n    //Reach to the text content.\n    const noteText = document.getElementById(\"note-text\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    try {\n      //Check if the note is being modified or created.\n      if (this.selectedNoteIdx < this.noteList.length) {\n        //Modified: update note.\n        await this.noteInterface.put(\n          this.noteList[this.selectedNoteIdx].id,\n          this.currentUser.id,\n          noteText\n        );\n      } else {\n        //Created: post note.\n        await this.noteInterface.post(\n          this.segment.id,\n          this.currentUser.id,\n          noteText\n        );\n      }\n      //Disable save button\n      event.target.disabled = true;\n      //Update UI.\n      await this.renderNotes();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async removeNoteButtonHandler() {\n    try {\n      //Delete selected note.\n      await this.noteInterface.delete(this.noteList[this.selectedNoteIdx].id);\n      //Update UI.\n      await this.renderNotes();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async renderImages() {\n    //Get images from server.\n    try {\n      this.imageList = await this.imageInterface.get(\n        this.segment.parentId || this.segment.id\n      );\n      //Select the container area and clear it.\n      const imagesContainer = this.element.querySelector(\".current-images\");\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.clearChildren(imagesContainer);\n      this.imageList.forEach((image) => {\n        //Create a focusable div for each image.\n        const imgDiv = document.createElement(\"div\");\n        imgDiv.tabIndex = 0;\n        //Append the image to the div.\n        _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.addImage(imgDiv, image.imageData, image.imageFilename);\n        //Append the div to the image area.\n        imagesContainer.appendChild(imgDiv);\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async currentImagesTabClickHandler(event) {\n    //Return if the tab is already selected.\n    if (event.target.classList.contains(\"selected-tab\")) {\n      return;\n    }\n    //Swap the selected tab.\n    event.target.nextElementSibling.classList.remove(\"selected-tab\");\n    event.target.classList.add(\"selected-tab\");\n    //Swap display of div content.\n    this.element.querySelector(\".upload-image\").style.display = \"none\";\n    this.element.querySelector(\".current-images\").style.display = \"\";\n    //get and render images\n    this.renderImages();\n  }\n\n  uploadImageTabClickHandler(event) {\n    //Return if the tab is already selected.\n    if (event.target.classList.contains(\"selected-tab\")) {\n      return;\n    }\n    //Check if the current user is set.\n    if (!this.currentUser.id) {\n      alert(\"Please select a user to add an image!\");\n      return;\n    }\n    //Swap the selected tab.\n    event.target.previousElementSibling.classList.remove(\"selected-tab\");\n    event.target.classList.add(\"selected-tab\");\n    //Swap display of div content.\n    this.element.querySelector(\".current-images\").style.display = \"none\";\n    this.element.querySelector(\".upload-image\").style.display = \"block\";\n  }\n\n  async removeImageBtnClickHandler(event) {\n    //Find the selected image index.\n    const selectedImageIdx = Array.from(\n      this.element.querySelector(\".current-images\").children\n    ).indexOf(event.target.closest(\"div\"));\n    //Send the delete request.\n    try {\n      await this.imageInterface.delete(this.imageList[selectedImageIdx].id);\n      //Update images display.\n      this.renderImages();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  imageFocusHandler(event) {\n    //Create a remove bubble.\n    const removeImgBubble = _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.createMaterialIconsContainer(\n      \"span\",\n      \"remove-icon-container\",\n      [\"remove_circle_outline\"]\n    );\n    //Add an event listener to it.\n    removeImgBubble.addEventListener(\n      \"click\",\n      this.removeImageBtnClickHandler.bind(this)\n    );\n    //Append it to the image div container (event target).\n    event.target.appendChild(removeImgBubble);\n  }\n\n  imageDefocusHandler(event) {\n    //Delete the remove bubble (last child) from the image div container (event target).\n    event.target.lastElementChild.remove();\n  }\n\n  imageDoubleClickHandler(event) {\n    //Check if double click was on an image.\n    if (event.target.tagName.toLowerCase() === \"img\") {\n      //Open new tab with the image.\n      const newTabWindow = open(\"\");\n      newTabWindow.document.write(event.target.outerHTML);\n      newTabWindow.document.head.appendChild(\n        document.head.querySelector(\"meta\")\n      );\n      newTabWindow.document.head.appendChild(document.createElement(\"title\"));\n      newTabWindow.document.head.querySelector(\"title\").textContent =\n        event.target.alt;\n    }\n  }\n\n  newImageInputHandler(event) {\n    //Get image data\n    const imageData = event.target.files[0];\n    this.newImageName = imageData.name.replace(/[.][^.]+$/, \"\");\n    if (imageData) {\n      //Parse data as base64 with a FileReader instance.\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(imageData);\n      //Assign the parsed data to the newImage class property.\n      fileReader.addEventListener(\"load\", (e) => {\n        this.newImage = e.target.result;\n        this.newImage = this.newImage.substring(this.newImage.indexOf(\",\") + 1);\n      });\n      document.getElementById(\"submit-image-btn\").disabled = false;\n    }\n  }\n\n  async submitImageBtnHandler(event) {\n    event.preventDefault();\n    //If a new image is available, send it to the server.\n    if (this.newImage) {\n      try {\n        await this.imageInterface.post(\n          this.segment.parentId || this.segment.id,\n          this.newImageName,\n          this.newImage,\n          `Image uploaded by ${this.currentUser.name}`\n        );\n        //Reset the newImage property and disable the button.\n        this.newImage = null;\n        event.target.disabled = true;\n        //Change to the current images tab.\n        document.getElementById(\"current-images-tab\").click();\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/overlays/SegmentEdit.js\n");

/***/ }),

/***/ "./src/overlays/ShiftCompare.js":
/*!**************************************!*\
  !*** ./src/overlays/ShiftCompare.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShiftCompare: () => (/* binding */ ShiftCompare)\n/* harmony export */ });\n/* harmony import */ var _database_interface_Segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../database_interface/Segment.js */ \"./src/database_interface/Segment.js\");\n/* harmony import */ var _database_interface_Leg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database_interface/Leg.js */ \"./src/database_interface/Leg.js\");\n/* harmony import */ var _utility_LeafletMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utility/LeafletMap.js */ \"./src/utility/LeafletMap.js\");\n/* harmony import */ var _utility_TrajectoryDistance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utility/TrajectoryDistance.js */ \"./src/utility/TrajectoryDistance.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2023 - Fraunhofer FKIE\n */\n\n\n\n\n\n\nconst markerColorList = [\n  \"Navy\",\n  \"Crimson\",\n  \"Green\",\n  \"Violet\",\n  \"Orange\",\n  \"Gold\",\n];\n\n//Structure and logic of the map config UI.\nclass ShiftCompare {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(serverInterface, compareIds) {\n    //Set arguments as properties.\n    this.serverInterface = serverInterface;\n    this.compareIds = compareIds;\n    //Import and build map config node.\n    const templateEl = document.getElementById(\"compare-template\");\n    this.element = document.importNode(templateEl.content, true);\n    //Initialize variables.\n    this.legInterface = new _database_interface_Leg_js__WEBPACK_IMPORTED_MODULE_1__.LegInterface(serverInterface);\n    this.segmentInterface = new _database_interface_Segment_js__WEBPACK_IMPORTED_MODULE_0__.SegmentInterface(serverInterface);\n    this.mapInterface = null;\n    this.compareShifts();\n  }\n\n  async compareShifts() {\n    let markerColorIdx = 0;\n    const trajectories = [];\n    //Iterate through shifts.\n    for (const shiftId of this.compareIds) {\n      //Select the marker color.\n      const markerColor = markerColorList[markerColorIdx++];\n      //Create an empty array to hold the lng-lat coordinates.\n      const trajectory = [];\n      //Get legs of each shift.\n      const legList = await this.legInterface.get(shiftId);\n      const legIds = legList.map((entry) => entry.id);\n      for (const legId of legIds) {\n        //Get segments of each leg.\n        const segmentList = await this.segmentInterface.get(legId);\n        for (const entry of segmentList.reverse()) {\n          if (!entry.parentId) {\n            //Initialize leaflet map.\n            if (!this.mapInterface) {\n              this.mapInterface = new _utility_LeafletMap_js__WEBPACK_IMPORTED_MODULE_2__.LeafletMap(\n                this.serverInterface,\n                \"compare-map\"\n              );\n              this.mapInterface.mapElement.style.display = \"block\";\n              const firstLocEntry = segmentList.find(\n                (entry) => entry.lat && entry.lng\n              );\n              this.mapInterface.leafletMap.setView(\n                [firstLocEntry.lat, firstLocEntry.lng],\n                17\n              );\n            }\n            //Create a new points layer.\n            const geoJsonData = await this.mapInterface.getAndDrawMapPoses(\n              entry.id,\n              markerColor,\n              markerColor,\n              1.0\n            );\n            //Get the lng-lat coordinates (at most every 0.5 meter).\n            geoJsonData.features.forEach((feature) => {\n              // const coords = feature.geometry.coordinates;\n              // for (const p of trajectory) {\n              //   if (distL2FromLngLat(p, coords) < 0.5) {\n              //     return;\n              //   }\n              // }\n              trajectory.push(feature.geometry.coordinates);\n            });\n          }\n        }\n      }\n      trajectories.push(trajectory);\n    }\n    //Get DTW distance between trajectories\n    const distancesDtw = Array.from({ length: trajectories.length }).map(() =>\n      Array.from({ length: trajectories.length }).fill(0)\n    );\n    for (let i = 0; i < trajectories.length - 1; i++) {\n      for (let j = i + 1; j < trajectories.length; j++) {\n        distancesDtw[i][j] = (0,_utility_TrajectoryDistance_js__WEBPACK_IMPORTED_MODULE_3__.distDtw)(\n          trajectories[i],\n          trajectories[j],\n          trajectories[0][0]\n        );\n        distancesDtw[j][i] = distancesDtw[i][j];\n      }\n    }\n    //Get ERP distance between trajectories\n    const distancesErp = Array.from({ length: trajectories.length }).map(() =>\n      Array.from({ length: trajectories.length }).fill(0)\n    );\n    for (let i = 0; i < trajectories.length - 1; i++) {\n      for (let j = i + 1; j < trajectories.length; j++) {\n        distancesErp[i][j] = (0,_utility_TrajectoryDistance_js__WEBPACK_IMPORTED_MODULE_3__.distErp)(\n          trajectories[i],\n          trajectories[j],\n          trajectories[0][0]\n        );\n        distancesErp[j][i] = distancesErp[i][j];\n      }\n    }\n    //Get Tracking distances between trajectories\n    const distancesMin = Array.from({ length: trajectories.length }).map(() =>\n      Array.from({ length: trajectories.length }).fill(0)\n    );\n    for (let i = 0; i < trajectories.length; i++) {\n      for (let j = 0; j < trajectories.length; j++) {\n        if (i == j) {\n          continue;\n        }\n        distancesMin[i][j] = (0,_utility_TrajectoryDistance_js__WEBPACK_IMPORTED_MODULE_3__.minimumDistance)(\n          trajectories[i],\n          trajectories[j]\n        );\n      }\n    }\n    //Show distances\n    const headerEl = document.querySelector(\".modal__title\");\n    let distCompEl;\n    if (trajectories.length < 3) {\n      distCompEl = this.createComparisonParagraph(0, 1, distancesMin[0][1], \"Minimum\");\n      headerEl.appendChild(distCompEl);\n      distCompEl = this.createComparisonParagraph(1, 0, distancesMin[1][0], \"Minimum\");\n      headerEl.appendChild(distCompEl);\n      distCompEl = this.createComparisonParagraph(0, 1, distancesDtw[0][1], \"DTW\");\n      headerEl.appendChild(distCompEl);\n      distCompEl = this.createComparisonParagraph(0, 1, distancesErp[0][1], \"ERP\");\n      headerEl.appendChild(distCompEl);\n    } else {\n      distCompEl = this.createComparisonTable(distancesMin, \"Min\");\n      headerEl.appendChild(distCompEl);\n      distCompEl = this.createComparisonTable(distancesDtw, \"DTW\");\n      headerEl.appendChild(distCompEl);\n      distCompEl = this.createComparisonTable(distancesErp, \"ERP\");\n      headerEl.appendChild(distCompEl);\n    }\n  }\n\n  createComparisonParagraph(sourceId, targetId, distance, type) {\n    const p = document.createElement(\"p\");\n    p.style.marginTop = \"0.5rem\";\n    p.innerHTML = `\n    <span style=\"font-weight:bold\">Shift ${this.compareIds[sourceId]} </span>\n    <span style=\"color:${markerColorList[sourceId]}\">(${markerColorList[sourceId]})</span>\n    to\n    <span style=\"font-weight:bold\">Shift ${this.compareIds[targetId]} </span>\n    <span style=\"color:${markerColorList[targetId]}\">(${markerColorList[targetId]})</span>\n    <span style=\"font-weight:bold\">${type} </span>\n    distance:\n    <span style=\"font-weight:bold\">${distance.toFixed(2)}m</span>\n    `;\n    return p;\n  }\n\n  createComparisonTable(distances, type) {\n    const table = document.createElement(\"table\");\n    table.style.marginTop = \"0.5rem\";\n    const tHead = document.createElement(\"thead\");\n    const tBody = document.createElement(\"tbody\");\n    //Header row\n    const tHeaderRow = document.createElement(\"tr\");\n    const tHeadTitle = document.createElement(\"th\");\n    tHeadTitle.textContent = `${type}`;\n    tHeaderRow.appendChild(tHeadTitle);\n    for (const [idx, shiftId] of this.compareIds.entries()) {\n      const tHeadData = document.createElement(\"th\");\n      tHeadData.textContent = `Shift ${shiftId} (${markerColorList[idx]})`;\n      tHeaderRow.appendChild(tHeadData);\n    }\n    tHead.appendChild(tHeaderRow);\n    table.appendChild(tHead);\n    //Distance value rows\n    this.compareIds.forEach((shiftId1, idx1) => {\n      const tRow = document.createElement(\"tr\");\n      const tDataLabel = document.createElement(\"th\");\n      tDataLabel.textContent = `Shift ${shiftId1}`;\n      tRow.appendChild(tDataLabel);\n      this.compareIds.forEach((shiftId2, idx2) => {\n        const tData = document.createElement(\"td\");\n        tData.textContent = distances[idx1][idx2].toFixed(2);\n        tRow.appendChild(tData);\n      });\n      tBody.appendChild(tRow);\n    });\n    table.appendChild(tBody);\n    return table;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/overlays/ShiftCompare.js\n");

/***/ }),

/***/ "./src/overlays/ShiftEdit.js":
/*!***********************************!*\
  !*** ./src/overlays/ShiftEdit.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShiftEdit: () => (/* binding */ ShiftEdit)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* eslint-disable no-control-regex */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n//Structure and logic of the shift edition UI.\nclass ShiftEdit {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(\n    shift,\n    shiftInterface,\n    performerList,\n    personnelList,\n    vehicleList\n  ) {\n    //Set arguments as properties.\n    this.shift = shift;\n    this.shiftInterface = shiftInterface;\n    this.performerList = performerList;\n    this.personnelList = personnelList;\n    this.vehicleList = vehicleList;\n    //Import and build shift edition node.\n    const templateEl = document.getElementById(\"edit-shift-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //=============================== HEADER ===============================\n    //Set title, start and end time.\n    this.element.querySelector(\"header h2 span:last-of-type\").textContent =\n      shift.id;\n    this.element.querySelector(\n      \"header p:first-of-type span:last-of-type\"\n    ).textContent = new Date(shift.startTime * 1000).toISOString();\n    if (shift.endTime) {\n      this.element.querySelector(\n        \"header p:last-of-type span:last-of-type\"\n      ).textContent = new Date(shift.endTime * 1000).toISOString();\n    }\n\n    //============================ DATA SECTION ============================\n    //Reach to shift info data elements.\n    const performerSelect = this.element.getElementById(\"performer\");\n    const testDirectorSelect = this.element.getElementById(\"test-director\");\n    const testAdminSelect = this.element.getElementById(\"test-admin\");\n    const robotOperatorSelect = this.element.getElementById(\"robot-operator\");\n    const safetyOfficerSelect = this.element.getElementById(\"safety-officer\");\n    const testIntentInput = this.element.getElementById(\"test-intent\");\n    const workspaceInput = this.element.getElementById(\"workspace\");\n    const vehicleSelect = this.element.getElementById(\"vehicle\");\n    const noteText = this.element.getElementById(\"shift-note\");\n    //Populate selects.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      performerSelect,\n      performerList.map((entry) => entry.institution)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      testDirectorSelect,\n      personnelList.map((entry) => entry.name)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      testAdminSelect,\n      personnelList.map((entry) => entry.name)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      robotOperatorSelect,\n      personnelList.map((entry) => entry.name)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      safetyOfficerSelect,\n      personnelList.map((entry) => entry.name)\n    );\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      vehicleSelect,\n      vehicleList.map((entry) => entry.shortDescription)\n    );\n    //Focus matching option on the selects with the properties in the shift object.\n    const matchedPerformer = performerList.find(\n      (entry) => entry.id == shift.performerId\n    );\n    if (matchedPerformer) {\n      performerSelect.value = matchedPerformer.institution;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(performerSelect);\n    }\n    const matchedTestDirector = personnelList.find(\n      (entry) => entry.id == shift.testDirectorId\n    );\n    if (matchedTestDirector) {\n      testDirectorSelect.value = matchedTestDirector.name;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(testDirectorSelect);\n    }\n    const matchedTestAdmin = personnelList.find(\n      (entry) => entry.id == shift.testAdministratorId\n    );\n    if (matchedTestAdmin) {\n      testAdminSelect.value = matchedTestAdmin.name;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(testAdminSelect);\n    }\n    const matchedRobotOperator = personnelList.find(\n      (entry) => entry.id == shift.robotOperatorId\n    );\n    if (matchedRobotOperator) {\n      robotOperatorSelect.value = matchedRobotOperator.name;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(robotOperatorSelect);\n    }\n    const matchedSafetyOfficer = personnelList.find(\n      (entry) => entry.id == shift.safetyOfficerId\n    );\n    if (matchedSafetyOfficer) {\n      safetyOfficerSelect.value = matchedSafetyOfficer.name;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(safetyOfficerSelect);\n    }\n    const matchedVehicle = vehicleList.find(\n      (entry) => entry.id == shift.vehicleId\n    );\n    if (matchedVehicle) {\n      vehicleSelect.value = matchedVehicle.shortDescription;\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(vehicleSelect);\n    }\n    //Fill input fields with shift data.\n    testIntentInput.value = shift.testIntent;\n    workspaceInput.value = shift.workspace;\n    noteText.value = shift.note;\n    //Set change event listeners.\n    performerSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    testDirectorSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    testAdminSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    robotOperatorSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    safetyOfficerSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    testIntentInput.addEventListener(\n      \"input\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    workspaceInput.addEventListener(\n      \"input\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    vehicleSelect.addEventListener(\n      \"change\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    noteText.addEventListener(\n      \"input\",\n      this.shiftDataChangedHandler.bind(this)\n    );\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n  }\n\n  shiftDataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    const testAdministratorId = this.personnelList.find(\n      (entry) => entry.name == document.getElementById(\"test-admin\").value\n    ).id;\n    const testDirectorId = this.personnelList.find(\n      (entry) => entry.name == document.getElementById(\"test-director\").value\n    ).id;\n    const safetyOfficerId = this.personnelList.find(\n      (entry) => entry.name == document.getElementById(\"safety-officer\").value\n    ).id;\n    const robotOperatorId = this.personnelList.find(\n      (entry) => entry.name == document.getElementById(\"robot-operator\").value\n    ).id;\n    const performer = this.performerList.find(\n      (entry) => entry.institution == document.getElementById(\"performer\").value\n    ).id;\n    const testIntent = document.getElementById(\"test-intent\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const workspace = document.getElementById(\"workspace\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const vehicleId = this.vehicleList.find(\n      (entry) =>\n        entry.shortDescription == document.getElementById(\"vehicle\").value\n    ).id;\n    const note = document.getElementById(\"shift-note\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    //Send put request.\n    try {\n      await this.shiftInterface.put(\n        this.shift.id,\n        \"edit\",\n        testAdministratorId,\n        testDirectorId,\n        safetyOfficerId,\n        robotOperatorId,\n        performer,\n        testIntent,\n        workspace,\n        vehicleId,\n        note\n      );\n      this.element.querySelector(\"form button\").disabled = true;\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/overlays/ShiftEdit.js\n");

/***/ }),

/***/ "./src/overlays/TestEventEdit.js":
/*!***************************************!*\
  !*** ./src/overlays/TestEventEdit.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TestEventEdit: () => (/* binding */ TestEventEdit)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/* harmony import */ var _utility_TimeZone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utility/TimeZone.js */ \"./src/utility/TimeZone.js\");\n/* eslint-disable no-control-regex */\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n\n//Structure and logic of the test event edition UI.\nclass TestEventEdit {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(testEvent, testEventInterface) {\n    //Set arguments as properties.\n    this.testEvent = testEvent;\n    this.testEventInterface = testEventInterface;\n    //Import and build test event edition node.\n    const templateEl = document.getElementById(\"edit-test-event-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //=============================== HEADER ===============================\n    //Set title, start and end time.\n    this.element.querySelector(\"header h2 span:last-of-type\").textContent =\n      testEvent.id;\n    this.element.querySelector(\n      \"header p:first-of-type span:last-of-type\"\n    ).textContent = new Date(testEvent.startTime * 1000).toISOString();\n    if (testEvent.endTime) {\n      this.element.querySelector(\n        \"header p:last-of-type span:last-of-type\"\n      ).textContent = new Date(testEvent.endTime * 1000).toISOString();\n    }\n\n    //============================ DATA SECTION ============================\n    //Reach to test event info data elements.\n    const locationInput = this.element.getElementById(\"location\");\n    const versionInput = this.element.getElementById(\"version\");\n    const timeZoneSelect = this.element.getElementById(\"time-zone\");\n    const noteText = this.element.getElementById(\"test-event-note\");\n    //Populate time zone select.\n    const timeZoneList = _utility_TimeZone_js__WEBPACK_IMPORTED_MODULE_1__.timeZoneUTC.map((timeZone) => timeZone.label);\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(timeZoneSelect, timeZoneList);\n    //Focus matching option in the select with the time zone in the test event object.\n    const matchedTimeZoneIdx = timeZoneList.findIndex(\n      (entry) => entry == testEvent.timeZone\n    );\n    if (matchedTimeZoneIdx > -1) {\n      timeZoneSelect.value = timeZoneList[matchedTimeZoneIdx];\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(timeZoneSelect);\n    }\n    //Fill input fields with test event data.\n    locationInput.value = testEvent.location;\n    versionInput.value = testEvent.version;\n    noteText.value = testEvent.note;\n    //Set change event listeners.\n    locationInput.addEventListener(\n      \"input\",\n      this.testEventDataChangedHandler.bind(this)\n    );\n    versionInput.addEventListener(\n      \"input\",\n      this.testEventDataChangedHandler.bind(this)\n    );\n    timeZoneSelect.addEventListener(\n      \"change\",\n      this.testEventDataChangedHandler.bind(this)\n    );\n    noteText.addEventListener(\n      \"input\",\n      this.testEventDataChangedHandler.bind(this)\n    );\n    //Register update button handler.\n    this.element\n      .querySelector(\"form button\")\n      .addEventListener(\"click\", this.updateDataBtnHandler.bind(this));\n  }\n\n  testEventDataChangedHandler() {\n    //Activate update button.\n    this.element.querySelector(\"form button\").disabled = false;\n  }\n\n  async updateDataBtnHandler(event) {\n    event.preventDefault();\n    //Get data to update.\n    const location = document.getElementById(\"location\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const version = document.getElementById(\"version\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    const timeZone = document.getElementById(\"time-zone\").value;\n    const note = document.getElementById(\"test-event-note\").value.replace(/[^\\x00-\\x7F]/g, \"\");\n    //Send put request.\n    try {\n      await this.testEventInterface.put(\n        this.testEvent.id,\n        \"edit\",\n        location,\n        version,\n        timeZone,\n        note\n      );\n      this.element.querySelector(\"form button\").disabled = true;\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvVGVzdEV2ZW50RWRpdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy9vdmVybGF5cy9UZXN0RXZlbnRFZGl0LmpzPzA3OTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY29udHJvbC1yZWdleCAqL1xuLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbmltcG9ydCB7IERPTUdlbmVyaWMgfSBmcm9tIFwiLi4vdXRpbGl0eS9ET01HZW5lcmljLmpzXCI7XG5pbXBvcnQgeyB0aW1lWm9uZVVUQyB9IGZyb20gXCIuLi91dGlsaXR5L1RpbWVab25lLmpzXCI7XG5cbi8vU3RydWN0dXJlIGFuZCBsb2dpYyBvZiB0aGUgdGVzdCBldmVudCBlZGl0aW9uIFVJLlxuZXhwb3J0IGNsYXNzIFRlc3RFdmVudEVkaXQge1xuICAvL1RoaXMgY2xhc3MgaXMgYmFzZWQgb24gYSB0ZW1wbGF0ZSB0aGF0IGl0IGxhdGVyIGdvaW5nIHRvIGJlIGFkZGVkIHRvIGFub3RoZXIgRE9NIE5vZGUuXG4gIC8vVGhlcmVmb3JlLCBubyBET00gcmVmZXJlbmNlcyBhcmUga2VwdCBhcyBwcm9wZXJ0aWVzLlxuICBjb25zdHJ1Y3Rvcih0ZXN0RXZlbnQsIHRlc3RFdmVudEludGVyZmFjZSkge1xuICAgIC8vU2V0IGFyZ3VtZW50cyBhcyBwcm9wZXJ0aWVzLlxuICAgIHRoaXMudGVzdEV2ZW50ID0gdGVzdEV2ZW50O1xuICAgIHRoaXMudGVzdEV2ZW50SW50ZXJmYWNlID0gdGVzdEV2ZW50SW50ZXJmYWNlO1xuICAgIC8vSW1wb3J0IGFuZCBidWlsZCB0ZXN0IGV2ZW50IGVkaXRpb24gbm9kZS5cbiAgICBjb25zdCB0ZW1wbGF0ZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlZGl0LXRlc3QtZXZlbnQtdGVtcGxhdGVcIik7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0ZW1wbGF0ZUVsLmNvbnRlbnQsIHRydWUpO1xuXG4gICAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEhFQURFUiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy9TZXQgdGl0bGUsIHN0YXJ0IGFuZCBlbmQgdGltZS5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcImhlYWRlciBoMiBzcGFuOmxhc3Qtb2YtdHlwZVwiKS50ZXh0Q29udGVudCA9XG4gICAgICB0ZXN0RXZlbnQuaWQ7XG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcImhlYWRlciBwOmZpcnN0LW9mLXR5cGUgc3BhbjpsYXN0LW9mLXR5cGVcIlxuICAgICkudGV4dENvbnRlbnQgPSBuZXcgRGF0ZSh0ZXN0RXZlbnQuc3RhcnRUaW1lICogMTAwMCkudG9JU09TdHJpbmcoKTtcbiAgICBpZiAodGVzdEV2ZW50LmVuZFRpbWUpIHtcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICBcImhlYWRlciBwOmxhc3Qtb2YtdHlwZSBzcGFuOmxhc3Qtb2YtdHlwZVwiXG4gICAgICApLnRleHRDb250ZW50ID0gbmV3IERhdGUodGVzdEV2ZW50LmVuZFRpbWUgKiAxMDAwKS50b0lTT1N0cmluZygpO1xuICAgIH1cblxuICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PSBEQVRBIFNFQ1RJT04gPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vUmVhY2ggdG8gdGVzdCBldmVudCBpbmZvIGRhdGEgZWxlbWVudHMuXG4gICAgY29uc3QgbG9jYXRpb25JbnB1dCA9IHRoaXMuZWxlbWVudC5nZXRFbGVtZW50QnlJZChcImxvY2F0aW9uXCIpO1xuICAgIGNvbnN0IHZlcnNpb25JbnB1dCA9IHRoaXMuZWxlbWVudC5nZXRFbGVtZW50QnlJZChcInZlcnNpb25cIik7XG4gICAgY29uc3QgdGltZVpvbmVTZWxlY3QgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aW1lLXpvbmVcIik7XG4gICAgY29uc3Qgbm90ZVRleHQgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0LWV2ZW50LW5vdGVcIik7XG4gICAgLy9Qb3B1bGF0ZSB0aW1lIHpvbmUgc2VsZWN0LlxuICAgIGNvbnN0IHRpbWVab25lTGlzdCA9IHRpbWVab25lVVRDLm1hcCgodGltZVpvbmUpID0+IHRpbWVab25lLmxhYmVsKTtcbiAgICBET01HZW5lcmljLnBvcHVsYXRlU2VsZWN0KHRpbWVab25lU2VsZWN0LCB0aW1lWm9uZUxpc3QpO1xuICAgIC8vRm9jdXMgbWF0Y2hpbmcgb3B0aW9uIGluIHRoZSBzZWxlY3Qgd2l0aCB0aGUgdGltZSB6b25lIGluIHRoZSB0ZXN0IGV2ZW50IG9iamVjdC5cbiAgICBjb25zdCBtYXRjaGVkVGltZVpvbmVJZHggPSB0aW1lWm9uZUxpc3QuZmluZEluZGV4KFxuICAgICAgKGVudHJ5KSA9PiBlbnRyeSA9PSB0ZXN0RXZlbnQudGltZVpvbmVcbiAgICApO1xuICAgIGlmIChtYXRjaGVkVGltZVpvbmVJZHggPiAtMSkge1xuICAgICAgdGltZVpvbmVTZWxlY3QudmFsdWUgPSB0aW1lWm9uZUxpc3RbbWF0Y2hlZFRpbWVab25lSWR4XTtcbiAgICAgIERPTUdlbmVyaWMucmVtb3ZlRmlyc3RFbXB0eU9wdGlvbih0aW1lWm9uZVNlbGVjdCk7XG4gICAgfVxuICAgIC8vRmlsbCBpbnB1dCBmaWVsZHMgd2l0aCB0ZXN0IGV2ZW50IGRhdGEuXG4gICAgbG9jYXRpb25JbnB1dC52YWx1ZSA9IHRlc3RFdmVudC5sb2NhdGlvbjtcbiAgICB2ZXJzaW9uSW5wdXQudmFsdWUgPSB0ZXN0RXZlbnQudmVyc2lvbjtcbiAgICBub3RlVGV4dC52YWx1ZSA9IHRlc3RFdmVudC5ub3RlO1xuICAgIC8vU2V0IGNoYW5nZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgbG9jYXRpb25JbnB1dC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJpbnB1dFwiLFxuICAgICAgdGhpcy50ZXN0RXZlbnREYXRhQ2hhbmdlZEhhbmRsZXIuYmluZCh0aGlzKVxuICAgICk7XG4gICAgdmVyc2lvbklucHV0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImlucHV0XCIsXG4gICAgICB0aGlzLnRlc3RFdmVudERhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpXG4gICAgKTtcbiAgICB0aW1lWm9uZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjaGFuZ2VcIixcbiAgICAgIHRoaXMudGVzdEV2ZW50RGF0YUNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcylcbiAgICApO1xuICAgIG5vdGVUZXh0LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImlucHV0XCIsXG4gICAgICB0aGlzLnRlc3RFdmVudERhdGFDaGFuZ2VkSGFuZGxlci5iaW5kKHRoaXMpXG4gICAgKTtcbiAgICAvL1JlZ2lzdGVyIHVwZGF0ZSBidXR0b24gaGFuZGxlci5cbiAgICB0aGlzLmVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy51cGRhdGVEYXRhQnRuSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIHRlc3RFdmVudERhdGFDaGFuZ2VkSGFuZGxlcigpIHtcbiAgICAvL0FjdGl2YXRlIHVwZGF0ZSBidXR0b24uXG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtIGJ1dHRvblwiKS5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgYXN5bmMgdXBkYXRlRGF0YUJ0bkhhbmRsZXIoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vR2V0IGRhdGEgdG8gdXBkYXRlLlxuICAgIGNvbnN0IGxvY2F0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2NhdGlvblwiKS52YWx1ZS5yZXBsYWNlKC9bXlxceDAwLVxceDdGXS9nLCBcIlwiKTtcbiAgICBjb25zdCB2ZXJzaW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2ZXJzaW9uXCIpLnZhbHVlLnJlcGxhY2UoL1teXFx4MDAtXFx4N0ZdL2csIFwiXCIpO1xuICAgIGNvbnN0IHRpbWVab25lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aW1lLXpvbmVcIikudmFsdWU7XG4gICAgY29uc3Qgbm90ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdC1ldmVudC1ub3RlXCIpLnZhbHVlLnJlcGxhY2UoL1teXFx4MDAtXFx4N0ZdL2csIFwiXCIpO1xuICAgIC8vU2VuZCBwdXQgcmVxdWVzdC5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy50ZXN0RXZlbnRJbnRlcmZhY2UucHV0KFxuICAgICAgICB0aGlzLnRlc3RFdmVudC5pZCxcbiAgICAgICAgXCJlZGl0XCIsXG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICB2ZXJzaW9uLFxuICAgICAgICB0aW1lWm9uZSxcbiAgICAgICAgbm90ZVxuICAgICAgKTtcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybSBidXR0b25cIikuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/overlays/TestEventEdit.js\n");

/***/ }),

/***/ "./src/overlays/UserSelect.js":
/*!************************************!*\
  !*** ./src/overlays/UserSelect.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserSelect: () => (/* binding */ UserSelect)\n/* harmony export */ });\n/* harmony import */ var _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utility/DOMGeneric.js */ \"./src/utility/DOMGeneric.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n\n\n//Structure and logic of the user select UI.\nclass UserSelect {\n  //This class is based on a template that it later going to be added to another DOM Node.\n  //Therefore, no DOM references are kept as properties.\n  constructor(currentUser, personnelList) {\n    //Set arguments as properties.\n    this.currentUser = currentUser;\n    this.personnelList = personnelList;\n    //Import and build user select node.\n    const templateEl = document.getElementById(\"select-user-template\");\n    this.element = document.importNode(templateEl.content, true);\n\n    //============================ DATA SECTION ============================\n    //Reach to user select.\n    const userSelect = this.element.getElementById(\"user\");\n    //Populate select.\n    _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.populateSelect(\n      userSelect,\n      personnelList.map(\n        (entry) => `${entry.id}.- ${entry.name} - ${entry.institution}`\n      )\n    );\n    //Focus matching option on the select with the current user.\n    const matchedUserIdx = personnelList.findIndex(\n      (entry) => entry.id == currentUser.id\n    );\n    if (matchedUserIdx > -1) {\n      _utility_DOMGeneric_js__WEBPACK_IMPORTED_MODULE_0__.DOMGeneric.removeFirstEmptyOption(userSelect);\n      userSelect.value = userSelect.children[matchedUserIdx].value;\n    }\n    //Set change event listeners.\n    userSelect.addEventListener(\"change\", this.userChangedHandler.bind(this));\n  }\n\n  userChangedHandler() {\n    //Get select value.\n    const selectedUser = document.getElementById(\"user\").value;\n    //Find the entry in the personnel list and assign their values to the current user object.\n    Object.assign(\n      this.currentUser,\n      this.personnelList.find(\n        (entry) =>\n          selectedUser === `${entry.id}.- ${entry.name} - ${entry.institution}`\n      )\n    );\n    document.getElementById(\"modal-close-btn\").click();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvb3ZlcmxheXMvVXNlclNlbGVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdHRfd2ViYXBwLy4vc3JjL292ZXJsYXlzL1VzZXJTZWxlY3QuanM/NGU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhdXRob3IgQ2FybG9zIFRhbXBpZXIgQ290b3JhcyAtIGNhcmxvcy50YW1waWVyLmNvdG9yYXNAZmtpZS5mcmF1bmhvZmVyLmRlXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gRnJhdW5ob2ZlciBGS0lFXG4gKi9cblxuaW1wb3J0IHsgRE9NR2VuZXJpYyB9IGZyb20gXCIuLi91dGlsaXR5L0RPTUdlbmVyaWMuanNcIjtcblxuLy9TdHJ1Y3R1cmUgYW5kIGxvZ2ljIG9mIHRoZSB1c2VyIHNlbGVjdCBVSS5cbmV4cG9ydCBjbGFzcyBVc2VyU2VsZWN0IHtcbiAgLy9UaGlzIGNsYXNzIGlzIGJhc2VkIG9uIGEgdGVtcGxhdGUgdGhhdCBpdCBsYXRlciBnb2luZyB0byBiZSBhZGRlZCB0byBhbm90aGVyIERPTSBOb2RlLlxuICAvL1RoZXJlZm9yZSwgbm8gRE9NIHJlZmVyZW5jZXMgYXJlIGtlcHQgYXMgcHJvcGVydGllcy5cbiAgY29uc3RydWN0b3IoY3VycmVudFVzZXIsIHBlcnNvbm5lbExpc3QpIHtcbiAgICAvL1NldCBhcmd1bWVudHMgYXMgcHJvcGVydGllcy5cbiAgICB0aGlzLmN1cnJlbnRVc2VyID0gY3VycmVudFVzZXI7XG4gICAgdGhpcy5wZXJzb25uZWxMaXN0ID0gcGVyc29ubmVsTGlzdDtcbiAgICAvL0ltcG9ydCBhbmQgYnVpbGQgdXNlciBzZWxlY3Qgbm9kZS5cbiAgICBjb25zdCB0ZW1wbGF0ZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWxlY3QtdXNlci10ZW1wbGF0ZVwiKTtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSk7XG5cbiAgICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT0gREFUQSBTRUNUSU9OID09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvL1JlYWNoIHRvIHVzZXIgc2VsZWN0LlxuICAgIGNvbnN0IHVzZXJTZWxlY3QgPSB0aGlzLmVsZW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyXCIpO1xuICAgIC8vUG9wdWxhdGUgc2VsZWN0LlxuICAgIERPTUdlbmVyaWMucG9wdWxhdGVTZWxlY3QoXG4gICAgICB1c2VyU2VsZWN0LFxuICAgICAgcGVyc29ubmVsTGlzdC5tYXAoXG4gICAgICAgIChlbnRyeSkgPT4gYCR7ZW50cnkuaWR9Li0gJHtlbnRyeS5uYW1lfSAtICR7ZW50cnkuaW5zdGl0dXRpb259YFxuICAgICAgKVxuICAgICk7XG4gICAgLy9Gb2N1cyBtYXRjaGluZyBvcHRpb24gb24gdGhlIHNlbGVjdCB3aXRoIHRoZSBjdXJyZW50IHVzZXIuXG4gICAgY29uc3QgbWF0Y2hlZFVzZXJJZHggPSBwZXJzb25uZWxMaXN0LmZpbmRJbmRleChcbiAgICAgIChlbnRyeSkgPT4gZW50cnkuaWQgPT0gY3VycmVudFVzZXIuaWRcbiAgICApO1xuICAgIGlmIChtYXRjaGVkVXNlcklkeCA+IC0xKSB7XG4gICAgICBET01HZW5lcmljLnJlbW92ZUZpcnN0RW1wdHlPcHRpb24odXNlclNlbGVjdCk7XG4gICAgICB1c2VyU2VsZWN0LnZhbHVlID0gdXNlclNlbGVjdC5jaGlsZHJlblttYXRjaGVkVXNlcklkeF0udmFsdWU7XG4gICAgfVxuICAgIC8vU2V0IGNoYW5nZSBldmVudCBsaXN0ZW5lcnMuXG4gICAgdXNlclNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIHRoaXMudXNlckNoYW5nZWRIYW5kbGVyLmJpbmQodGhpcykpO1xuICB9XG5cbiAgdXNlckNoYW5nZWRIYW5kbGVyKCkge1xuICAgIC8vR2V0IHNlbGVjdCB2YWx1ZS5cbiAgICBjb25zdCBzZWxlY3RlZFVzZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJcIikudmFsdWU7XG4gICAgLy9GaW5kIHRoZSBlbnRyeSBpbiB0aGUgcGVyc29ubmVsIGxpc3QgYW5kIGFzc2lnbiB0aGVpciB2YWx1ZXMgdG8gdGhlIGN1cnJlbnQgdXNlciBvYmplY3QuXG4gICAgT2JqZWN0LmFzc2lnbihcbiAgICAgIHRoaXMuY3VycmVudFVzZXIsXG4gICAgICB0aGlzLnBlcnNvbm5lbExpc3QuZmluZChcbiAgICAgICAgKGVudHJ5KSA9PlxuICAgICAgICAgIHNlbGVjdGVkVXNlciA9PT0gYCR7ZW50cnkuaWR9Li0gJHtlbnRyeS5uYW1lfSAtICR7ZW50cnkuaW5zdGl0dXRpb259YFxuICAgICAgKVxuICAgICk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbC1jbG9zZS1idG5cIikuY2xpY2soKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/overlays/UserSelect.js\n");

/***/ }),

/***/ "./src/utility/ConfirmationModal.js":
/*!******************************************!*\
  !*** ./src/utility/ConfirmationModal.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfirmationModal: () => (/* binding */ ConfirmationModal)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Common class for displaying overlays.\nclass ConfirmationModal {\n  constructor(title, htmlMessage, fallbackText, confirmCallbackFunction) {\n    this.fallbackText = fallbackText;\n    this.visible = false;\n    //Import and build modal node.\n    const modalTemplateEl = document.getElementById(\n      \"confirmation-modal-template\"\n    );\n    const modalElements = document.importNode(modalTemplateEl.content, true);\n    //Write message to modal.\n    this.modalElement = modalElements.querySelector(\".modal\");\n    this.modalElement.querySelector(\".modal__title\").firstElementChild.innerHTML = title;\n    this.modalElement.querySelector(\"p\").innerHTML = htmlMessage;\n    //Select modal element and assign transitionend listener to close it\n    this.modalElement.addEventListener(\"transitionend\", this.close.bind(this));\n    //Select backdrop and assign click listener to close it.\n    this.backdropElement = modalElements.querySelector(\".backdrop\");\n    this.backdropElement.addEventListener(\"click\", this.hide.bind(this));\n    //Select confirm button and assign click listener to execute the callback (then hide the modal).\n    modalElements\n      .getElementById(\"modal-confirm-btn\")\n      .addEventListener(\"click\", () => {\n        confirmCallbackFunction();\n        this.hide();\n      });\n    //Select close button and assign click listener to close it.\n    modalElements\n      .getElementById(\"modal-cancel-btn\")\n      .addEventListener(\"click\", this.hide.bind(this));\n  }\n\n  show() {\n    //Check template support\n    if (\"content\" in document.createElement(\"template\")) {\n      //Render modal and backdrop\n      document.body.insertAdjacentElement(\"afterbegin\", this.modalElement);\n      document.body.insertAdjacentElement(\"afterbegin\", this.backdropElement);\n      //scroll page to align with the top of the modal\n      this.modalElement.scrollIntoView({ behavior: \"smooth\" });\n      //Record visibility status\n      this.visible = true;\n      //Add show class to make visible\n      this.modalElement.classList.add(\"show\");\n    } else {\n      //Alert fallback text\n      alert(this.fallbackText);\n    }\n  }\n\n  hide() {\n    //Record visibility status\n    this.visible = false;\n    //Remove show class to make it disappear\n    this.modalElement.classList.remove(\"show\");\n  }\n\n  close() {\n    //Workaround to prevent \"transitionend\" trigger when showing\n    if (this.visible) {\n      return;\n    }\n    if (this.modalElement) {\n      //Delete modal and backdrop\n      document.body.removeChild(this.modalElement);\n      document.body.removeChild(this.backdropElement);\n      this.modalElement = null;\n      this.backdropElement = null;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS9Db25maXJtYXRpb25Nb2RhbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvdXRpbGl0eS9Db25maXJtYXRpb25Nb2RhbC5qcz81MjA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vL0NvbW1vbiBjbGFzcyBmb3IgZGlzcGxheWluZyBvdmVybGF5cy5cbmV4cG9ydCBjbGFzcyBDb25maXJtYXRpb25Nb2RhbCB7XG4gIGNvbnN0cnVjdG9yKHRpdGxlLCBodG1sTWVzc2FnZSwgZmFsbGJhY2tUZXh0LCBjb25maXJtQ2FsbGJhY2tGdW5jdGlvbikge1xuICAgIHRoaXMuZmFsbGJhY2tUZXh0ID0gZmFsbGJhY2tUZXh0O1xuICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgIC8vSW1wb3J0IGFuZCBidWlsZCBtb2RhbCBub2RlLlxuICAgIGNvbnN0IG1vZGFsVGVtcGxhdGVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICAgXCJjb25maXJtYXRpb24tbW9kYWwtdGVtcGxhdGVcIlxuICAgICk7XG4gICAgY29uc3QgbW9kYWxFbGVtZW50cyA9IGRvY3VtZW50LmltcG9ydE5vZGUobW9kYWxUZW1wbGF0ZUVsLmNvbnRlbnQsIHRydWUpO1xuICAgIC8vV3JpdGUgbWVzc2FnZSB0byBtb2RhbC5cbiAgICB0aGlzLm1vZGFsRWxlbWVudCA9IG1vZGFsRWxlbWVudHMucXVlcnlTZWxlY3RvcihcIi5tb2RhbFwiKTtcbiAgICB0aGlzLm1vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX190aXRsZVwiKS5maXJzdEVsZW1lbnRDaGlsZC5pbm5lckhUTUwgPSB0aXRsZTtcbiAgICB0aGlzLm1vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwicFwiKS5pbm5lckhUTUwgPSBodG1sTWVzc2FnZTtcbiAgICAvL1NlbGVjdCBtb2RhbCBlbGVtZW50IGFuZCBhc3NpZ24gdHJhbnNpdGlvbmVuZCBsaXN0ZW5lciB0byBjbG9zZSBpdFxuICAgIHRoaXMubW9kYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIHRoaXMuY2xvc2UuYmluZCh0aGlzKSk7XG4gICAgLy9TZWxlY3QgYmFja2Ryb3AgYW5kIGFzc2lnbiBjbGljayBsaXN0ZW5lciB0byBjbG9zZSBpdC5cbiAgICB0aGlzLmJhY2tkcm9wRWxlbWVudCA9IG1vZGFsRWxlbWVudHMucXVlcnlTZWxlY3RvcihcIi5iYWNrZHJvcFwiKTtcbiAgICB0aGlzLmJhY2tkcm9wRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oaWRlLmJpbmQodGhpcykpO1xuICAgIC8vU2VsZWN0IGNvbmZpcm0gYnV0dG9uIGFuZCBhc3NpZ24gY2xpY2sgbGlzdGVuZXIgdG8gZXhlY3V0ZSB0aGUgY2FsbGJhY2sgKHRoZW4gaGlkZSB0aGUgbW9kYWwpLlxuICAgIG1vZGFsRWxlbWVudHNcbiAgICAgIC5nZXRFbGVtZW50QnlJZChcIm1vZGFsLWNvbmZpcm0tYnRuXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uZmlybUNhbGxiYWNrRnVuY3Rpb24oKTtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICB9KTtcbiAgICAvL1NlbGVjdCBjbG9zZSBidXR0b24gYW5kIGFzc2lnbiBjbGljayBsaXN0ZW5lciB0byBjbG9zZSBpdC5cbiAgICBtb2RhbEVsZW1lbnRzXG4gICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbC1jYW5jZWwtYnRuXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGlkZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIHNob3coKSB7XG4gICAgLy9DaGVjayB0ZW1wbGF0ZSBzdXBwb3J0XG4gICAgaWYgKFwiY29udGVudFwiIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKSkge1xuICAgICAgLy9SZW5kZXIgbW9kYWwgYW5kIGJhY2tkcm9wXG4gICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIiwgdGhpcy5tb2RhbEVsZW1lbnQpO1xuICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmJlZ2luXCIsIHRoaXMuYmFja2Ryb3BFbGVtZW50KTtcbiAgICAgIC8vc2Nyb2xsIHBhZ2UgdG8gYWxpZ24gd2l0aCB0aGUgdG9wIG9mIHRoZSBtb2RhbFxuICAgICAgdGhpcy5tb2RhbEVsZW1lbnQuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KTtcbiAgICAgIC8vUmVjb3JkIHZpc2liaWxpdHkgc3RhdHVzXG4gICAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xuICAgICAgLy9BZGQgc2hvdyBjbGFzcyB0byBtYWtlIHZpc2libGVcbiAgICAgIHRoaXMubW9kYWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvL0FsZXJ0IGZhbGxiYWNrIHRleHRcbiAgICAgIGFsZXJ0KHRoaXMuZmFsbGJhY2tUZXh0KTtcbiAgICB9XG4gIH1cblxuICBoaWRlKCkge1xuICAgIC8vUmVjb3JkIHZpc2liaWxpdHkgc3RhdHVzXG4gICAgdGhpcy52aXNpYmxlID0gZmFsc2U7XG4gICAgLy9SZW1vdmUgc2hvdyBjbGFzcyB0byBtYWtlIGl0IGRpc2FwcGVhclxuICAgIHRoaXMubW9kYWxFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgLy9Xb3JrYXJvdW5kIHRvIHByZXZlbnQgXCJ0cmFuc2l0aW9uZW5kXCIgdHJpZ2dlciB3aGVuIHNob3dpbmdcbiAgICBpZiAodGhpcy52aXNpYmxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0aGlzLm1vZGFsRWxlbWVudCkge1xuICAgICAgLy9EZWxldGUgbW9kYWwgYW5kIGJhY2tkcm9wXG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMubW9kYWxFbGVtZW50KTtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5iYWNrZHJvcEVsZW1lbnQpO1xuICAgICAgdGhpcy5tb2RhbEVsZW1lbnQgPSBudWxsO1xuICAgICAgdGhpcy5iYWNrZHJvcEVsZW1lbnQgPSBudWxsO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utility/ConfirmationModal.js\n");

/***/ }),

/***/ "./src/utility/DOMGeneric.js":
/*!***********************************!*\
  !*** ./src/utility/DOMGeneric.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMGeneric: () => (/* binding */ DOMGeneric)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//DOMGeneric class for wrapping common interactions with the DOM.\nclass DOMGeneric {\n  static clearChildren(elementRef) {\n    //Remove all html content from the referenced element.\n    elementRef.innerHTML = \"\";\n  }\n\n  static addOption(selectRef, value, elementClass = null) {\n    //Create and add an option to a select, with an optional html class.\n    let opt = document.createElement(\"option\");\n    opt.value = value;\n    opt.innerText = value;\n    if (elementClass) {\n      opt.classList.add(elementClass);\n    }\n    selectRef.appendChild(opt);\n  }\n\n  static removeFirstEmptyOption(selectRef) {\n    //If the first option of a select is empty, remove it.\n    if (selectRef.firstChild.value === \"\") {\n      selectRef.removeChild(selectRef.firstChild);\n    }\n  }\n\n  static populateSelect(selectRef, list, classList = null) {\n    //Add options from a list to a select, with optional classes.\n    //Also adds an empty option at the top.\n    DOMGeneric.clearChildren(selectRef);\n    DOMGeneric.addOption(selectRef, \"\");\n    for (let i = 0; i < list.length; i++) {\n      DOMGeneric.addOption(selectRef, list[i], classList && classList[i]);\n    }\n  }\n\n  static addRow(tableRef, dataList) {\n    //Add a row to a table body with the contents in the dataList array.\n    const newRow = tableRef.insertRow(0);\n    for (const value of dataList) {\n      const newCell = newRow.insertCell();\n      const newText = document.createTextNode(value);\n      newCell.appendChild(newText);\n    }\n  }\n\n  static populateTable(tableRef, dataMatrix) {\n    //Clears table body and and adds all the data from the dataMatrix matrix.\n    DOMGeneric.clearChildren(tableRef);\n    for (const dataList of dataMatrix.reverse()) {\n      DOMGeneric.addRow(tableRef, dataList);\n    }\n  }\n\n  static addImage(elementRef, src, alt, ...extraProperties) {\n    //Adds an image to the provided element.\n    //The extraProperties argument allows for the optional setting of properties to the image element,\n    //they must come in \"propertyName\", \"propertyValue\" pairs.\n    let img = document.createElement(\"img\");\n    img.src = src;\n    img.alt = alt;\n    if (extraProperties) {\n      if (extraProperties.length < 2 || extraProperties.length % 2 != 0) {\n        elementRef.appendChild(img);\n        return -1;\n      }\n      for (let i = 0; i < extraProperties.length; i = i + 2) {\n        img[extraProperties[i]] = extraProperties[i + 1];\n      }\n    }\n    elementRef.appendChild(img);\n  }\n\n  static createMaterialIcon(iconName) {\n    //Creates an icon element and assigns some properties and styling.\n    //The icons are actually inserted from the google material icons, that must be included in the html.\n    const icon = document.createElement(\"i\");\n    icon.className = \"material-icons\";\n    icon.textContent = iconName;\n    icon.style.alignSelf = \"center\";\n    if (iconName === \"clear\") {\n      icon.style.color = \"red\";\n    } else if (iconName === \"done\") {\n      icon.style.color = \"green\";\n    }\n    return icon;\n  }\n\n  static createMaterialIconsContainer(\n    containerTag,\n    containerClass,\n    iconNames,\n    clickCallbacks = null\n  ) {\n    //Creates a container (of the specified type) with as many icons as specified in the iconNames argument.\n    //If specified, also binds a callback function to a \"click\" event on the icon.\n    //Assigns an icon-container html class to the container.\n    //The icons are actually inserted from the google material icons, that must be included in the html.\n    const container = document.createElement(containerTag);\n    container.className = containerClass;\n    iconNames.forEach((iconName, index) => {\n      //Create icon.\n      const icon = DOMGeneric.createMaterialIcon(iconName);\n      //Add click callback.\n      if (clickCallbacks && typeof clickCallbacks[index] === \"function\") {\n        icon.addEventListener(\"click\", clickCallbacks[index]);\n      }\n      //Add icon to container.\n      container.appendChild(icon);\n    });\n    return container;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS9ET01HZW5lcmljLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvdXRpbGl0eS9ET01HZW5lcmljLmpzP2NiOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vRE9NR2VuZXJpYyBjbGFzcyBmb3Igd3JhcHBpbmcgY29tbW9uIGludGVyYWN0aW9ucyB3aXRoIHRoZSBET00uXG5leHBvcnQgY2xhc3MgRE9NR2VuZXJpYyB7XG4gIHN0YXRpYyBjbGVhckNoaWxkcmVuKGVsZW1lbnRSZWYpIHtcbiAgICAvL1JlbW92ZSBhbGwgaHRtbCBjb250ZW50IGZyb20gdGhlIHJlZmVyZW5jZWQgZWxlbWVudC5cbiAgICBlbGVtZW50UmVmLmlubmVySFRNTCA9IFwiXCI7XG4gIH1cblxuICBzdGF0aWMgYWRkT3B0aW9uKHNlbGVjdFJlZiwgdmFsdWUsIGVsZW1lbnRDbGFzcyA9IG51bGwpIHtcbiAgICAvL0NyZWF0ZSBhbmQgYWRkIGFuIG9wdGlvbiB0byBhIHNlbGVjdCwgd2l0aCBhbiBvcHRpb25hbCBodG1sIGNsYXNzLlxuICAgIGxldCBvcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgIG9wdC52YWx1ZSA9IHZhbHVlO1xuICAgIG9wdC5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICBpZiAoZWxlbWVudENsYXNzKSB7XG4gICAgICBvcHQuY2xhc3NMaXN0LmFkZChlbGVtZW50Q2xhc3MpO1xuICAgIH1cbiAgICBzZWxlY3RSZWYuYXBwZW5kQ2hpbGQob3B0KTtcbiAgfVxuXG4gIHN0YXRpYyByZW1vdmVGaXJzdEVtcHR5T3B0aW9uKHNlbGVjdFJlZikge1xuICAgIC8vSWYgdGhlIGZpcnN0IG9wdGlvbiBvZiBhIHNlbGVjdCBpcyBlbXB0eSwgcmVtb3ZlIGl0LlxuICAgIGlmIChzZWxlY3RSZWYuZmlyc3RDaGlsZC52YWx1ZSA9PT0gXCJcIikge1xuICAgICAgc2VsZWN0UmVmLnJlbW92ZUNoaWxkKHNlbGVjdFJlZi5maXJzdENoaWxkKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgcG9wdWxhdGVTZWxlY3Qoc2VsZWN0UmVmLCBsaXN0LCBjbGFzc0xpc3QgPSBudWxsKSB7XG4gICAgLy9BZGQgb3B0aW9ucyBmcm9tIGEgbGlzdCB0byBhIHNlbGVjdCwgd2l0aCBvcHRpb25hbCBjbGFzc2VzLlxuICAgIC8vQWxzbyBhZGRzIGFuIGVtcHR5IG9wdGlvbiBhdCB0aGUgdG9wLlxuICAgIERPTUdlbmVyaWMuY2xlYXJDaGlsZHJlbihzZWxlY3RSZWYpO1xuICAgIERPTUdlbmVyaWMuYWRkT3B0aW9uKHNlbGVjdFJlZiwgXCJcIik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBET01HZW5lcmljLmFkZE9wdGlvbihzZWxlY3RSZWYsIGxpc3RbaV0sIGNsYXNzTGlzdCAmJiBjbGFzc0xpc3RbaV0pO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhZGRSb3codGFibGVSZWYsIGRhdGFMaXN0KSB7XG4gICAgLy9BZGQgYSByb3cgdG8gYSB0YWJsZSBib2R5IHdpdGggdGhlIGNvbnRlbnRzIGluIHRoZSBkYXRhTGlzdCBhcnJheS5cbiAgICBjb25zdCBuZXdSb3cgPSB0YWJsZVJlZi5pbnNlcnRSb3coMCk7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiBkYXRhTGlzdCkge1xuICAgICAgY29uc3QgbmV3Q2VsbCA9IG5ld1Jvdy5pbnNlcnRDZWxsKCk7XG4gICAgICBjb25zdCBuZXdUZXh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodmFsdWUpO1xuICAgICAgbmV3Q2VsbC5hcHBlbmRDaGlsZChuZXdUZXh0KTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgcG9wdWxhdGVUYWJsZSh0YWJsZVJlZiwgZGF0YU1hdHJpeCkge1xuICAgIC8vQ2xlYXJzIHRhYmxlIGJvZHkgYW5kIGFuZCBhZGRzIGFsbCB0aGUgZGF0YSBmcm9tIHRoZSBkYXRhTWF0cml4IG1hdHJpeC5cbiAgICBET01HZW5lcmljLmNsZWFyQ2hpbGRyZW4odGFibGVSZWYpO1xuICAgIGZvciAoY29uc3QgZGF0YUxpc3Qgb2YgZGF0YU1hdHJpeC5yZXZlcnNlKCkpIHtcbiAgICAgIERPTUdlbmVyaWMuYWRkUm93KHRhYmxlUmVmLCBkYXRhTGlzdCk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGFkZEltYWdlKGVsZW1lbnRSZWYsIHNyYywgYWx0LCAuLi5leHRyYVByb3BlcnRpZXMpIHtcbiAgICAvL0FkZHMgYW4gaW1hZ2UgdG8gdGhlIHByb3ZpZGVkIGVsZW1lbnQuXG4gICAgLy9UaGUgZXh0cmFQcm9wZXJ0aWVzIGFyZ3VtZW50IGFsbG93cyBmb3IgdGhlIG9wdGlvbmFsIHNldHRpbmcgb2YgcHJvcGVydGllcyB0byB0aGUgaW1hZ2UgZWxlbWVudCxcbiAgICAvL3RoZXkgbXVzdCBjb21lIGluIFwicHJvcGVydHlOYW1lXCIsIFwicHJvcGVydHlWYWx1ZVwiIHBhaXJzLlxuICAgIGxldCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltZy5zcmMgPSBzcmM7XG4gICAgaW1nLmFsdCA9IGFsdDtcbiAgICBpZiAoZXh0cmFQcm9wZXJ0aWVzKSB7XG4gICAgICBpZiAoZXh0cmFQcm9wZXJ0aWVzLmxlbmd0aCA8IDIgfHwgZXh0cmFQcm9wZXJ0aWVzLmxlbmd0aCAlIDIgIT0gMCkge1xuICAgICAgICBlbGVtZW50UmVmLmFwcGVuZENoaWxkKGltZyk7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICAgIH1cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXh0cmFQcm9wZXJ0aWVzLmxlbmd0aDsgaSA9IGkgKyAyKSB7XG4gICAgICAgIGltZ1tleHRyYVByb3BlcnRpZXNbaV1dID0gZXh0cmFQcm9wZXJ0aWVzW2kgKyAxXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxlbWVudFJlZi5hcHBlbmRDaGlsZChpbWcpO1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZU1hdGVyaWFsSWNvbihpY29uTmFtZSkge1xuICAgIC8vQ3JlYXRlcyBhbiBpY29uIGVsZW1lbnQgYW5kIGFzc2lnbnMgc29tZSBwcm9wZXJ0aWVzIGFuZCBzdHlsaW5nLlxuICAgIC8vVGhlIGljb25zIGFyZSBhY3R1YWxseSBpbnNlcnRlZCBmcm9tIHRoZSBnb29nbGUgbWF0ZXJpYWwgaWNvbnMsIHRoYXQgbXVzdCBiZSBpbmNsdWRlZCBpbiB0aGUgaHRtbC5cbiAgICBjb25zdCBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7XG4gICAgaWNvbi5jbGFzc05hbWUgPSBcIm1hdGVyaWFsLWljb25zXCI7XG4gICAgaWNvbi50ZXh0Q29udGVudCA9IGljb25OYW1lO1xuICAgIGljb24uc3R5bGUuYWxpZ25TZWxmID0gXCJjZW50ZXJcIjtcbiAgICBpZiAoaWNvbk5hbWUgPT09IFwiY2xlYXJcIikge1xuICAgICAgaWNvbi5zdHlsZS5jb2xvciA9IFwicmVkXCI7XG4gICAgfSBlbHNlIGlmIChpY29uTmFtZSA9PT0gXCJkb25lXCIpIHtcbiAgICAgIGljb24uc3R5bGUuY29sb3IgPSBcImdyZWVuXCI7XG4gICAgfVxuICAgIHJldHVybiBpY29uO1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZU1hdGVyaWFsSWNvbnNDb250YWluZXIoXG4gICAgY29udGFpbmVyVGFnLFxuICAgIGNvbnRhaW5lckNsYXNzLFxuICAgIGljb25OYW1lcyxcbiAgICBjbGlja0NhbGxiYWNrcyA9IG51bGxcbiAgKSB7XG4gICAgLy9DcmVhdGVzIGEgY29udGFpbmVyIChvZiB0aGUgc3BlY2lmaWVkIHR5cGUpIHdpdGggYXMgbWFueSBpY29ucyBhcyBzcGVjaWZpZWQgaW4gdGhlIGljb25OYW1lcyBhcmd1bWVudC5cbiAgICAvL0lmIHNwZWNpZmllZCwgYWxzbyBiaW5kcyBhIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIGEgXCJjbGlja1wiIGV2ZW50IG9uIHRoZSBpY29uLlxuICAgIC8vQXNzaWducyBhbiBpY29uLWNvbnRhaW5lciBodG1sIGNsYXNzIHRvIHRoZSBjb250YWluZXIuXG4gICAgLy9UaGUgaWNvbnMgYXJlIGFjdHVhbGx5IGluc2VydGVkIGZyb20gdGhlIGdvb2dsZSBtYXRlcmlhbCBpY29ucywgdGhhdCBtdXN0IGJlIGluY2x1ZGVkIGluIHRoZSBodG1sLlxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoY29udGFpbmVyVGFnKTtcbiAgICBjb250YWluZXIuY2xhc3NOYW1lID0gY29udGFpbmVyQ2xhc3M7XG4gICAgaWNvbk5hbWVzLmZvckVhY2goKGljb25OYW1lLCBpbmRleCkgPT4ge1xuICAgICAgLy9DcmVhdGUgaWNvbi5cbiAgICAgIGNvbnN0IGljb24gPSBET01HZW5lcmljLmNyZWF0ZU1hdGVyaWFsSWNvbihpY29uTmFtZSk7XG4gICAgICAvL0FkZCBjbGljayBjYWxsYmFjay5cbiAgICAgIGlmIChjbGlja0NhbGxiYWNrcyAmJiB0eXBlb2YgY2xpY2tDYWxsYmFja3NbaW5kZXhdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgaWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgY2xpY2tDYWxsYmFja3NbaW5kZXhdKTtcbiAgICAgIH1cbiAgICAgIC8vQWRkIGljb24gdG8gY29udGFpbmVyLlxuICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGljb24pO1xuICAgIH0pO1xuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utility/DOMGeneric.js\n");

/***/ }),

/***/ "./src/utility/LeafletMap.js":
/*!***********************************!*\
  !*** ./src/utility/LeafletMap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeafletMap: () => (/* binding */ LeafletMap)\n/* harmony export */ });\n/* harmony import */ var _database_interface_Pose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../database_interface/Pose.js */ \"./src/database_interface/Pose.js\");\n/* harmony import */ var _database_interface_MapImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database_interface/MapImage.js */ \"./src/database_interface/MapImage.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n/* eslint-disable no-undef */\n\n// Leaflet JS Library:\n// https://github.com/Leaflet/Leaflet/blob/master/LICENSE\n\n// © OpenStreetMap contributors:\n// https://www.openstreetmap.org/copyright.\n// Base map and data from OpenStreetMap and OpenStreetMap Foundation.\n\n\n\n\n//LeafletMap class to wrap map related variables and functions.\nclass LeafletMap {\n  constructor(serverInterface, mapElementName, mapContainerName) {\n    //Set arguments as properties.\n    this.poseInterface = new _database_interface_Pose_js__WEBPACK_IMPORTED_MODULE_0__.PoseInterface(serverInterface);\n    this.mapImageInterface = new _database_interface_MapImage_js__WEBPACK_IMPORTED_MODULE_1__.MapImageInterface(serverInterface);\n    //Initialize variables and objects.\n    this.mapPointsLayers = [];\n    this.activeMarker = null;\n    this.activePoses = null;\n    this.leafletMap = L.map(mapElementName);\n    this.changeTileLayer();\n    this.localMapOverlay = null;\n    this.layerControl = null;\n    this.mapImage = null;\n    //Reach to DOM elements.\n    this.mapElementContainer = document.getElementById(mapContainerName);\n    this.mapElement = document.getElementById(mapElementName);\n  }\n\n  changeTileLayer() {\n    //Get the stored config data.\n    let mapData = JSON.parse(localStorage.getItem(\"fttTileServerData\"));\n    //Set default if not found.\n    if (!mapData) {\n      mapData = {\n        url: \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        minZoom: 0,\n        maxZoom: 19,\n      };\n      //Store data.\n      localStorage.setItem(\"fttTileServerData\", JSON.stringify(mapData));\n    }\n    //Create the tile layer.\n    L.tileLayer(mapData.url, {\n      minZoom: mapData.minZoom,\n      maxZoom: mapData.maxZoom,\n    }).addTo(this.leafletMap);\n    //Set attribution if using OpenStreetMap\n    if (mapData.url.indexOf(\"openstreetmap\") > -1) {\n      this.leafletMap.attributionControl.addAttribution(\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      );\n    } else {\n      this.leafletMap.attributionControl.removeAttribution(\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      );\n    }\n  }\n\n  async addLocalMap(mapImage, fSegs) {\n    //If there was a local map with the same parameters, update the image and return\n    if (\n      this.localMapOverlay &&\n      this.mapImage.width === mapImage.width &&\n      this.mapImage.height === mapImage.height &&\n      this.mapImage.resolution === mapImage.resolution\n    ) {\n      this.localMapOverlay._rawImage.src = mapImage.imageData;\n      return;\n    }\n    //Check the filtered segment list (segments with both gps and local positions) has enough values\n    if (fSegs.length < 2) {\n      return;\n    }\n    //Assign mapImage data to html image.\n    const image = new Image();\n    image.src = mapImage.imageData;\n    //Estimate differences of lat and lng degrees in meters.\n    //https://en.wikipedia.org/wiki/Geographic_coordinate_system\n    const latMid = ((fSegs[1].lat + fSegs[0].lat) / 2) * (Math.PI / 180);\n    const mPerLat =\n      111132.92 -\n      559.82 * Math.cos(2 * latMid) +\n      1.175 * Math.cos(4 * latMid) -\n      0.0023 * Math.cos(6 * latMid);\n    const mPerLng =\n      111412.84 * Math.cos(latMid) -\n      93.5 * Math.cos(3 * latMid) +\n      0.118 * Math.cos(5 * latMid);\n    //Estimate image rotation with respect to cardinal orientation.\n    const rotation =\n      Math.atan2(\n        (fSegs[1].lat - fSegs[0].lat) * mPerLat,\n        (fSegs[1].lng - fSegs[0].lng) * mPerLng\n      ) -\n      Math.atan2(\n        fSegs[1].local_y - fSegs[0].local_y,\n        fSegs[1].local_x - fSegs[0].local_x\n      );\n    //Get the local coordinates of the top and bottom-left image corners\n    const bottomLeft = {\n      x: mapImage.originX,\n      y: mapImage.originY,\n    };\n    const topLeft = {\n      x: mapImage.originX,\n      y: mapImage.originY + mapImage.height * mapImage.resolution,\n    };\n    const topRight = {\n      x: mapImage.originX + mapImage.width * mapImage.resolution,\n      y: mapImage.originY + mapImage.height * mapImage.resolution,\n    };\n    //Get the rotated distance vectors (in cardinal orientation) between the corners and the first segment's position\n    const bottomLeftRotD = {\n      x:\n        (bottomLeft.x - fSegs[0].local_x) * Math.cos(rotation) -\n        (bottomLeft.y - fSegs[0].local_y) * Math.sin(rotation),\n      y:\n        (bottomLeft.x - fSegs[0].local_x) * Math.sin(rotation) +\n        (bottomLeft.y - fSegs[0].local_y) * Math.cos(rotation),\n    };\n    const topLeftRotD = {\n      x:\n        (topLeft.x - fSegs[0].local_x) * Math.cos(rotation) -\n        (topLeft.y - fSegs[0].local_y) * Math.sin(rotation),\n      y:\n        (topLeft.x - fSegs[0].local_x) * Math.sin(rotation) +\n        (topLeft.y - fSegs[0].local_y) * Math.cos(rotation),\n    };\n    const topRightRotD = {\n      x:\n        (topRight.x - fSegs[0].local_x) * Math.cos(rotation) -\n        (topRight.y - fSegs[0].local_y) * Math.sin(rotation),\n      y:\n        (topRight.x - fSegs[0].local_x) * Math.sin(rotation) +\n        (topRight.y - fSegs[0].local_y) * Math.cos(rotation),\n    };\n    //Get the rotated image corners in lat-lng.\n    const bottomLeftLatLng = L.latLng(\n      fSegs[0].lat + bottomLeftRotD.y / mPerLat,\n      fSegs[0].lng + bottomLeftRotD.x / mPerLng\n    );\n    const topLeftLatLng = L.latLng(\n      fSegs[0].lat + topLeftRotD.y / mPerLat,\n      fSegs[0].lng + topLeftRotD.x / mPerLng\n    );\n    const topRightLatLng = L.latLng(\n      fSegs[0].lat + topRightRotD.y / mPerLat,\n      fSegs[0].lng + topRightRotD.x / mPerLng\n    );\n    //If a different local map was already added, remember if was displayed and then delete it.\n    let displayMap = false;\n    if (this.localMapOverlay) {\n      displayMap = this.leafletMap.hasLayer(this.localMapOverlay);\n      this.removeLocalMap();\n    }\n    //Create the overlay for the rotated image.\n    this.localMapOverlay = L.imageOverlay.rotated(\n      image,\n      topLeftLatLng,\n      topRightLatLng,\n      bottomLeftLatLng,\n      {\n        opacity: 0.4,\n        interactive: true,\n      }\n    );\n    //If a previous map was displayed, add the overlay to the map.\n    if (displayMap) {\n      this.localMapOverlay.addTo(this.leafletMap);\n    }\n    //Create the layer control if there is none.\n    if (!this.layerControl) {\n      this.layerControl = L.control.layers().addTo(this.leafletMap);\n    }\n    //Add the overlay to the layer control\n    this.layerControl.addOverlay(this.localMapOverlay, \"Local Map\");\n    //Save the last mapImage\n    this.mapImage = mapImage;\n  }\n\n  removeLocalMap() {\n    if (this.localMapOverlay) {\n      this.leafletMap.removeLayer(this.localMapOverlay);\n      this.layerControl.removeLayer(this.localMapOverlay);\n      this.localMapOverlay = null;\n      this.mapImage = null;\n    }\n  }\n\n  removeLayerControl() {\n    if (this.layerControl) {\n      this.leafletMap.removeControl(this.layerControl);\n      this.layerControl = null;\n    }\n  }\n\n  removePoses(segmentId) {\n    //Find the map layer with the poses of the specified segment id.\n    const layerIndex = this.mapPointsLayers.findIndex(\n      (entry) => entry.segmentId == segmentId\n    );\n    if (layerIndex > -1) {\n      const layerPosesPtr = this.mapPointsLayers[layerIndex].mapPosesPtr;\n      //Remove the held variable if the found poses were active (selected).\n      if (layerPosesPtr == this.activePoses) {\n        this.activePoses = null;\n      }\n      //Remove the found poses from the map.\n      this.leafletMap.removeLayer(layerPosesPtr);\n      this.mapPointsLayers.splice(layerIndex, 1);\n    }\n  }\n\n  async getAndDrawMapPoses(segmentId, markerColorAuto, markerColorIto, markerAlpha) {\n    let geoJsonData = null;\n    try {\n      //Get geoJSON data from server.\n      geoJsonData = await this.poseInterface.get(segmentId);\n      //Remove any data from the specified segment that was already on the map.\n      this.removePoses(segmentId);\n      if (geoJsonData.features) {\n        //Show map and force tile fetch.\n        if (this.mapElementContainer) {\n          this.mapElementContainer.style.display = \"block\";\n        }\n        this.leafletMap.invalidateSize(true);\n        //Set poses map display options.\n        let markerOptions = {\n          radius: 2,\n          weight: 1,\n          opacity: 1 * markerAlpha,\n          fillOpacity: 0.8 * markerAlpha,\n        };\n        //Sort poses\n        geoJsonData.features.sort((a, b) => a.properties.id - b.properties.id);\n        //Add poses to map, while setting special options and pop-up with data from geoJSON data features.\n        const points = L.geoJSON(geoJsonData, {\n          pointToLayer: function (feature, latlng) {\n            if (feature.properties.type == \"AUTO\") {\n              markerOptions.color = markerColorAuto || \"green\";\n            } else {\n              markerOptions.color = markerColorIto || \"red\";\n            }\n            return L.circleMarker(latlng, markerOptions);\n          },\n          onEachFeature: function (feature, layer) {\n            if (feature.properties && feature.properties.segmentId) {\n              layer.bindPopup(\n                \"<span>Segment \" + feature.properties.segmentId + \"</span>\"\n              );\n            }\n          },\n        }).addTo(this.leafletMap);\n        //Save segment id and pointer to map layer in a list.\n        this.mapPointsLayers.push({\n          segmentId: segmentId,\n          mapPosesPtr: points,\n        });\n      } else {\n        console.log(\"No position data for segment \" + segmentId);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n    return geoJsonData;\n  }\n\n  removeActiveMarker() {\n    //Remove location marker from map.\n    if (this.activeMarker) {\n      this.leafletMap.removeLayer(this.activeMarker);\n      this.activeMarker = null;\n    }\n  }\n\n  removeActivePoses() {\n    //Restore point coloring.\n    if (this.activePoses) {\n      this.activePoses.eachLayer((layer) => {\n        if (layer.feature.properties.type == \"AUTO\") {\n          layer.setStyle({ color: \"green\" });\n        } else {\n          layer.setStyle({ color: \"red\" });\n        }\n      });\n      this.activePoses = null;\n    }\n  }\n\n  addActiveMarker(lat, lng) {\n    //Add location marker to map.\n    this.activeMarker = L.marker([lat, lng]).addTo(this.leafletMap);\n    if (this.leafletMap.getZoom()) {\n      this.leafletMap.panTo([lat, lng]);\n    } else {\n      console.log(\"Cannot pan Leaflet map before loading it.\");\n    }\n  }\n\n  addActivePoses(segmentId) {\n    //Change point coloring to blue for poses of the associated segment.\n    const selectedPoses = this.mapPointsLayers.find(\n      (poses) => poses.segmentId == segmentId\n    );\n    if (selectedPoses) {\n      this.activePoses = selectedPoses.mapPosesPtr;\n      this.activePoses.setStyle({ color: \"blue\" });\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utility/LeafletMap.js\n");

/***/ }),

/***/ "./src/utility/LocalMap.js":
/*!*********************************!*\
  !*** ./src/utility/LocalMap.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalMap: () => (/* binding */ LocalMap)\n/* harmony export */ });\n/* harmony import */ var _database_interface_MapImage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../database_interface/MapImage.js */ \"./src/database_interface/MapImage.js\");\n/* harmony import */ var _database_interface_LocalPose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database_interface/LocalPose.js */ \"./src/database_interface/LocalPose.js\");\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n/* eslint-disable no-undef */\n\n\n\n\n//LocalMap class to wrap ROS local occupancy grid map related variables and functions.\nclass LocalMap {\n  constructor(serverInterface) {\n    //Create api interface.\n    this.mapImageInterface = new _database_interface_MapImage_js__WEBPACK_IMPORTED_MODULE_0__.MapImageInterface(serverInterface);\n    this.localPoseInterface = new _database_interface_LocalPose_js__WEBPACK_IMPORTED_MODULE_1__.LocalPoseInterface(serverInterface);\n    //Reach to DOM elements.\n    this.mapElement = document.getElementById(\"local-map\");\n    this.zoomInBtn = document.getElementById(\"local-map-zoom-in-btn\");\n    this.zoomOutBtn = document.getElementById(\"local-map-zoom-out-btn\");\n    //Initialize variables and objects.\n    this.mapPointsLayers = [];\n    this.activeMarker = null;\n    this.activePoses = null;\n    this.mapBitmap = null;\n    //Create the main viewer.\n    this.viewer = new ROS2D.Viewer({\n      divID: \"local-map\",\n      width: 560,\n      height: 560,\n    });\n    //Reserve first index of viewer scene for map.\n    this.viewer.scene.addChild(new createjs.Shape());\n    //Add zoom to the viewer.\n    this.zoomView = new ROS2D.ZoomView({\n      rootObject: this.viewer.scene,\n    });\n    //Add panning to the viewer.\n    this.panView = new ROS2D.PanView({\n      rootObject: this.viewer.scene,\n    });\n    //Enable touch events to the viewer.\n    createjs.Touch.enable(this.viewer.scene);\n    //Add event listeners for map moving.\n    this.mouseDown = false;\n    this.viewer.scene.addEventListener(\"stagemousedown\", (event) => {\n      this.panView.startPan(event.stageX, event.stageY);\n      this.mouseDown = true;\n    });\n    this.viewer.scene.addEventListener(\"stagemousemove\", (event) => {\n      if (this.mouseDown === true) {\n        this.panView.pan(event.stageX, event.stageY);\n      }\n    });\n    this.viewer.scene.addEventListener(\"stagemouseup\", () => {\n      if (this.mouseDown === true) {\n        this.mouseDown = false;\n      }\n    });\n    //Add event listeners for map zooming.\n    this.viewer.scene.canvas.addEventListener(\n      \"wheel\",\n      this.zoomMapHandler.bind(this, 0)\n    );\n    this.zoomInBtn.addEventListener(\n      \"click\",\n      this.zoomMapHandler.bind(this, 50)\n    );\n    this.zoomOutBtn.addEventListener(\n      \"click\",\n      this.zoomMapHandler.bind(this, -50)\n    );\n    //Add viewer resizing.\n    //Remove previous ticker function.\n    createjs.Ticker.addEventListener(\"tick\", this.viewer.scene);\n    //Add new ticker function.\n    createjs.Ticker.on(\"tick\", (event) => {\n      //Only update if map is visible.\n      if (this.mapElement.style.display == \"block\") {\n        //Get current dimensions.\n        const oldWidth = this.viewer.scene.canvas.width;\n        const oldHeight = this.viewer.scene.canvas.height;\n        //Get new dimensions.\n        const newWidth = parseInt(getComputedStyle(this.mapElement).width);\n        const newHeight = parseInt(getComputedStyle(this.mapElement).height);\n        //Update dimensions.\n        this.viewer.scene.canvas.width = newWidth;\n        this.viewer.scene.canvas.height = newHeight;\n        //Maintain viewer center\n        if (this.mapBitmap) {\n          this.viewer.shift(\n            (oldWidth - newWidth) / 2 / this.viewer.scene.scaleX,\n            (newHeight - oldHeight) / 2 / this.viewer.scene.scaleY\n          );\n        }\n        //Update graphics.\n        this.viewer.scene.update(event);\n      }\n    });\n  }\n\n  zoomMapHandler(deltaZoom, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    let startZoomX;\n    let startZoomY;\n    if (event.type === \"wheel\") {\n      const boundingRect = event.target.getBoundingClientRect();\n      startZoomX = event.clientX - boundingRect.left;\n      startZoomY = event.clientY - boundingRect.top;\n      deltaZoom = -event.deltaY;\n    } else if (event.type === \"click\") {\n      startZoomX = this.viewer.scene.canvas.width / 2;\n      startZoomY = this.viewer.scene.canvas.height / 2;\n    } else {\n      console.log(\"zoomMapHandler triggered by unexpected event. Aborting.\");\n      return;\n    }\n    this.zoomView.startZoom(startZoomX, startZoomY);\n    const zoom = 1 + deltaZoom / this.viewer.scene.canvas.clientHeight;\n    this.zoomView.zoom(zoom);\n  }\n\n  resetViewer() {\n    //Delete al graphics from viewer.\n    this.viewer.scene.removeAllChildren();\n    //Reserve index for map.\n    this.viewer.scene.addChild(new createjs.Shape())\n    //Delete map.\n    if (this.mapBitmap) {\n      this.mapBitmap = null;\n    }\n    //Reset viewer defaults.\n    this.viewer.scene.x = 0;\n    this.viewer.scene.x_prev_shift = this.viewer.scene.x;\n    this.viewer.scene.y = this.viewer.height;\n    this.viewer.scene.y_prev_shift = this.viewer.scene.y;\n  }\n\n  async getAndDrawMap(shiftId) {\n    try {\n      //Get map data from database.\n      const mapImage = await this.mapImageInterface.get(shiftId);\n      //Record absence of previous map.\n      const firstMap = !this.mapBitmap;\n      //Store new map origin.\n      this.mapOrigin = { x: mapImage.originX, y: mapImage.originY };\n      //Create drawable element for map image.\n      this.mapBitmap = new createjs.Bitmap(mapImage.imageData);\n      //Set drawable origin and scale.\n      this.mapBitmap.x = mapImage.originX;\n      this.mapBitmap.y =\n        -mapImage.height * mapImage.resolution - mapImage.originY;\n      this.mapBitmap.scaleX = mapImage.resolution;\n      this.mapBitmap.scaleY = mapImage.resolution;\n      //Clear scene at map index.\n      this.viewer.scene.removeChildAt(0);\n      //Add map to viewer.\n      this.viewer.scene.addChildAt(this.mapBitmap, 0);\n      //Scale and shift viewer if this is the first map.\n      if (firstMap) {\n        this.viewer.scene.addChildAt(this.mapBitmap, 0);\n        //Adjust viewer visible area to display map.\n        const viewerRatio = this.viewer.width / this.viewer.height;\n        //Fit scale for largest map dimension.\n        if (mapImage.width > mapImage.height) {\n          this.viewer.scaleToDimensions(\n            mapImage.width * mapImage.resolution,\n            (mapImage.width * mapImage.resolution) / viewerRatio\n          );\n        } else {\n          this.viewer.scaleToDimensions(\n            mapImage.height * mapImage.resolution * viewerRatio,\n            mapImage.height * mapImage.resolution\n          );\n        }\n        //Shift view to center map.\n        this.viewer.shift(\n          mapImage.originX -\n            (this.viewer.scene.canvas.width - this.viewer.width) /\n              2 /\n              this.viewer.scene.scaleX,\n          mapImage.originY +\n            (this.viewer.scene.canvas.height - this.viewer.height) /\n              2 /\n              this.viewer.scene.scaleY\n        );\n      }\n      return mapImage;\n    } catch (error) {\n      //Log response.\n      console.log(error.message);\n      return null;\n    }\n  }\n\n  removePoses(segmentId) {\n    //Find the map layer with the poses of the specified segment id.\n    const layerIndex = this.mapPointsLayers.findIndex(\n      (entry) => entry.segmentId == segmentId\n    );\n    if (layerIndex > -1) {\n      const layerPosesPtr = this.mapPointsLayers[layerIndex].mapPosesPtr;\n      //Remove the held variable if the found poses were active (selected).\n      if (layerPosesPtr == this.activePoses) {\n        this.activePoses = null;\n      }\n      //Remove the found poses from the map.\n      this.viewer.scene.removeChild(layerPosesPtr.shape);\n      this.mapPointsLayers.splice(layerIndex, 1);\n    }\n  }\n\n  async getAndDrawMapPoses(segmentId) {\n    try {\n      //Get local poses from database.\n      const localPoseList = await this.localPoseInterface.get(segmentId);\n      //Remove any data from the specified segment that was already on the map.\n      this.removePoses(segmentId);\n      if (localPoseList.length > 0) {\n        //Create drawable element for local poses.\n        const traceShape = new createjs.Shape();\n        //Define color of the stroke.\n        let strokeColor;\n        if (localPoseList[0].type == \"AUTO\") {\n          strokeColor = \"green\";\n        } else {\n          strokeColor = \"red\";\n        }\n        //Set drawable style and initial position.\n        traceShape.graphics.setStrokeStyle(0.2);\n        const traceCommand =\n          traceShape.graphics.beginStroke(strokeColor).command;\n        traceShape.graphics.moveTo(localPoseList[0].x, -localPoseList[0].y);\n        //Add local poses to drawable.\n        localPoseList.forEach((localPose) => {\n          traceShape.graphics.lineTo(localPose.x, -localPose.y);\n        });\n        //Add drawable to viewer.\n        //If there is an active marker, redraw it on top of the drawable.\n        if (this.activeMarker) {\n          this.viewer.scene.removeChild(this.activeMarker);\n        }\n        this.viewer.scene.addChild(traceShape);\n        if (this.activeMarker) {\n          this.viewer.scene.addChild(this.activeMarker);\n        }\n        //Save segment id and pointer to map layer in a list.\n        this.mapPointsLayers.push({\n          segmentId: segmentId,\n          mapPosesPtr: {\n            shape: traceShape,\n            command: traceCommand,\n            type: localPoseList[0].type,\n          },\n        });\n      } else {\n        console.log(\"No local position data for segment \" + segmentId);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  removeActiveMarker() {\n    //Remove location marker from map.\n    if (this.activeMarker) {\n      this.viewer.scene.removeChild(this.activeMarker);\n      this.activeMarker = null;\n    }\n  }\n\n  removeActivePoses() {\n    //Restore point coloring.\n    //Unfortunately, it seems like the only way to do this for easeljs graphics is to re-draw the shape.\n    if (this.activePoses) {\n      this.activePoses.command.style =\n        this.activePoses.type == \"AUTO\" ? \"green\" : \"red\";\n      this.activePoses = null;\n    }\n  }\n\n  addActiveMarker(x, y) {\n    //Add location marker to map.\n    this.activeMarker = new createjs.Shape();\n    this.activeMarker.graphics.beginFill(\"blue\").drawCircle(x, -y, 0.5);\n    this.viewer.scene.addChild(this.activeMarker);\n  }\n\n  addActivePoses(segmentId) {\n    //Change point coloring to blue for poses of the associated segment.\n    const selectedPoses = this.mapPointsLayers.find(\n      (poses) => poses.segmentId == segmentId\n    );\n    if (selectedPoses) {\n      this.activePoses = selectedPoses.mapPosesPtr;\n      this.activePoses.command.style = \"blue\";\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS9Mb2NhbE1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z0dF93ZWJhcHAvLi9zcmMvdXRpbGl0eS9Mb2NhbE1hcC5qcz9jNDk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuXG5pbXBvcnQgeyBNYXBJbWFnZUludGVyZmFjZSB9IGZyb20gXCIuLi9kYXRhYmFzZV9pbnRlcmZhY2UvTWFwSW1hZ2UuanNcIjtcbmltcG9ydCB7IExvY2FsUG9zZUludGVyZmFjZSB9IGZyb20gXCIuLi9kYXRhYmFzZV9pbnRlcmZhY2UvTG9jYWxQb3NlLmpzXCI7XG5cbi8vTG9jYWxNYXAgY2xhc3MgdG8gd3JhcCBST1MgbG9jYWwgb2NjdXBhbmN5IGdyaWQgbWFwIHJlbGF0ZWQgdmFyaWFibGVzIGFuZCBmdW5jdGlvbnMuXG5leHBvcnQgY2xhc3MgTG9jYWxNYXAge1xuICBjb25zdHJ1Y3RvcihzZXJ2ZXJJbnRlcmZhY2UpIHtcbiAgICAvL0NyZWF0ZSBhcGkgaW50ZXJmYWNlLlxuICAgIHRoaXMubWFwSW1hZ2VJbnRlcmZhY2UgPSBuZXcgTWFwSW1hZ2VJbnRlcmZhY2Uoc2VydmVySW50ZXJmYWNlKTtcbiAgICB0aGlzLmxvY2FsUG9zZUludGVyZmFjZSA9IG5ldyBMb2NhbFBvc2VJbnRlcmZhY2Uoc2VydmVySW50ZXJmYWNlKTtcbiAgICAvL1JlYWNoIHRvIERPTSBlbGVtZW50cy5cbiAgICB0aGlzLm1hcEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvY2FsLW1hcFwiKTtcbiAgICB0aGlzLnpvb21JbkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9jYWwtbWFwLXpvb20taW4tYnRuXCIpO1xuICAgIHRoaXMuem9vbU91dEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9jYWwtbWFwLXpvb20tb3V0LWJ0blwiKTtcbiAgICAvL0luaXRpYWxpemUgdmFyaWFibGVzIGFuZCBvYmplY3RzLlxuICAgIHRoaXMubWFwUG9pbnRzTGF5ZXJzID0gW107XG4gICAgdGhpcy5hY3RpdmVNYXJrZXIgPSBudWxsO1xuICAgIHRoaXMuYWN0aXZlUG9zZXMgPSBudWxsO1xuICAgIHRoaXMubWFwQml0bWFwID0gbnVsbDtcbiAgICAvL0NyZWF0ZSB0aGUgbWFpbiB2aWV3ZXIuXG4gICAgdGhpcy52aWV3ZXIgPSBuZXcgUk9TMkQuVmlld2VyKHtcbiAgICAgIGRpdklEOiBcImxvY2FsLW1hcFwiLFxuICAgICAgd2lkdGg6IDU2MCxcbiAgICAgIGhlaWdodDogNTYwLFxuICAgIH0pO1xuICAgIC8vUmVzZXJ2ZSBmaXJzdCBpbmRleCBvZiB2aWV3ZXIgc2NlbmUgZm9yIG1hcC5cbiAgICB0aGlzLnZpZXdlci5zY2VuZS5hZGRDaGlsZChuZXcgY3JlYXRlanMuU2hhcGUoKSk7XG4gICAgLy9BZGQgem9vbSB0byB0aGUgdmlld2VyLlxuICAgIHRoaXMuem9vbVZpZXcgPSBuZXcgUk9TMkQuWm9vbVZpZXcoe1xuICAgICAgcm9vdE9iamVjdDogdGhpcy52aWV3ZXIuc2NlbmUsXG4gICAgfSk7XG4gICAgLy9BZGQgcGFubmluZyB0byB0aGUgdmlld2VyLlxuICAgIHRoaXMucGFuVmlldyA9IG5ldyBST1MyRC5QYW5WaWV3KHtcbiAgICAgIHJvb3RPYmplY3Q6IHRoaXMudmlld2VyLnNjZW5lLFxuICAgIH0pO1xuICAgIC8vRW5hYmxlIHRvdWNoIGV2ZW50cyB0byB0aGUgdmlld2VyLlxuICAgIGNyZWF0ZWpzLlRvdWNoLmVuYWJsZSh0aGlzLnZpZXdlci5zY2VuZSk7XG4gICAgLy9BZGQgZXZlbnQgbGlzdGVuZXJzIGZvciBtYXAgbW92aW5nLlxuICAgIHRoaXMubW91c2VEb3duID0gZmFsc2U7XG4gICAgdGhpcy52aWV3ZXIuc2NlbmUuYWRkRXZlbnRMaXN0ZW5lcihcInN0YWdlbW91c2Vkb3duXCIsIChldmVudCkgPT4ge1xuICAgICAgdGhpcy5wYW5WaWV3LnN0YXJ0UGFuKGV2ZW50LnN0YWdlWCwgZXZlbnQuc3RhZ2VZKTtcbiAgICAgIHRoaXMubW91c2VEb3duID0gdHJ1ZTtcbiAgICB9KTtcbiAgICB0aGlzLnZpZXdlci5zY2VuZS5hZGRFdmVudExpc3RlbmVyKFwic3RhZ2Vtb3VzZW1vdmVcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAodGhpcy5tb3VzZURvd24gPT09IHRydWUpIHtcbiAgICAgICAgdGhpcy5wYW5WaWV3LnBhbihldmVudC5zdGFnZVgsIGV2ZW50LnN0YWdlWSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy52aWV3ZXIuc2NlbmUuYWRkRXZlbnRMaXN0ZW5lcihcInN0YWdlbW91c2V1cFwiLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5tb3VzZURvd24gPT09IHRydWUpIHtcbiAgICAgICAgdGhpcy5tb3VzZURvd24gPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvL0FkZCBldmVudCBsaXN0ZW5lcnMgZm9yIG1hcCB6b29taW5nLlxuICAgIHRoaXMudmlld2VyLnNjZW5lLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJ3aGVlbFwiLFxuICAgICAgdGhpcy56b29tTWFwSGFuZGxlci5iaW5kKHRoaXMsIDApXG4gICAgKTtcbiAgICB0aGlzLnpvb21JbkJ0bi5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgdGhpcy56b29tTWFwSGFuZGxlci5iaW5kKHRoaXMsIDUwKVxuICAgICk7XG4gICAgdGhpcy56b29tT3V0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICB0aGlzLnpvb21NYXBIYW5kbGVyLmJpbmQodGhpcywgLTUwKVxuICAgICk7XG4gICAgLy9BZGQgdmlld2VyIHJlc2l6aW5nLlxuICAgIC8vUmVtb3ZlIHByZXZpb3VzIHRpY2tlciBmdW5jdGlvbi5cbiAgICBjcmVhdGVqcy5UaWNrZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRpY2tcIiwgdGhpcy52aWV3ZXIuc2NlbmUpO1xuICAgIC8vQWRkIG5ldyB0aWNrZXIgZnVuY3Rpb24uXG4gICAgY3JlYXRlanMuVGlja2VyLm9uKFwidGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIC8vT25seSB1cGRhdGUgaWYgbWFwIGlzIHZpc2libGUuXG4gICAgICBpZiAodGhpcy5tYXBFbGVtZW50LnN0eWxlLmRpc3BsYXkgPT0gXCJibG9ja1wiKSB7XG4gICAgICAgIC8vR2V0IGN1cnJlbnQgZGltZW5zaW9ucy5cbiAgICAgICAgY29uc3Qgb2xkV2lkdGggPSB0aGlzLnZpZXdlci5zY2VuZS5jYW52YXMud2lkdGg7XG4gICAgICAgIGNvbnN0IG9sZEhlaWdodCA9IHRoaXMudmlld2VyLnNjZW5lLmNhbnZhcy5oZWlnaHQ7XG4gICAgICAgIC8vR2V0IG5ldyBkaW1lbnNpb25zLlxuICAgICAgICBjb25zdCBuZXdXaWR0aCA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUodGhpcy5tYXBFbGVtZW50KS53aWR0aCk7XG4gICAgICAgIGNvbnN0IG5ld0hlaWdodCA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUodGhpcy5tYXBFbGVtZW50KS5oZWlnaHQpO1xuICAgICAgICAvL1VwZGF0ZSBkaW1lbnNpb25zLlxuICAgICAgICB0aGlzLnZpZXdlci5zY2VuZS5jYW52YXMud2lkdGggPSBuZXdXaWR0aDtcbiAgICAgICAgdGhpcy52aWV3ZXIuc2NlbmUuY2FudmFzLmhlaWdodCA9IG5ld0hlaWdodDtcbiAgICAgICAgLy9NYWludGFpbiB2aWV3ZXIgY2VudGVyXG4gICAgICAgIGlmICh0aGlzLm1hcEJpdG1hcCkge1xuICAgICAgICAgIHRoaXMudmlld2VyLnNoaWZ0KFxuICAgICAgICAgICAgKG9sZFdpZHRoIC0gbmV3V2lkdGgpIC8gMiAvIHRoaXMudmlld2VyLnNjZW5lLnNjYWxlWCxcbiAgICAgICAgICAgIChuZXdIZWlnaHQgLSBvbGRIZWlnaHQpIC8gMiAvIHRoaXMudmlld2VyLnNjZW5lLnNjYWxlWVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy9VcGRhdGUgZ3JhcGhpY3MuXG4gICAgICAgIHRoaXMudmlld2VyLnNjZW5lLnVwZGF0ZShldmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB6b29tTWFwSGFuZGxlcihkZWx0YVpvb20sIGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBsZXQgc3RhcnRab29tWDtcbiAgICBsZXQgc3RhcnRab29tWTtcbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gXCJ3aGVlbFwiKSB7XG4gICAgICBjb25zdCBib3VuZGluZ1JlY3QgPSBldmVudC50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBzdGFydFpvb21YID0gZXZlbnQuY2xpZW50WCAtIGJvdW5kaW5nUmVjdC5sZWZ0O1xuICAgICAgc3RhcnRab29tWSA9IGV2ZW50LmNsaWVudFkgLSBib3VuZGluZ1JlY3QudG9wO1xuICAgICAgZGVsdGFab29tID0gLWV2ZW50LmRlbHRhWTtcbiAgICB9IGVsc2UgaWYgKGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIikge1xuICAgICAgc3RhcnRab29tWCA9IHRoaXMudmlld2VyLnNjZW5lLmNhbnZhcy53aWR0aCAvIDI7XG4gICAgICBzdGFydFpvb21ZID0gdGhpcy52aWV3ZXIuc2NlbmUuY2FudmFzLmhlaWdodCAvIDI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiem9vbU1hcEhhbmRsZXIgdHJpZ2dlcmVkIGJ5IHVuZXhwZWN0ZWQgZXZlbnQuIEFib3J0aW5nLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy56b29tVmlldy5zdGFydFpvb20oc3RhcnRab29tWCwgc3RhcnRab29tWSk7XG4gICAgY29uc3Qgem9vbSA9IDEgKyBkZWx0YVpvb20gLyB0aGlzLnZpZXdlci5zY2VuZS5jYW52YXMuY2xpZW50SGVpZ2h0O1xuICAgIHRoaXMuem9vbVZpZXcuem9vbSh6b29tKTtcbiAgfVxuXG4gIHJlc2V0Vmlld2VyKCkge1xuICAgIC8vRGVsZXRlIGFsIGdyYXBoaWNzIGZyb20gdmlld2VyLlxuICAgIHRoaXMudmlld2VyLnNjZW5lLnJlbW92ZUFsbENoaWxkcmVuKCk7XG4gICAgLy9SZXNlcnZlIGluZGV4IGZvciBtYXAuXG4gICAgdGhpcy52aWV3ZXIuc2NlbmUuYWRkQ2hpbGQobmV3IGNyZWF0ZWpzLlNoYXBlKCkpXG4gICAgLy9EZWxldGUgbWFwLlxuICAgIGlmICh0aGlzLm1hcEJpdG1hcCkge1xuICAgICAgdGhpcy5tYXBCaXRtYXAgPSBudWxsO1xuICAgIH1cbiAgICAvL1Jlc2V0IHZpZXdlciBkZWZhdWx0cy5cbiAgICB0aGlzLnZpZXdlci5zY2VuZS54ID0gMDtcbiAgICB0aGlzLnZpZXdlci5zY2VuZS54X3ByZXZfc2hpZnQgPSB0aGlzLnZpZXdlci5zY2VuZS54O1xuICAgIHRoaXMudmlld2VyLnNjZW5lLnkgPSB0aGlzLnZpZXdlci5oZWlnaHQ7XG4gICAgdGhpcy52aWV3ZXIuc2NlbmUueV9wcmV2X3NoaWZ0ID0gdGhpcy52aWV3ZXIuc2NlbmUueTtcbiAgfVxuXG4gIGFzeW5jIGdldEFuZERyYXdNYXAoc2hpZnRJZCkge1xuICAgIHRyeSB7XG4gICAgICAvL0dldCBtYXAgZGF0YSBmcm9tIGRhdGFiYXNlLlxuICAgICAgY29uc3QgbWFwSW1hZ2UgPSBhd2FpdCB0aGlzLm1hcEltYWdlSW50ZXJmYWNlLmdldChzaGlmdElkKTtcbiAgICAgIC8vUmVjb3JkIGFic2VuY2Ugb2YgcHJldmlvdXMgbWFwLlxuICAgICAgY29uc3QgZmlyc3RNYXAgPSAhdGhpcy5tYXBCaXRtYXA7XG4gICAgICAvL1N0b3JlIG5ldyBtYXAgb3JpZ2luLlxuICAgICAgdGhpcy5tYXBPcmlnaW4gPSB7IHg6IG1hcEltYWdlLm9yaWdpblgsIHk6IG1hcEltYWdlLm9yaWdpblkgfTtcbiAgICAgIC8vQ3JlYXRlIGRyYXdhYmxlIGVsZW1lbnQgZm9yIG1hcCBpbWFnZS5cbiAgICAgIHRoaXMubWFwQml0bWFwID0gbmV3IGNyZWF0ZWpzLkJpdG1hcChtYXBJbWFnZS5pbWFnZURhdGEpO1xuICAgICAgLy9TZXQgZHJhd2FibGUgb3JpZ2luIGFuZCBzY2FsZS5cbiAgICAgIHRoaXMubWFwQml0bWFwLnggPSBtYXBJbWFnZS5vcmlnaW5YO1xuICAgICAgdGhpcy5tYXBCaXRtYXAueSA9XG4gICAgICAgIC1tYXBJbWFnZS5oZWlnaHQgKiBtYXBJbWFnZS5yZXNvbHV0aW9uIC0gbWFwSW1hZ2Uub3JpZ2luWTtcbiAgICAgIHRoaXMubWFwQml0bWFwLnNjYWxlWCA9IG1hcEltYWdlLnJlc29sdXRpb247XG4gICAgICB0aGlzLm1hcEJpdG1hcC5zY2FsZVkgPSBtYXBJbWFnZS5yZXNvbHV0aW9uO1xuICAgICAgLy9DbGVhciBzY2VuZSBhdCBtYXAgaW5kZXguXG4gICAgICB0aGlzLnZpZXdlci5zY2VuZS5yZW1vdmVDaGlsZEF0KDApO1xuICAgICAgLy9BZGQgbWFwIHRvIHZpZXdlci5cbiAgICAgIHRoaXMudmlld2VyLnNjZW5lLmFkZENoaWxkQXQodGhpcy5tYXBCaXRtYXAsIDApO1xuICAgICAgLy9TY2FsZSBhbmQgc2hpZnQgdmlld2VyIGlmIHRoaXMgaXMgdGhlIGZpcnN0IG1hcC5cbiAgICAgIGlmIChmaXJzdE1hcCkge1xuICAgICAgICB0aGlzLnZpZXdlci5zY2VuZS5hZGRDaGlsZEF0KHRoaXMubWFwQml0bWFwLCAwKTtcbiAgICAgICAgLy9BZGp1c3Qgdmlld2VyIHZpc2libGUgYXJlYSB0byBkaXNwbGF5IG1hcC5cbiAgICAgICAgY29uc3Qgdmlld2VyUmF0aW8gPSB0aGlzLnZpZXdlci53aWR0aCAvIHRoaXMudmlld2VyLmhlaWdodDtcbiAgICAgICAgLy9GaXQgc2NhbGUgZm9yIGxhcmdlc3QgbWFwIGRpbWVuc2lvbi5cbiAgICAgICAgaWYgKG1hcEltYWdlLndpZHRoID4gbWFwSW1hZ2UuaGVpZ2h0KSB7XG4gICAgICAgICAgdGhpcy52aWV3ZXIuc2NhbGVUb0RpbWVuc2lvbnMoXG4gICAgICAgICAgICBtYXBJbWFnZS53aWR0aCAqIG1hcEltYWdlLnJlc29sdXRpb24sXG4gICAgICAgICAgICAobWFwSW1hZ2Uud2lkdGggKiBtYXBJbWFnZS5yZXNvbHV0aW9uKSAvIHZpZXdlclJhdGlvXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnZpZXdlci5zY2FsZVRvRGltZW5zaW9ucyhcbiAgICAgICAgICAgIG1hcEltYWdlLmhlaWdodCAqIG1hcEltYWdlLnJlc29sdXRpb24gKiB2aWV3ZXJSYXRpbyxcbiAgICAgICAgICAgIG1hcEltYWdlLmhlaWdodCAqIG1hcEltYWdlLnJlc29sdXRpb25cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vU2hpZnQgdmlldyB0byBjZW50ZXIgbWFwLlxuICAgICAgICB0aGlzLnZpZXdlci5zaGlmdChcbiAgICAgICAgICBtYXBJbWFnZS5vcmlnaW5YIC1cbiAgICAgICAgICAgICh0aGlzLnZpZXdlci5zY2VuZS5jYW52YXMud2lkdGggLSB0aGlzLnZpZXdlci53aWR0aCkgL1xuICAgICAgICAgICAgICAyIC9cbiAgICAgICAgICAgICAgdGhpcy52aWV3ZXIuc2NlbmUuc2NhbGVYLFxuICAgICAgICAgIG1hcEltYWdlLm9yaWdpblkgK1xuICAgICAgICAgICAgKHRoaXMudmlld2VyLnNjZW5lLmNhbnZhcy5oZWlnaHQgLSB0aGlzLnZpZXdlci5oZWlnaHQpIC9cbiAgICAgICAgICAgICAgMiAvXG4gICAgICAgICAgICAgIHRoaXMudmlld2VyLnNjZW5lLnNjYWxlWVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hcEltYWdlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvL0xvZyByZXNwb25zZS5cbiAgICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlUG9zZXMoc2VnbWVudElkKSB7XG4gICAgLy9GaW5kIHRoZSBtYXAgbGF5ZXIgd2l0aCB0aGUgcG9zZXMgb2YgdGhlIHNwZWNpZmllZCBzZWdtZW50IGlkLlxuICAgIGNvbnN0IGxheWVySW5kZXggPSB0aGlzLm1hcFBvaW50c0xheWVycy5maW5kSW5kZXgoXG4gICAgICAoZW50cnkpID0+IGVudHJ5LnNlZ21lbnRJZCA9PSBzZWdtZW50SWRcbiAgICApO1xuICAgIGlmIChsYXllckluZGV4ID4gLTEpIHtcbiAgICAgIGNvbnN0IGxheWVyUG9zZXNQdHIgPSB0aGlzLm1hcFBvaW50c0xheWVyc1tsYXllckluZGV4XS5tYXBQb3Nlc1B0cjtcbiAgICAgIC8vUmVtb3ZlIHRoZSBoZWxkIHZhcmlhYmxlIGlmIHRoZSBmb3VuZCBwb3NlcyB3ZXJlIGFjdGl2ZSAoc2VsZWN0ZWQpLlxuICAgICAgaWYgKGxheWVyUG9zZXNQdHIgPT0gdGhpcy5hY3RpdmVQb3Nlcykge1xuICAgICAgICB0aGlzLmFjdGl2ZVBvc2VzID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIC8vUmVtb3ZlIHRoZSBmb3VuZCBwb3NlcyBmcm9tIHRoZSBtYXAuXG4gICAgICB0aGlzLnZpZXdlci5zY2VuZS5yZW1vdmVDaGlsZChsYXllclBvc2VzUHRyLnNoYXBlKTtcbiAgICAgIHRoaXMubWFwUG9pbnRzTGF5ZXJzLnNwbGljZShsYXllckluZGV4LCAxKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBnZXRBbmREcmF3TWFwUG9zZXMoc2VnbWVudElkKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vR2V0IGxvY2FsIHBvc2VzIGZyb20gZGF0YWJhc2UuXG4gICAgICBjb25zdCBsb2NhbFBvc2VMaXN0ID0gYXdhaXQgdGhpcy5sb2NhbFBvc2VJbnRlcmZhY2UuZ2V0KHNlZ21lbnRJZCk7XG4gICAgICAvL1JlbW92ZSBhbnkgZGF0YSBmcm9tIHRoZSBzcGVjaWZpZWQgc2VnbWVudCB0aGF0IHdhcyBhbHJlYWR5IG9uIHRoZSBtYXAuXG4gICAgICB0aGlzLnJlbW92ZVBvc2VzKHNlZ21lbnRJZCk7XG4gICAgICBpZiAobG9jYWxQb3NlTGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vQ3JlYXRlIGRyYXdhYmxlIGVsZW1lbnQgZm9yIGxvY2FsIHBvc2VzLlxuICAgICAgICBjb25zdCB0cmFjZVNoYXBlID0gbmV3IGNyZWF0ZWpzLlNoYXBlKCk7XG4gICAgICAgIC8vRGVmaW5lIGNvbG9yIG9mIHRoZSBzdHJva2UuXG4gICAgICAgIGxldCBzdHJva2VDb2xvcjtcbiAgICAgICAgaWYgKGxvY2FsUG9zZUxpc3RbMF0udHlwZSA9PSBcIkFVVE9cIikge1xuICAgICAgICAgIHN0cm9rZUNvbG9yID0gXCJncmVlblwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0cm9rZUNvbG9yID0gXCJyZWRcIjtcbiAgICAgICAgfVxuICAgICAgICAvL1NldCBkcmF3YWJsZSBzdHlsZSBhbmQgaW5pdGlhbCBwb3NpdGlvbi5cbiAgICAgICAgdHJhY2VTaGFwZS5ncmFwaGljcy5zZXRTdHJva2VTdHlsZSgwLjIpO1xuICAgICAgICBjb25zdCB0cmFjZUNvbW1hbmQgPVxuICAgICAgICAgIHRyYWNlU2hhcGUuZ3JhcGhpY3MuYmVnaW5TdHJva2Uoc3Ryb2tlQ29sb3IpLmNvbW1hbmQ7XG4gICAgICAgIHRyYWNlU2hhcGUuZ3JhcGhpY3MubW92ZVRvKGxvY2FsUG9zZUxpc3RbMF0ueCwgLWxvY2FsUG9zZUxpc3RbMF0ueSk7XG4gICAgICAgIC8vQWRkIGxvY2FsIHBvc2VzIHRvIGRyYXdhYmxlLlxuICAgICAgICBsb2NhbFBvc2VMaXN0LmZvckVhY2goKGxvY2FsUG9zZSkgPT4ge1xuICAgICAgICAgIHRyYWNlU2hhcGUuZ3JhcGhpY3MubGluZVRvKGxvY2FsUG9zZS54LCAtbG9jYWxQb3NlLnkpO1xuICAgICAgICB9KTtcbiAgICAgICAgLy9BZGQgZHJhd2FibGUgdG8gdmlld2VyLlxuICAgICAgICAvL0lmIHRoZXJlIGlzIGFuIGFjdGl2ZSBtYXJrZXIsIHJlZHJhdyBpdCBvbiB0b3Agb2YgdGhlIGRyYXdhYmxlLlxuICAgICAgICBpZiAodGhpcy5hY3RpdmVNYXJrZXIpIHtcbiAgICAgICAgICB0aGlzLnZpZXdlci5zY2VuZS5yZW1vdmVDaGlsZCh0aGlzLmFjdGl2ZU1hcmtlcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aWV3ZXIuc2NlbmUuYWRkQ2hpbGQodHJhY2VTaGFwZSk7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZU1hcmtlcikge1xuICAgICAgICAgIHRoaXMudmlld2VyLnNjZW5lLmFkZENoaWxkKHRoaXMuYWN0aXZlTWFya2VyKTtcbiAgICAgICAgfVxuICAgICAgICAvL1NhdmUgc2VnbWVudCBpZCBhbmQgcG9pbnRlciB0byBtYXAgbGF5ZXIgaW4gYSBsaXN0LlxuICAgICAgICB0aGlzLm1hcFBvaW50c0xheWVycy5wdXNoKHtcbiAgICAgICAgICBzZWdtZW50SWQ6IHNlZ21lbnRJZCxcbiAgICAgICAgICBtYXBQb3Nlc1B0cjoge1xuICAgICAgICAgICAgc2hhcGU6IHRyYWNlU2hhcGUsXG4gICAgICAgICAgICBjb21tYW5kOiB0cmFjZUNvbW1hbmQsXG4gICAgICAgICAgICB0eXBlOiBsb2NhbFBvc2VMaXN0WzBdLnR5cGUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk5vIGxvY2FsIHBvc2l0aW9uIGRhdGEgZm9yIHNlZ21lbnQgXCIgKyBzZWdtZW50SWQpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVBY3RpdmVNYXJrZXIoKSB7XG4gICAgLy9SZW1vdmUgbG9jYXRpb24gbWFya2VyIGZyb20gbWFwLlxuICAgIGlmICh0aGlzLmFjdGl2ZU1hcmtlcikge1xuICAgICAgdGhpcy52aWV3ZXIuc2NlbmUucmVtb3ZlQ2hpbGQodGhpcy5hY3RpdmVNYXJrZXIpO1xuICAgICAgdGhpcy5hY3RpdmVNYXJrZXIgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZUFjdGl2ZVBvc2VzKCkge1xuICAgIC8vUmVzdG9yZSBwb2ludCBjb2xvcmluZy5cbiAgICAvL1VuZm9ydHVuYXRlbHksIGl0IHNlZW1zIGxpa2UgdGhlIG9ubHkgd2F5IHRvIGRvIHRoaXMgZm9yIGVhc2VsanMgZ3JhcGhpY3MgaXMgdG8gcmUtZHJhdyB0aGUgc2hhcGUuXG4gICAgaWYgKHRoaXMuYWN0aXZlUG9zZXMpIHtcbiAgICAgIHRoaXMuYWN0aXZlUG9zZXMuY29tbWFuZC5zdHlsZSA9XG4gICAgICAgIHRoaXMuYWN0aXZlUG9zZXMudHlwZSA9PSBcIkFVVE9cIiA/IFwiZ3JlZW5cIiA6IFwicmVkXCI7XG4gICAgICB0aGlzLmFjdGl2ZVBvc2VzID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBhZGRBY3RpdmVNYXJrZXIoeCwgeSkge1xuICAgIC8vQWRkIGxvY2F0aW9uIG1hcmtlciB0byBtYXAuXG4gICAgdGhpcy5hY3RpdmVNYXJrZXIgPSBuZXcgY3JlYXRlanMuU2hhcGUoKTtcbiAgICB0aGlzLmFjdGl2ZU1hcmtlci5ncmFwaGljcy5iZWdpbkZpbGwoXCJibHVlXCIpLmRyYXdDaXJjbGUoeCwgLXksIDAuNSk7XG4gICAgdGhpcy52aWV3ZXIuc2NlbmUuYWRkQ2hpbGQodGhpcy5hY3RpdmVNYXJrZXIpO1xuICB9XG5cbiAgYWRkQWN0aXZlUG9zZXMoc2VnbWVudElkKSB7XG4gICAgLy9DaGFuZ2UgcG9pbnQgY29sb3JpbmcgdG8gYmx1ZSBmb3IgcG9zZXMgb2YgdGhlIGFzc29jaWF0ZWQgc2VnbWVudC5cbiAgICBjb25zdCBzZWxlY3RlZFBvc2VzID0gdGhpcy5tYXBQb2ludHNMYXllcnMuZmluZChcbiAgICAgIChwb3NlcykgPT4gcG9zZXMuc2VnbWVudElkID09IHNlZ21lbnRJZFxuICAgICk7XG4gICAgaWYgKHNlbGVjdGVkUG9zZXMpIHtcbiAgICAgIHRoaXMuYWN0aXZlUG9zZXMgPSBzZWxlY3RlZFBvc2VzLm1hcFBvc2VzUHRyO1xuICAgICAgdGhpcy5hY3RpdmVQb3Nlcy5jb21tYW5kLnN0eWxlID0gXCJibHVlXCI7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utility/LocalMap.js\n");

/***/ }),

/***/ "./src/utility/Modal.js":
/*!******************************!*\
  !*** ./src/utility/Modal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modal: () => (/* binding */ Modal)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Common class for displaying overlays.\nclass Modal {\n  constructor(\n    contentObject,\n    fallbackText,\n    closeCallbackFunction,\n    noMaxWidth = false\n  ) {\n    this.fallbackText = fallbackText;\n    this.closeCallbackFunction = closeCallbackFunction;\n    this.visible = false;\n    //Import and build modal node.\n    const modalTemplateEl = document.getElementById(\"modal-template\");\n    const modalElements = document.importNode(modalTemplateEl.content, true);\n    //Fill modal with the elements of contentObject.\n    this.modalElement = modalElements.querySelector(\".modal\");\n    if (noMaxWidth) {\n      this.modalElement.classList.add(\"no-max-width\");\n    }\n    this.modalElement.insertBefore(\n      contentObject.element,\n      this.modalElement.children[0]\n    );\n    //Reassign element property of contentObject, since insertBefore erases it.\n    //This is done to keep the content logic inside the content class\n    contentObject.element = this.modalElement;\n    //Select modal element and assign transitionend listener to close it\n    this.modalElement.addEventListener(\"transitionend\", this.close.bind(this));\n    //Select backdrop and assign click listener to trigger closing it.\n    this.backdropElement = modalElements.querySelector(\".backdrop\");\n    this.backdropElement.addEventListener(\"click\", this.hide.bind(this));\n    //Select close button and assign click listener to trigger closing it.\n    this.buttonElement = modalElements.getElementById(\"modal-close-btn\");\n    this.buttonElement.addEventListener(\"click\", this.hide.bind(this));\n  }\n\n  show() {\n    //Check template support\n    if (\"content\" in document.createElement(\"template\")) {\n      //Render modal and backdrop\n      document.body.insertAdjacentElement(\"afterbegin\", this.modalElement);\n      document.body.insertAdjacentElement(\"afterbegin\", this.backdropElement);\n      //scroll page to align with the top of the modal\n      this.modalElement.scrollIntoView({ behavior: \"smooth\" });\n      //Record visibility status\n      this.visible = true;\n      //Add show class to make visible\n      this.modalElement.classList.add(\"show\");\n    } else {\n      //Alert fallback text\n      alert(this.fallbackText);\n    }\n  }\n\n  hide() {\n    //Record visibility status\n    this.visible = false;\n    //Remove show class to make it disappear\n    this.modalElement.classList.remove(\"show\");\n  }\n\n  close() {\n    //Workaround to prevent \"transitionend\" trigger when showing\n    if (this.visible) {\n      return;\n    }\n    if (this.modalElement) {\n      //Delete modal and backdrop\n      document.body.removeChild(this.modalElement);\n      document.body.removeChild(this.backdropElement);\n      this.modalElement = null;\n      this.backdropElement = null;\n    }\n    if (this.closeCallbackFunction) {\n      this.closeCallbackFunction();\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS9Nb2RhbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy91dGlsaXR5L01vZGFsLmpzPzc2NWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIENhcmxvcyBUYW1waWVyIENvdG9yYXMgLSBjYXJsb3MudGFtcGllci5jb3RvcmFzQGZraWUuZnJhdW5ob2Zlci5kZVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIEZyYXVuaG9mZXIgRktJRVxuICovXG5cbi8vQ29tbW9uIGNsYXNzIGZvciBkaXNwbGF5aW5nIG92ZXJsYXlzLlxuZXhwb3J0IGNsYXNzIE1vZGFsIHtcbiAgY29uc3RydWN0b3IoXG4gICAgY29udGVudE9iamVjdCxcbiAgICBmYWxsYmFja1RleHQsXG4gICAgY2xvc2VDYWxsYmFja0Z1bmN0aW9uLFxuICAgIG5vTWF4V2lkdGggPSBmYWxzZVxuICApIHtcbiAgICB0aGlzLmZhbGxiYWNrVGV4dCA9IGZhbGxiYWNrVGV4dDtcbiAgICB0aGlzLmNsb3NlQ2FsbGJhY2tGdW5jdGlvbiA9IGNsb3NlQ2FsbGJhY2tGdW5jdGlvbjtcbiAgICB0aGlzLnZpc2libGUgPSBmYWxzZTtcbiAgICAvL0ltcG9ydCBhbmQgYnVpbGQgbW9kYWwgbm9kZS5cbiAgICBjb25zdCBtb2RhbFRlbXBsYXRlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsLXRlbXBsYXRlXCIpO1xuICAgIGNvbnN0IG1vZGFsRWxlbWVudHMgPSBkb2N1bWVudC5pbXBvcnROb2RlKG1vZGFsVGVtcGxhdGVFbC5jb250ZW50LCB0cnVlKTtcbiAgICAvL0ZpbGwgbW9kYWwgd2l0aCB0aGUgZWxlbWVudHMgb2YgY29udGVudE9iamVjdC5cbiAgICB0aGlzLm1vZGFsRWxlbWVudCA9IG1vZGFsRWxlbWVudHMucXVlcnlTZWxlY3RvcihcIi5tb2RhbFwiKTtcbiAgICBpZiAobm9NYXhXaWR0aCkge1xuICAgICAgdGhpcy5tb2RhbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm5vLW1heC13aWR0aFwiKTtcbiAgICB9XG4gICAgdGhpcy5tb2RhbEVsZW1lbnQuaW5zZXJ0QmVmb3JlKFxuICAgICAgY29udGVudE9iamVjdC5lbGVtZW50LFxuICAgICAgdGhpcy5tb2RhbEVsZW1lbnQuY2hpbGRyZW5bMF1cbiAgICApO1xuICAgIC8vUmVhc3NpZ24gZWxlbWVudCBwcm9wZXJ0eSBvZiBjb250ZW50T2JqZWN0LCBzaW5jZSBpbnNlcnRCZWZvcmUgZXJhc2VzIGl0LlxuICAgIC8vVGhpcyBpcyBkb25lIHRvIGtlZXAgdGhlIGNvbnRlbnQgbG9naWMgaW5zaWRlIHRoZSBjb250ZW50IGNsYXNzXG4gICAgY29udGVudE9iamVjdC5lbGVtZW50ID0gdGhpcy5tb2RhbEVsZW1lbnQ7XG4gICAgLy9TZWxlY3QgbW9kYWwgZWxlbWVudCBhbmQgYXNzaWduIHRyYW5zaXRpb25lbmQgbGlzdGVuZXIgdG8gY2xvc2UgaXRcbiAgICB0aGlzLm1vZGFsRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuICAgIC8vU2VsZWN0IGJhY2tkcm9wIGFuZCBhc3NpZ24gY2xpY2sgbGlzdGVuZXIgdG8gdHJpZ2dlciBjbG9zaW5nIGl0LlxuICAgIHRoaXMuYmFja2Ryb3BFbGVtZW50ID0gbW9kYWxFbGVtZW50cy5xdWVyeVNlbGVjdG9yKFwiLmJhY2tkcm9wXCIpO1xuICAgIHRoaXMuYmFja2Ryb3BFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhpZGUuYmluZCh0aGlzKSk7XG4gICAgLy9TZWxlY3QgY2xvc2UgYnV0dG9uIGFuZCBhc3NpZ24gY2xpY2sgbGlzdGVuZXIgdG8gdHJpZ2dlciBjbG9zaW5nIGl0LlxuICAgIHRoaXMuYnV0dG9uRWxlbWVudCA9IG1vZGFsRWxlbWVudHMuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbC1jbG9zZS1idG5cIik7XG4gICAgdGhpcy5idXR0b25FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhpZGUuYmluZCh0aGlzKSk7XG4gIH1cblxuICBzaG93KCkge1xuICAgIC8vQ2hlY2sgdGVtcGxhdGUgc3VwcG9ydFxuICAgIGlmIChcImNvbnRlbnRcIiBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIikpIHtcbiAgICAgIC8vUmVuZGVyIG1vZGFsIGFuZCBiYWNrZHJvcFxuICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmJlZ2luXCIsIHRoaXMubW9kYWxFbGVtZW50KTtcbiAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJiZWdpblwiLCB0aGlzLmJhY2tkcm9wRWxlbWVudCk7XG4gICAgICAvL3Njcm9sbCBwYWdlIHRvIGFsaWduIHdpdGggdGhlIHRvcCBvZiB0aGUgbW9kYWxcbiAgICAgIHRoaXMubW9kYWxFbGVtZW50LnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6IFwic21vb3RoXCIgfSk7XG4gICAgICAvL1JlY29yZCB2aXNpYmlsaXR5IHN0YXR1c1xuICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgIC8vQWRkIHNob3cgY2xhc3MgdG8gbWFrZSB2aXNpYmxlXG4gICAgICB0aGlzLm1vZGFsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2hvd1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy9BbGVydCBmYWxsYmFjayB0ZXh0XG4gICAgICBhbGVydCh0aGlzLmZhbGxiYWNrVGV4dCk7XG4gICAgfVxuICB9XG5cbiAgaGlkZSgpIHtcbiAgICAvL1JlY29yZCB2aXNpYmlsaXR5IHN0YXR1c1xuICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgIC8vUmVtb3ZlIHNob3cgY2xhc3MgdG8gbWFrZSBpdCBkaXNhcHBlYXJcbiAgICB0aGlzLm1vZGFsRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIC8vV29ya2Fyb3VuZCB0byBwcmV2ZW50IFwidHJhbnNpdGlvbmVuZFwiIHRyaWdnZXIgd2hlbiBzaG93aW5nXG4gICAgaWYgKHRoaXMudmlzaWJsZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5tb2RhbEVsZW1lbnQpIHtcbiAgICAgIC8vRGVsZXRlIG1vZGFsIGFuZCBiYWNrZHJvcFxuICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLm1vZGFsRWxlbWVudCk7XG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuYmFja2Ryb3BFbGVtZW50KTtcbiAgICAgIHRoaXMubW9kYWxFbGVtZW50ID0gbnVsbDtcbiAgICAgIHRoaXMuYmFja2Ryb3BFbGVtZW50ID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKHRoaXMuY2xvc2VDYWxsYmFja0Z1bmN0aW9uKSB7XG4gICAgICB0aGlzLmNsb3NlQ2FsbGJhY2tGdW5jdGlvbigpO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utility/Modal.js\n");

/***/ }),

/***/ "./src/utility/ServerInterface.js":
/*!****************************************!*\
  !*** ./src/utility/ServerInterface.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerInterface: () => (/* binding */ ServerInterface)\n/* harmony export */ });\n/**\n * @author Carlos Tampier Cotoras - carlos.tampier.cotoras@fkie.fraunhofer.de\n *\n * Copyright (c) 2021 - Fraunhofer FKIE\n */\n\n//Fetch wrapper for HTTP interfacing with FTT server API.\nclass ServerInterface {\n  constructor() {\n    this.server_adr = location.host;\n  }\n\n  async sendHttpRequest(method, url, data) {\n    const response = await fetch(url, {\n      method: method,\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      const response_data = await response.json();\n      console.log(response_data.message);\n      throw new Error(\n        \"Something went wrong! Server message: \" + response_data.message\n      );\n    }\n  }\n\n  async sendGetRequest(path, params) {\n    const responseData = await this.sendHttpRequest(\n      \"GET\",\n      `http://${this.server_adr}/${path}${params ? \"?\" + params : \"\"}`\n    );\n    if (responseData) {\n      return responseData;\n    } else {\n      throw new Error(\"Empty HTTP response!\");\n    }\n  }\n\n  async sendPostRequest(path, data) {\n    const responseData = await this.sendHttpRequest(\n      \"POST\",\n      `http://${this.server_adr}/${path}`,\n      data\n    );\n    if (responseData) {\n      console.log(responseData);\n      return responseData;\n    } else {\n      throw new Error(\"Invalid HTTP request\");\n    }\n  }\n\n  async sendPutRequest(path, data) {\n    const responseData = await this.sendHttpRequest(\n      \"PUT\",\n      `http://${this.server_adr}/${path}`,\n      data\n    );\n    if (responseData) {\n      console.log(responseData);\n    } else {\n      throw new Error(\"Invalid HTTP request\");\n    }\n  }\n\n  async sendDeleteRequest(path, params) {\n    const responseData = await this.sendHttpRequest(\n      \"DELETE\",\n      `http://${this.server_adr}/${path}${params ? \"?\" + params : \"\"}`\n    );\n    if (responseData) {\n      console.log(responseData);\n    } else {\n      throw new Error(\"Invalid HTTP request\");\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS9TZXJ2ZXJJbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnR0X3dlYmFwcC8uL3NyYy91dGlsaXR5L1NlcnZlckludGVyZmFjZS5qcz9mOWFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGF1dGhvciBDYXJsb3MgVGFtcGllciBDb3RvcmFzIC0gY2FybG9zLnRhbXBpZXIuY290b3Jhc0Bma2llLmZyYXVuaG9mZXIuZGVcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSBGcmF1bmhvZmVyIEZLSUVcbiAqL1xuXG4vL0ZldGNoIHdyYXBwZXIgZm9yIEhUVFAgaW50ZXJmYWNpbmcgd2l0aCBGVFQgc2VydmVyIEFQSS5cbmV4cG9ydCBjbGFzcyBTZXJ2ZXJJbnRlcmZhY2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnNlcnZlcl9hZHIgPSBsb2NhdGlvbi5ob3N0O1xuICB9XG5cbiAgYXN5bmMgc2VuZEh0dHBSZXF1ZXN0KG1ldGhvZCwgdXJsLCBkYXRhKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXMgPCAzMDApIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlX2RhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZV9kYXRhLm1lc3NhZ2UpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlNvbWV0aGluZyB3ZW50IHdyb25nISBTZXJ2ZXIgbWVzc2FnZTogXCIgKyByZXNwb25zZV9kYXRhLm1lc3NhZ2VcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgc2VuZEdldFJlcXVlc3QocGF0aCwgcGFyYW1zKSB7XG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0gYXdhaXQgdGhpcy5zZW5kSHR0cFJlcXVlc3QoXG4gICAgICBcIkdFVFwiLFxuICAgICAgYGh0dHA6Ly8ke3RoaXMuc2VydmVyX2Fkcn0vJHtwYXRofSR7cGFyYW1zID8gXCI/XCIgKyBwYXJhbXMgOiBcIlwifWBcbiAgICApO1xuICAgIGlmIChyZXNwb25zZURhdGEpIHtcbiAgICAgIHJldHVybiByZXNwb25zZURhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVtcHR5IEhUVFAgcmVzcG9uc2UhXCIpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHNlbmRQb3N0UmVxdWVzdChwYXRoLCBkYXRhKSB7XG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0gYXdhaXQgdGhpcy5zZW5kSHR0cFJlcXVlc3QoXG4gICAgICBcIlBPU1RcIixcbiAgICAgIGBodHRwOi8vJHt0aGlzLnNlcnZlcl9hZHJ9LyR7cGF0aH1gLFxuICAgICAgZGF0YVxuICAgICk7XG4gICAgaWYgKHJlc3BvbnNlRGF0YSkge1xuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2VEYXRhKTtcbiAgICAgIHJldHVybiByZXNwb25zZURhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSFRUUCByZXF1ZXN0XCIpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHNlbmRQdXRSZXF1ZXN0KHBhdGgsIGRhdGEpIHtcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCB0aGlzLnNlbmRIdHRwUmVxdWVzdChcbiAgICAgIFwiUFVUXCIsXG4gICAgICBgaHR0cDovLyR7dGhpcy5zZXJ2ZXJfYWRyfS8ke3BhdGh9YCxcbiAgICAgIGRhdGFcbiAgICApO1xuICAgIGlmIChyZXNwb25zZURhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlRGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSFRUUCByZXF1ZXN0XCIpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHNlbmREZWxldGVSZXF1ZXN0KHBhdGgsIHBhcmFtcykge1xuICAgIGNvbnN0IHJlc3BvbnNlRGF0YSA9IGF3YWl0IHRoaXMuc2VuZEh0dHBSZXF1ZXN0KFxuICAgICAgXCJERUxFVEVcIixcbiAgICAgIGBodHRwOi8vJHt0aGlzLnNlcnZlcl9hZHJ9LyR7cGF0aH0ke3BhcmFtcyA/IFwiP1wiICsgcGFyYW1zIDogXCJcIn1gXG4gICAgKTtcbiAgICBpZiAocmVzcG9uc2VEYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZURhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIEhUVFAgcmVxdWVzdFwiKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utility/ServerInterface.js\n");

/***/ }),

/***/ "./src/utility/TimeZone.js":
/*!*********************************!*\
  !*** ./src/utility/TimeZone.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   timeZoneInts: () => (/* binding */ timeZoneInts),\n/* harmony export */   timeZoneStrings: () => (/* binding */ timeZoneStrings),\n/* harmony export */   timeZoneUTC: () => (/* binding */ timeZoneUTC)\n/* harmony export */ });\n//Lists of world time zones in various formats.\nconst timeZoneUTC = [\n  {\"label\":\"(UTC-12:00)\",\"value\":\"-12\"},\n  {\"label\":\"(UTC-11:00)\",\"value\":\"-11\"},\n  {\"label\":\"(UTC-10:00)\",\"value\":\"-10\"},\n  {\"label\":\"(UTC-09:00)\",\"value\":\"-9\"},\n  {\"label\":\"(UTC-08:00)\",\"value\":\"-8\"},\n  {\"label\":\"(UTC-07:00)\",\"value\":\"-7\"},\n  {\"label\":\"(UTC-06:00)\",\"value\":\"-6\"},\n  {\"label\":\"(UTC-05:00)\",\"value\":\"-5\"},\n  {\"label\":\"(UTC-04:00)\",\"value\":\"-4\"},\n  {\"label\":\"(UTC-03:30)\",\"value\":\"-3.5\"},\n  {\"label\":\"(UTC-03:00)\",\"value\":\"-3\"},\n  {\"label\":\"(UTC-02:00)\",\"value\":\"-2\"},\n  {\"label\":\"(UTC-01:00)\",\"value\":\"-1\"},\n  {\"label\":\"(UTC+00:00)\",\"value\":\"0\"},\n  {\"label\":\"(UTC+01:00)\",\"value\":\"1\"},\n  {\"label\":\"(UTC+02:00)\",\"value\":\"2\"},\n  {\"label\":\"(UTC+03:00)\",\"value\":\"3\"},\n  {\"label\":\"(UTC+03:30)\",\"value\":\"3.5\"},\n  {\"label\":\"(UTC+04:00)\",\"value\":\"4\"},\n  {\"label\":\"(UTC+04:30)\",\"value\":\"4.5\"},\n  {\"label\":\"(UTC+05:00)\",\"value\":\"5\"},\n  {\"label\":\"(UTC+05:30)\",\"value\":\"5.5\"},\n  {\"label\":\"(UTC+05:45)\",\"value\":\"5.75\"},\n  {\"label\":\"(UTC+06:00)\",\"value\":\"6\"},\n  {\"label\":\"(UTC+06:30)\",\"value\":\"6.5\"},\n  {\"label\":\"(UTC+07:00)\",\"value\":\"7\"},\n  {\"label\":\"(UTC+08:00)\",\"value\":\"8\"},\n  {\"label\":\"(UTC+09:00)\",\"value\":\"9\"},\n  {\"label\":\"(UTC+09:30)\",\"value\":\"9.5\"},\n  {\"label\":\"(UTC+10:00)\",\"value\":\"10\"},\n  {\"label\":\"(UTC+11:00)\",\"value\":\"11\"},\n  {\"label\":\"(UTC+12:00)\",\"value\":\"12\"},\n  {\"label\":\"(UTC+13:00)\",\"value\":\"13\"}\n]\n\nconst timeZoneStrings = [\n  {\"label\":\"(GMT-12:00) International Date Line West\",\"value\":\"Etc/GMT+12\"},\n  {\"label\":\"(GMT-11:00) Midway Island, Samoa\",\"value\":\"Pacific/Midway\"},\n  {\"label\":\"(GMT-10:00) Hawaii\",\"value\":\"Pacific/Honolulu\"},\n  {\"label\":\"(GMT-09:00) Alaska\",\"value\":\"US/Alaska\"},\n  {\"label\":\"(GMT-08:00) Pacific Time (US & Canada)\",\"value\":\"America/Los_Angeles\"},\n  {\"label\":\"(GMT-08:00) Tijuana, Baja California\",\"value\":\"America/Tijuana\"},\n  {\"label\":\"(GMT-07:00) Arizona\",\"value\":\"US/Arizona\"},\n  {\"label\":\"(GMT-07:00) Chihuahua, La Paz, Mazatlan\",\"value\":\"America/Chihuahua\"},\n  {\"label\":\"(GMT-07:00) Mountain Time (US & Canada)\",\"value\":\"US/Mountain\"},\n  {\"label\":\"(GMT-06:00) Central America\",\"value\":\"America/Managua\"},\n  {\"label\":\"(GMT-06:00) Central Time (US & Canada)\",\"value\":\"US/Central\"},\n  {\"label\":\"(GMT-06:00) Guadalajara, Mexico City, Monterrey\",\"value\":\"America/Mexico_City\"},\n  {\"label\":\"(GMT-06:00) Saskatchewan\",\"value\":\"Canada/Saskatchewan\"},\n  {\"label\":\"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\"value\":\"America/Bogota\"},\n  {\"label\":\"(GMT-05:00) Eastern Time (US & Canada)\",\"value\":\"US/Eastern\"},\n  {\"label\":\"(GMT-05:00) Indiana (East)\",\"value\":\"US/East-Indiana\"},\n  {\"label\":\"(GMT-04:00) Atlantic Time (Canada)\",\"value\":\"Canada/Atlantic\"},\n  {\"label\":\"(GMT-04:00) Caracas, La Paz\",\"value\":\"America/Caracas\"},\n  {\"label\":\"(GMT-04:00) Manaus\",\"value\":\"America/Manaus\"},\n  {\"label\":\"(GMT-04:00) Santiago\",\"value\":\"America/Santiago\"},\n  {\"label\":\"(GMT-03:30) Newfoundland\",\"value\":\"Canada/Newfoundland\"},\n  {\"label\":\"(GMT-03:00) Brasilia\",\"value\":\"America/Sao_Paulo\"},\n  {\"label\":\"(GMT-03:00) Buenos Aires, Georgetown\",\"value\":\"America/Argentina/Buenos_Aires\"},\n  {\"label\":\"(GMT-03:00) Greenland\",\"value\":\"America/Godthab\"},\n  {\"label\":\"(GMT-03:00) Montevideo\",\"value\":\"America/Montevideo\"},\n  {\"label\":\"(GMT-02:00) Mid-Atlantic\",\"value\":\"America/Noronha\"},\n  {\"label\":\"(GMT-01:00) Cape Verde Is.\",\"value\":\"Atlantic/Cape_Verde\"},\n  {\"label\":\"(GMT-01:00) Azores\",\"value\":\"Atlantic/Azores\"},\n  {\"label\":\"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",\"value\":\"Africa/Casablanca\"},\n  {\"label\":\"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\"value\":\"Etc/Greenwich\"},\n  {\"label\":\"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\"value\":\"Europe/Amsterdam\"},\n  {\"label\":\"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\"value\":\"Europe/Belgrade\"},\n  {\"label\":\"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",\"value\":\"Europe/Brussels\"},\n  {\"label\":\"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\"value\":\"Europe/Sarajevo\"},\n  {\"label\":\"(GMT+01:00) West Central Africa\",\"value\":\"Africa/Lagos\"},\n  {\"label\":\"(GMT+02:00) Amman\",\"value\":\"Asia/Amman\"},\n  {\"label\":\"(GMT+02:00) Athens, Bucharest, Istanbul\",\"value\":\"Europe/Athens\"},\n  {\"label\":\"(GMT+02:00) Beirut\",\"value\":\"Asia/Beirut\"},\n  {\"label\":\"(GMT+02:00) Cairo\",\"value\":\"Africa/Cairo\"},\n  {\"label\":\"(GMT+02:00) Harare, Pretoria\",\"value\":\"Africa/Harare\"},\n  {\"label\":\"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\"value\":\"Europe/Helsinki\"},\n  {\"label\":\"(GMT+02:00) Jerusalem\",\"value\":\"Asia/Jerusalem\"},\n  {\"label\":\"(GMT+02:00) Minsk\",\"value\":\"Europe/Minsk\"},\n  {\"label\":\"(GMT+02:00) Windhoek\",\"value\":\"Africa/Windhoek\"},\n  {\"label\":\"(GMT+03:00) Kuwait, Riyadh, Baghdad\",\"value\":\"Asia/Kuwait\"},\n  {\"label\":\"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",\"value\":\"Europe/Moscow\"},\n  {\"label\":\"(GMT+03:00) Nairobi\",\"value\":\"Africa/Nairobi\"},\n  {\"label\":\"(GMT+03:00) Tbilisi\",\"value\":\"Asia/Tbilisi\"},\n  {\"label\":\"(GMT+03:30) Tehran\",\"value\":\"Asia/Tehran\"},\n  {\"label\":\"(GMT+04:00) Abu Dhabi, Muscat\",\"value\":\"Asia/Muscat\"},\n  {\"label\":\"(GMT+04:00) Baku\",\"value\":\"Asia/Baku\"},\n  {\"label\":\"(GMT+04:00) Yerevan\",\"value\":\"Asia/Yerevan\"},\n  {\"label\":\"(GMT+04:30) Kabul\",\"value\":\"Asia/Kabul\"},\n  {\"label\":\"(GMT+05:00) Yekaterinburg\",\"value\":\"Asia/Yekaterinburg\"},\n  {\"label\":\"(GMT+05:00) Islamabad, Karachi, Tashkent\",\"value\":\"Asia/Karachi\"},\n  {\"label\":\"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\"value\":\"Asia/Calcutta\"},\n  {\"label\":\"(GMT+05:30) Sri Jayawardenapura\",\"value\":\"Asia/Calcutta\"},\n  {\"label\":\"(GMT+05:45) Kathmandu\",\"value\":\"Asia/Katmandu\"},\n  {\"label\":\"(GMT+06:00) Almaty, Novosibirsk\",\"value\":\"Asia/Almaty\"},\n  {\"label\":\"(GMT+06:00) Astana, Dhaka\",\"value\":\"Asia/Dhaka\"},\n  {\"label\":\"(GMT+06:30) Yangon (Rangoon)\",\"value\":\"Asia/Rangoon\"},\n  {\"label\":\"(GMT+07:00) Bangkok, Hanoi, Jakarta\",\"value\":\"Asia/Bangkok\"},\n  {\"label\":\"(GMT+07:00) Krasnoyarsk\",\"value\":\"Asia/Krasnoyarsk\"},\n  {\"label\":\"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\"value\":\"Asia/Hong_Kong\"},\n  {\"label\":\"(GMT+08:00) Kuala Lumpur, Singapore\",\"value\":\"Asia/Kuala_Lumpur\"},\n  {\"label\":\"(GMT+08:00) Irkutsk, Ulaan Bataar\",\"value\":\"Asia/Irkutsk\"},\n  {\"label\":\"(GMT+08:00) Perth\",\"value\":\"Australia/Perth\"},\n  {\"label\":\"(GMT+08:00) Taipei\",\"value\":\"Asia/Taipei\"},\n  {\"label\":\"(GMT+09:00) Osaka, Sapporo, Tokyo\",\"value\":\"Asia/Tokyo\"},\n  {\"label\":\"(GMT+09:00) Seoul\",\"value\":\"Asia/Seoul\"},\n  {\"label\":\"(GMT+09:00) Yakutsk\",\"value\":\"Asia/Yakutsk\"},\n  {\"label\":\"(GMT+09:30) Adelaide\",\"value\":\"Australia/Adelaide\"},\n  {\"label\":\"(GMT+09:30) Darwin\",\"value\":\"Australia/Darwin\"},\n  {\"label\":\"(GMT+10:00) Brisbane\",\"value\":\"Australia/Brisbane\"},\n  {\"label\":\"(GMT+10:00) Canberra, Melbourne, Sydney\",\"value\":\"Australia/Canberra\"},\n  {\"label\":\"(GMT+10:00) Hobart\",\"value\":\"Australia/Hobart\"},\n  {\"label\":\"(GMT+10:00) Guam, Port Moresby\",\"value\":\"Pacific/Guam\"},\n  {\"label\":\"(GMT+10:00) Vladivostok\",\"value\":\"Asia/Vladivostok\"},\n  {\"label\":\"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",\"value\":\"Asia/Magadan\"},\n  {\"label\":\"(GMT+12:00) Auckland, Wellington\",\"value\":\"Pacific/Auckland\"},\n  {\"label\":\"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\"value\":\"Pacific/Fiji\"},\n  {\"label\":\"(GMT+13:00) Nuku'alofa\",\"value\":\"Pacific/Tongatapu\"}\n]\n\nconst timeZoneInts = [\n  {\"label\":\"(GMT-12:00) International Date Line West\",\"value\":\"-12\"},\n  {\"label\":\"(GMT-11:00) Midway Island, Samoa\",\"value\":\"-11\"},\n  {\"label\":\"(GMT-10:00) Hawaii\",\"value\":\"-10\"},\n  {\"label\":\"(GMT-09:00) Alaska\",\"value\":\"-9\"},\n  {\"label\":\"(GMT-08:00) Pacific Time (US & Canada)\",\"value\":\"-8\"},\n  {\"label\":\"(GMT-08:00) Tijuana, Baja California\",\"value\":\"-8\"},\n  {\"label\":\"(GMT-07:00) Arizona\",\"value\":\"-7\"},\n  {\"label\":\"(GMT-07:00) Chihuahua, La Paz, Mazatlan\",\"value\":\"-7\"},\n  {\"label\":\"(GMT-07:00) Mountain Time (US & Canada)\",\"value\":\"-7\"},\n  {\"label\":\"(GMT-06:00) Central America\",\"value\":\"-6\"},\n  {\"label\":\"(GMT-06:00) Central Time (US & Canada)\",\"value\":\"-6\"},\n  {\"label\":\"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\"value\":\"-5\"},\n  {\"label\":\"(GMT-05:00) Eastern Time (US & Canada)\",\"value\":\"-5\"},\n  {\"label\":\"(GMT-05:00) Indiana (East)\",\"value\":\"-5\"},\n  {\"label\":\"(GMT-04:00) Atlantic Time (Canada)\",\"value\":\"-4\"},\n  {\"label\":\"(GMT-04:00) Caracas, La Paz\",\"value\":\"-4\"},\n  {\"label\":\"(GMT-04:00) Manaus\",\"value\":\"-4\"},\n  {\"label\":\"(GMT-04:00) Santiago\",\"value\":\"-4\"},\n  {\"label\":\"(GMT-03:30) Newfoundland\",\"value\":\"-3.5\"},\n  {\"label\":\"(GMT-03:00) Brasilia\",\"value\":\"-3\"},\n  {\"label\":\"(GMT-03:00) Buenos Aires, Georgetown\",\"value\":\"-3\"},\n  {\"label\":\"(GMT-03:00) Greenland\",\"value\":\"-3\"},\n  {\"label\":\"(GMT-03:00) Montevideo\",\"value\":\"-3\"},\n  {\"label\":\"(GMT-02:00) Mid-Atlantic\",\"value\":\"-2\"},\n  {\"label\":\"(GMT-01:00) Cape Verde Is.\",\"value\":\"-1\"},\n  {\"label\":\"(GMT-01:00) Azores\",\"value\":\"-1\"},\n  {\"label\":\"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",\"value\":\"0\"},\n  {\"label\":\"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\"value\":\"0\"},\n  {\"label\":\"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\"value\":\"1\"},\n  {\"label\":\"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\"value\":\"1\"},\n  {\"label\":\"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",\"value\":\"1\"},\n  {\"label\":\"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\"value\":\"1\"},\n  {\"label\":\"(GMT+01:00) West Central Africa\",\"value\":\"1\"},\n  {\"label\":\"(GMT+02:00) Amman\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Athens, Bucharest, Istanbul\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Beirut\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Cairo\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Harare, Pretoria\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Jerusalem\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Minsk\",\"value\":\"2\"},\n  {\"label\":\"(GMT+02:00) Windhoek\",\"value\":\"2\"},\n  {\"label\":\"(GMT+03:00) Kuwait, Riyadh, Baghdad\",\"value\":\"3\"},\n  {\"label\":\"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",\"value\":\"3\"},\n  {\"label\":\"(GMT+03:00) Nairobi\",\"value\":\"3\"},\n  {\"label\":\"(GMT+03:00) Tbilisi\",\"value\":\"3\"},\n  {\"label\":\"(GMT+03:30) Tehran\",\"value\":\"3.5\"},\n  {\"label\":\"(GMT+04:00) Abu Dhabi, Muscat\",\"value\":\"4\"},\n  {\"label\":\"(GMT+04:00) Baku\",\"value\":\"4\"},\n  {\"label\":\"(GMT+04:00) Yerevan\",\"value\":\"4\"},\n  {\"label\":\"(GMT+04:30) Kabul\",\"value\":\"4.5\"},\n  {\"label\":\"(GMT+05:00) Yekaterinburg\",\"value\":\"5\"},\n  {\"label\":\"(GMT+05:00) Islamabad, Karachi, Tashkent\",\"value\":\"5\"},\n  {\"label\":\"(GMT+05:30) Sri Jayawardenapura\",\"value\":\"5.5\"},\n  {\"label\":\"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\"value\":\"5.5\"},\n  {\"label\":\"(GMT+05:45) Kathmandu\",\"value\":\"5.75\"},\n  {\"label\":\"(GMT+06:00) Almaty, Novosibirsk\",\"value\":\"6\"},{\"label\":\"(GMT+06:00) Astana, Dhaka\",\"value\":\"6\"},\n  {\"label\":\"(GMT+06:30) Yangon (Rangoon)\",\"value\":\"6.5\"},\n  {\"label\":\"(GMT+07:00) Bangkok, Hanoi, Jakarta\",\"value\":\"7\"},\n  {\"label\":\"(GMT+07:00) Krasnoyarsk\",\"value\":\"7\"},\n  {\"label\":\"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\"value\":\"8\"},\n  {\"label\":\"(GMT+08:00) Kuala Lumpur, Singapore\",\"value\":\"8\"},\n  {\"label\":\"(GMT+08:00) Irkutsk, Ulaan Bataar\",\"value\":\"8\"},\n  {\"label\":\"(GMT+08:00) Perth\",\"value\":\"8\"},\n  {\"label\":\"(GMT+08:00) Taipei\",\"value\":\"8\"},\n  {\"label\":\"(GMT+09:00) Osaka, Sapporo, Tokyo\",\"value\":\"9\"},\n  {\"label\":\"(GMT+09:00) Seoul\",\"value\":\"9\"},\n  {\"label\":\"(GMT+09:00) Yakutsk\",\"value\":\"9\"},\n  {\"label\":\"(GMT+09:30) Adelaide\",\"value\":\"9.5\"},\n  {\"label\":\"(GMT+09:30) Darwin\",\"value\":\"9.5\"},\n  {\"label\":\"(GMT+10:00) Brisbane\",\"value\":\"10\"},\n  {\"label\":\"(GMT+10:00) Canberra, Melbourne, Sydney\",\"value\":\"10\"},\n  {\"label\":\"(GMT+10:00) Hobart\",\"value\":\"10\"},\n  {\"label\":\"(GMT+10:00) Guam, Port Moresby\",\"value\":\"10\"},\n  {\"label\":\"(GMT+10:00) Vladivostok\",\"value\":\"10\"},\n  {\"label\":\"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",\"value\":\"11\"},\n  {\"label\":\"(GMT+12:00) Auckland, Wellington\",\"value\":\"12\"},\n  {\"label\":\"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\"value\":\"12\"},\n  {\"label\":\"(GMT+13:00) Nuku'alofa\",\"value\":\"13\"}\n]//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utility/TimeZone.js\n");

/***/ }),

/***/ "./src/utility/TrajectoryDistance.js":
/*!*******************************************!*\
  !*** ./src/utility/TrajectoryDistance.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   distDtw: () => (/* binding */ distDtw),\n/* harmony export */   distErp: () => (/* binding */ distErp),\n/* harmony export */   distL2FromLngLat: () => (/* binding */ distL2FromLngLat),\n/* harmony export */   distanceCoordsToSegment: () => (/* binding */ distanceCoordsToSegment),\n/* harmony export */   lngLatToXY: () => (/* binding */ lngLatToXY),\n/* harmony export */   mdistL2FromLngLat: () => (/* binding */ mdistL2FromLngLat),\n/* harmony export */   minimumDistance: () => (/* binding */ minimumDistance)\n/* harmony export */ });\nconst distL2FromLngLat = (a, b) => {\n  //Estimate differences of lat and lng degrees in meters.\n  //https://en.wikipedia.org/wiki/Geographic_coordinate_system\n  const latMid = ((a[1] + b[1]) / 2) * (Math.PI / 180);\n  const mPerLat =\n    111132.92 -\n    559.82 * Math.cos(2 * latMid) +\n    1.175 * Math.cos(4 * latMid) -\n    0.0023 * Math.cos(6 * latMid);\n  const mPerLng =\n    111412.84 * Math.cos(latMid) -\n    93.5 * Math.cos(3 * latMid) +\n    0.118 * Math.cos(5 * latMid);\n  const diffInMeters = [(b[0] - a[0]) * mPerLng, (b[1] - a[1]) * mPerLat];\n  return Math.hypot(...diffInMeters);\n};\n\nconst mdistL2FromLngLat = (t0, t1) => {\n  const mdist = [];\n  for (const a of t0) {\n    const row = [];\n    for (const b of t1) {\n      row.push(distL2FromLngLat(a, b));\n    }\n    mdist.push(row);\n  }\n  return mdist;\n};\n\nconst lngLatToXY = (lngLat) => {\n  // Radius of the Earth in meters\n  const R = 6378137;\n\n  // Convert latitude and longitude from degrees to radians\n  const longRad = (lngLat[0] * Math.PI) / 180;\n  const latRad = (lngLat[1] * Math.PI) / 180;\n\n  // Mercator projection formula\n  const x = R * longRad;\n  const y = R * Math.log(Math.tan(Math.PI / 4 + latRad / 2));\n\n  return [x, y];\n};\n\nconst distanceCoordsToSegment = (p, a, b) => {\n  const [px, py] = lngLatToXY(p);\n  const [ax, ay] = lngLatToXY(a);\n  const [bx, by] = lngLatToXY(b);\n  const A = px - ax;\n  const B = py - ay;\n  const C = bx - ax;\n  const D = by - ay;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq !== 0) {\n    param = dot / len_sq;\n  }\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = ax;\n    yy = ay;\n  } else if (param > 0 && param < 1) {\n    xx = ax + param * C;\n    yy = ay + param * D;\n  } else {\n    xx = bx;\n    yy = by;\n  }\n\n  const dx = px - xx;\n  const dy = py - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Returns the edit distance with real penalty (ERP) between two GNSS trajectories\n *\n * @param {array} t0 Trajectory (array) of [lng, lat] coordinates\n * @param {array} t1 Trajectory (array) of [lng, lat] coordinates\n * @param {array} g Reference [lng, lat] coordinate\n * @return {number} ERP distance\n *\n * @see {@link https://link.springer.com/article/10.1007/s00778-019-00574-9 | Trajectory distance article}\n * @see {@link https://github.com/bguillouet/traj-dist/tree/master | Python implementation}\n */\nconst distErp = (t0, t1, g) => {\n  const n0 = t0.length;\n  const n1 = t1.length;\n  const C = Array.from({ length: n0 + 1 }).map(() =>\n    Array.from({ length: n1 + 1 }).fill(0)\n  );\n\n  const gt0Dist = t0.map((x) => distL2FromLngLat(g, x));\n  const gt1Dist = t1.map((x) => distL2FromLngLat(g, x));\n  const mdist = mdistL2FromLngLat(t0, t1);\n\n  const sumgt0Dist = gt0Dist.reduce((acc, el) => acc + el, 0);\n  const sumgt1Dist = gt1Dist.reduce((acc, el) => acc + el, 0);\n  for (let i = 1; i < n0 + 1; i++) {\n    C[i][0] = sumgt0Dist;\n  }\n  for (let j = 1; j < n1 + 1; j++) {\n    C[0][j] = sumgt1Dist;\n  }\n  for (let i = 1; i < n0 + 1; ++i) {\n    for (let j = 1; j < n1 + 1; ++j) {\n      const derp0 = C[i - 1][j] + gt0Dist[i - 1];\n      const derp1 = C[i][j - 1] + gt1Dist[j - 1];\n      const derp01 = C[i - 1][j - 1] + mdist[i - 1][j - 1];\n      C[i][j] = Math.min(derp0, derp1, derp01);\n    }\n  }\n  const erp = C[n0][n1];\n  return erp;\n};\n\n/**\n * Returns the dynamic time wrapping distance (DTW) between two GNSS trajectories\n *\n * @param {array} t0 Trajectory (array) of [lng, lat] coordinates\n * @param {array} t1 Trajectory (array) of [lng, lat] coordinates\n * @return {number} DTW distance\n *\n * @see {@link https://link.springer.com/article/10.1007/s00778-019-00574-9 | Trajectory distance article}\n * @see {@link https://github.com/bguillouet/traj-dist/tree/master | Python implementation}\n */\nconst distDtw = (t0, t1) => {\n  const n0 = t0.length;\n  const n1 = t1.length;\n  const C = Array.from({ length: n0 + 1 }).map(() =>\n    Array.from({ length: n1 + 1 }).fill(0)\n  );\n  for (let i = 1; i < n0 + 1; i++) {\n    C[i][0] = Infinity;\n  }\n  for (let j = 1; j < n1 + 1; j++) {\n    C[0][j] = Infinity;\n  }\n  for (let i = 1; i < n0 + 1; ++i) {\n    for (let j = 1; j < n1 + 1; ++j) {\n      C[i][j] =\n        distL2FromLngLat(t0[i - 1], t1[j - 1]) +\n        Math.min(C[i][j - 1], C[i - 1][j - 1], C[i - 1][j]);\n    }\n  }\n  const dtw = C[n0][n1];\n  return dtw;\n};\n\n/**\n * Returns the minimum distance (smallest point-to-line distance) between a source and a target GNSS trajectory\n *\n * @param {array} source Source trajectory (array) of [lng, lat] coordinates\n * @param {array} target Target trajectory (array) of [lng, lat] coordinates\n * @return {number} minimum distance\n *\n */\nconst minimumDistance = (source, target) => {\n  let totalError = 0;\n  source.forEach((p) => {\n    let minDistance = Infinity;\n    for (let i = 0; i < target.length - 1; i++) {\n      const distance = distanceCoordsToSegment(p, target[i], target[i + 1]);\n      if (distance < minDistance) {\n        minDistance = distance;\n      }\n    }\n    totalError += minDistance;\n  });\n  return totalError;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utility/TrajectoryDistance.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;